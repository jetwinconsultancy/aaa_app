<?php
defined('BASEPATH') OR exit('No direct script access allowed');

use PhpOffice\PhpSpreadsheet\Spreadsheet;
use NcJoes\OfficeConverter\OfficeConverter;

header("Content-type:application/pdf");

require_once(__DIR__.'/../helpers/tcpdf/tcpdf.php');

class Transaction_document extends MY_Controller {

	public function __construct()
	{
		parent::__construct();
		$this->load->helper(array('form', 'download', 'url'));
		$this->load->library(array('encryption', 'zip', 'Phpword', 'Excel'));
		$this->load->model(array('convert_number_to_word_model', 'transaction_model', 'transaction_word_model'));

	}

	public function index()
	{
		$this->load->helper('pdf_helper');
		$document_master_id = [169];

		$array_link = [];
		if(count($document_master_id) != 0)
		{
			for($i = 0; $i < count($document_master_id); $i++)
			{
				$q = $this->db->query("select * from document_master where id = 326");

		       	$q = $q->result_array();

				$query = $this->db->query("select * from firm where id = '".$q[0]["firm_id"]."'");

				$query = $query->result_array();

		       	$this->load->helper('pdf_helper');

	    		// create new PDF document
			    $obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
				$obj_pdf->SetCreator(PDF_CREATOR);
				$title = "Delivery Order";
				$obj_pdf->SetTitle($title);
				$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs='<table style="width: 101.5%; height: 150px;"><tr><td style="width:101.5%; height: 150px;"><img src="'.base_url().'/img/do_header.jpeg" width="1200" height="150"></td></tr></table>', $tc=array(0,0,0), $lc=array(0,0,0));

				//$obj_pdf->setPrintFooter(false);
				$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
				$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
				$obj_pdf->SetDefaultMonospacedFont('helvetica');
				$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
				$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
				$obj_pdf->SetMargins(25, PDF_MARGIN_TOP, 25);
				$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
				$obj_pdf->SetFont('helvetica', '', 10);
				$obj_pdf->setFontSubsetting(false);
				$obj_pdf->AddPage();
				$obj_pdf->setY(33);

				$content = $q[0]["document_content"];
				$obj_pdf->writeHTML($content, true, false, false, false, '');

				$string_client_name = $this->myUrlEncode($q[0]["document_name"]);
				$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$this->myUrlEncode($string_client_name).'.pdf', 'F');

    			if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$this->myUrlEncode($string_client_name).'.pdf')){
			        echo "File Doesn't Exist...";exit;
			    }

				$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$this->myUrlEncode($string_client_name).'.pdf');
			}

			$this->zip->archive($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/my_backup.zip');

			chmod($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/my_backup.zip',0644);

			$this->zip->download('my_backup.zip');
		}
	}

	public function delete_document()
	{
		// Remove file 
		$this->load->helper("file");
		delete_files('./pdf/document/');

		echo json_encode(array("status" => true));
	}

	public function myUrlEncode($string) {
	    $replacements = array('');
	    $entities = array('!', '*', "'", "(", ")", ";", ":", "@", "&", "=", "+", "$", ",", "/", "?", "%", "#", "[", "]");
	    return str_replace($entities, $replacements, $string);
	}

	public function generate_document()
	{
		$document_master_id = $_POST["document_master_id"];
		$company_code = $_POST["company_code"];
		$transaction_task_name = $_POST["transaction_task_name"];
		$transaction_master_id = $_POST["transaction_master_id"];
		$printed_letterhead = $_POST["pre-printed_letterhead"];

		$array_link = [];
		if(count($document_master_id) != 0)
		{
			if($transaction_task_name == "Incorporation of new company" || $transaction_task_name == "Take Over of Secretarial")
			{
				$client_query = $this->db->query("select transaction_client.*, transaction_master.registration_no as transaction_master_register_no from transaction_client left join transaction_master on transaction_master.company_code = transaction_client.company_code where transaction_client.company_code='".$company_code."' AND transaction_client.transaction_id='".$transaction_master_id."'");
			}
			else
			{
				$client_query = $this->db->query("select * from client where company_code='".$company_code."' AND client.deleted != 1");
			}
			

			$client_query = $client_query->result_array();
			$client_query[0]["company_name"] = $this->encryption->decrypt($client_query[0]["company_name"]);

			$this->db->where('transaction_pending_documents.client_id', $client_query[0]["id"]);
			// $this->db->where('transaction_pending_documents.received_on', "");
			$this->db->where('transaction_pending_documents.firm_id', $this->session->userdata("firm_id"));
			$this->db->where('transaction_pending_documents.transaction_id', $transaction_master_id);
			$this->db->delete('transaction_pending_documents');
			
			$this->db->where('transaction_pending_documents_file.transaction_id', $transaction_master_id);
			$this->db->delete('transaction_pending_documents_file');

			for($i = 0; $i < count($document_master_id); $i++)
			{
				if($document_master_id[$i] != "null")
				{
					$q = $this->db->query("select * from document_master where id = '".$document_master_id[$i]."'");

			       	$q = $q->result_array();

					$query = $this->db->query("select * from firm where id = '".$q[0]["firm_id"]."'");

					$query = $query->result_array();

			       	$this->load->helper('pdf_helper');

					$pattern = "/{{[^}}]*}}/";
					$subject = $q[0]["document_content"];
					preg_match_all($pattern, $subject, $matches);

					$new_contents_info = $q[0]["document_content"];

					if($q[0]["document_name"] == "Form 44")
					{
						//Microsoft Word
						if($q[0]["document_category_id"] == 2)
		            	{
		            		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 44.docx");
		            	}
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('firm_address_letter', $this->transaction_word_model->getWordValue($transaction_master_id, "Firm address letter", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('firm_address', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Firm Tel', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Tel", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Firm Fax', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Fax", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
                		$data['created_by']=$this->session->userdata('user_id');

                		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "Form 49")
					{
						//Microsoft Word
						if($q[0]["document_category_id"] == 2)
		            	{
		            		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 49.docx");
		            	}
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('firm_address', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Firm Tel', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Tel", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Firm Fax', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Fax", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

						$title_position = $this->transaction_word_model->getWordValue($transaction_master_id, "Title Position", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						if(count($title_position) > 0)
						{
							$document->cloneRow('title position', count($title_position));

							for($nums = 0; $nums < count($title_position); $nums++)
							{	
								if($title_position[$nums]["position"] == "Director")
								{
									$get_transaction_director_list = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_officers_director_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									$document->cloneRow('title position#'.($nums+1), count($get_transaction_director_list));

									foreach($get_transaction_director_list as $key => $officers_row)
									{
										if($key == 0)
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "Director<w:br/>");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "<w:br/>");
											if(count($get_transaction_director_list) == 1)
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
										}
										else
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "");

											if(($key + 1) == count($get_transaction_director_list))
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
											
											//delete table row
											//$document->deleteRow('delete_row1#'.($nums+1).'#'.($key+1));
											// $document->deleteRow('delete_row2#'.($nums+1).'#'.($key+1));
										}

										$document->setValue('Officers - name#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										//$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
										$document->setValue('Officers IC#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS NATIONALITY#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors nationality - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS OCCUPATION#'.($nums+1).'#'.($key+1), "DIRECTOR");
										$document->setValue('Nature of Appoint Date#'.($nums+1).'#'.($key+1), "APPOINTED WITH EFFECT<w:br/>FROM DATE OF<w:br/>INCORPORATION");
									}
								}
								else if($title_position[$nums]["position"] == "Manager")
								{
									$get_transaction_manager_list = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_officers_manager_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									$document->cloneRow('title position#'.($nums+1), count($get_transaction_manager_list));

									foreach($get_transaction_manager_list as $key => $officers_row)
									{
										if($key == 0)
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "Manager<w:br/>");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "<w:br/>");
											if(count($get_transaction_manager_list) == 1)
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Managers address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Managers address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
										}
										else
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "");

											if(($key + 1) == count($get_transaction_manager_list))
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Managers address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Managers address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
										}

										$document->setValue('Officers - name#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Managers name - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('Officers IC#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Managers ID - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS NATIONALITY#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Managers nationality - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS OCCUPATION#'.($nums+1).'#'.($key+1), "MANAGER");
										$document->setValue('Nature of Appoint Date#'.($nums+1).'#'.($key+1), "APPOINTED WITH EFFECT<w:br/>FROM DATE OF<w:br/>INCORPORATION");
									}
								}
								else if($title_position[$nums]["position"] == "Secretary")
								{
									$get_transaction_secretary_list = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_officers_secretary_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									$document->cloneRow('title position#'.($nums+1), count($get_transaction_manager_list));

									foreach($get_transaction_secretary_list as $key => $officers_row)
									{
										if($key == 0)
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "Secretary<w:br/>");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "<w:br/>");
											if(count($get_transaction_manager_list) == 1)
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
										}
										else
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "");

											if(($key + 1) == count($get_transaction_manager_list))
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
											
											//delete table row
											//$document->deleteRow('delete_row1#'.($nums+1).'#'.($key+1));
											// $document->deleteRow('delete_row2#'.($nums+1).'#'.($key+1));
										}

										$document->setValue('Officers - name#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('Officers IC#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys ID - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS NATIONALITY#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys nationality - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS OCCUPATION#'.($nums+1).'#'.($key+1), "SECRETARY");
										$document->setValue('Nature of Appoint Date#'.($nums+1).'#'.($key+1), "APPOINTED WITH EFFECT<w:br/>FROM DATE OF<w:br/>INCORPORATION");
									}
								}
								else if($title_position[$nums]["position"] == "Auditor")
								{
									$get_transaction_secretary_list = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_officers_auditor_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									$document->cloneRow('title position#'.($nums+1), count($get_transaction_manager_list));

									foreach($get_transaction_secretary_list as $key => $officers_row)
									{
										if($key == 0)
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "Auditor<w:br/>");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "<w:br/>");
											if(count($get_transaction_manager_list) == 1)
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
											// $document->setValue('delete_row1#'.($nums+1).'#'.($key+1), "");
											// $document->setValue('delete_row2#'.($nums+1).'#'.($key+1), "");
										}
										else
										{
											$document->setValue('title position#'.($nums+1).'#'.($key+1), "");
											$document->setValue('break#'.($nums+1).'#'.($key+1), "");

											if(($key + 1) == count($get_transaction_manager_list))
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])."<w:br/><w:br/>");
											}
											else
											{
												$document->setValue('Officers - address#'.($nums+1).'#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
											}
											
											//delete table row
											//$document->deleteRow('delete_row1#'.($nums+1).'#'.($key+1));
											// $document->deleteRow('delete_row2#'.($nums+1).'#'.($key+1));
										}

										$document->setValue('Officers - name#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('Officers IC#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors ID - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS NATIONALITY#'.($nums+1).'#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors nationality - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
										$document->setValue('OFFICERS OCCUPATION#'.($nums+1).'#'.($key+1), "AUDITOR");
										$document->setValue('Nature of Appoint Date#'.($nums+1).'#'.($key+1), "APPOINTED WITH EFFECT<w:br/>FROM DATE OF<w:br/>INCORPORATION");
									}
								}
							// 	$document->setValue('Director Name Signature#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["name"])));
							// 	$document->setValue('Director Name Signature ID#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["identification_no"])));

							// 	$document->setValue('Director Name Signatures#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["name"])));
							// 	$document->setValue('Director Name Signature IDs#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["identification_no"])));
							}
						}

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
                		$data['created_by']=$this->session->userdata('user_id');

                		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "Form 45")
					{
						if($transaction_task_name == "Incorporation of new company")
						{
							$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment='' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8)");
						}
						else
						{
							$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag='appoint' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8)");
						}

						// print_r(array($company_code, $transaction_master_id, $get_directors_info->num_rows()));
						
						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();
							
							for($t = 0 ; $t < count($get_directors_info) ; $t++)
							{
								//Microsoft Word
								if($q[0]["document_category_id"] == 1)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 45.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 45_2.docx");
								}


								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));
								$incorporation_date = $this->transaction_word_model->getWordValue($transaction_master_id, "Incorporation date", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]);

								if($incorporation_date == 'date of incorporation')
								{
									$document->setValue('Incorporation date BOLD', $incorporation_date);
									$document->setValue('Incorporation date', "");
								}
								if($incorporation_date == '')
								{
									$document->setValue('Incorporation date BOLD', "");
									$document->setValue('Incorporation date', $incorporation_date);
								}
								
								$document->setValue('Directors name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Directors address - appointment', $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('Directors ID - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Directors nationality - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors nationality - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								//Microsoft Word End

								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

								$content = utf8_encode($new_contents);

								//$obj_pdf->writeHTML($content, true, false, true, false, '');

								$string_directors_name = $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]));
								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_directors_name).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_directors_name).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_directors_name).'.pdf');

								//Microsoft Word
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_directors_name).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_directors_name).'.docx');
								//Microsoft Word End

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "Form 45B")
					{
						if($transaction_task_name == "Appointment and Resign of Secretarial")
						{
							$sec_where = " AND transaction_client_officers.appoint_resign_flag = 'appoint'";
						}
						else
						{
							$sec_where = "";
						}

						$get_secretary_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 4".$sec_where."");
						if($get_secretary_info->num_rows())
						{
							$get_secretary_info = $get_secretary_info->result_array();
							
							for($t = 0 ; $t < count($get_secretary_info) ; $t++)
							{
								//Microsoft Word
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 45B.docx");

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								$incorporation_date = $this->transaction_word_model->getWordValue($transaction_master_id, "Incorporation date", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]);
								if($incorporation_date == 'date of incorporation')
								{
									$document->setValue('Incorporation date BOLD', $incorporation_date);
									$document->setValue('Incorporation date', "");
								}
								elseif($incorporation_date == '')
								{
									$document->setValue('Incorporation date BOLD', "");
									$document->setValue('Incorporation date', "");
								}
								else
								{
									$document->setValue('Incorporation date BOLD', "");
									$document->setValue('Incorporation date', $incorporation_date);
								}
								$document->setValue('Secretarys name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Secretarys address - appointment', $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								$secretary_id = $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys ID - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]);
								$document->setValue('Secretarys ID - appointment', htmlspecialchars($secretary_id));
								if($secretary_id == "S8085328I")
								{
									$document->setImageValue('Secretary_signature', "img/thomas_signature.jpeg");
								}
								else
								{
									$document->setValue('Secretary_signature', "");
								}
								$document->setValue('Secretarys nationality - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys nationality - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								//Microsoft Word End

								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

								if($this->encryption->decrypt($get_secretary_info[$t]["name"]) == "LOOI YONG KEAN" || $this->encryption->decrypt($get_secretary_info[$t]["name"]) == "KONG TZE KARN")
								{
									if(strpos($new_contents_info, '<div class="hide_table"') !== false)
	                				{
	                					$new_contents_info = str_replace('<div class="hide_table">','<div class="hide_table" style="display: none">',$new_contents_info);
	                				}
								}

								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_secretary_info[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// if($get_secretary_info[$t]["name"] == "YEAP WEN CHINQ")
								// {
								// 	$obj_pdf->setXY(145, $obj_pdf->getY() - 45);

								// 	$obj_pdf->Image('img/thomas_signature.jpeg', '', '', 25, 20, '', '', 'T', false, 1000, '', false, false, 0, false, false, false);
								// }
								// $string_secretary_name = $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]));
								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_secretary_name).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_secretary_name).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $string_secretary_name).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$get_secretary_info[$t]["name"];
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);

		                		//Microsoft Word
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.docx');
								//Microsoft Word End
							}
						}
					}
					else if($q[0]["document_name"] == "Shares allotment form" || $q[0]["document_name"] == "Allotment-Share Cert" || $q[0]["document_name"] == "Allotment-Share Application Form" || $q[0]["document_name"] == "Transferee-Share Cert")
					{
						if($q[0]["document_name"] == "Transferee-Share Cert")
						{
							$get_member_info = $this->transaction_model->getTransactionShareTransferRecordForCert($transaction_master_id);
						}
						else
						{
							$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_member_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
						}

						if(count($get_member_info) > 0)
						{
							//Microsoft Word
							if($q[0]["document_name"] == 'Shares allotment form')
							{
								if($q[0]["document_category_id"] == 1)
								{
									$templateProcessor = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Shares allotment form.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$templateProcessor = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Application of shares.docx");
								}

								$templateProcessor->cloneBlock('CLONEBLOCK', count($get_member_info));
							}
							//End Microsoft Word

							for($t = 0 ; $t < count($get_member_info) ; $t++)
							{
								if($get_member_info[$t]["number_of_share"] > 0)
								{	
									//Microsoft Word
									if($q[0]["document_name"] == 'Allotment-Share Cert')
									{
										$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Allotment-Share Cert.docx");

										$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - certificate', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - certificate", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$each_certificate_no = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - certificate", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$document->setValue('Allotment - number of shares', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - number of shares(number)', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares(number)", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - members', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Allotment - members address', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - members address line 1', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address line 1", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - members address line 2', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address line 2", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - type of shares', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Allotment - currency', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - currency", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Allotment - amount of shares', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - amount of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
									}
								
									if($q[0]["document_name"] == 'Shares allotment form')
									{
										$allotment_members = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$allotment_members_id = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members ID", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$allotment_members_address = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$allotment_members_address_letter = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address(letter)", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$allotment_members_nationality = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members nationality", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);

										$allotment_number_of_shares = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"], null, $q[0]["document_category_id"]);

										$allotment_amount_of_shares = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - amount of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"], null, $q[0]["document_category_id"]);

										$allotment_number_of_shares_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares all", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);

										$identity_name = $this->transaction_word_model->getWordValue($transaction_master_id, "identity_name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$nation_name = $this->transaction_word_model->getWordValue($transaction_master_id, "nation_name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$corp_rep_name = $this->transaction_word_model->getWordValue($transaction_master_id, "corp_rep_name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$corp_rep_id = $this->transaction_word_model->getWordValue($transaction_master_id, "corp_rep_id", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$acra_registra_no = $this->transaction_word_model->getWordValue($transaction_master_id, "acra_registra_no", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
										$acra_registra_no_dot = $this->transaction_word_model->getWordValue($transaction_master_id, "acra_registra_no_dot", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);

										$templateProcessor->setValue('Allotment - type of shares', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));

										$templateProcessor->setValue('company_name', htmlspecialchars($client_query[0]["company_name"]), 1);
										$templateProcessor->setValue('Allotment - members', htmlspecialchars($allotment_members), 2);
										$templateProcessor->setValue('Allotment - members ID', $allotment_members_id, 1);
										$templateProcessor->setValue('identity_name', htmlspecialchars($identity_name), 1);
										$templateProcessor->setValue('nation_name', htmlspecialchars($nation_name), 1);
										$templateProcessor->setValue('acra_registra_no', htmlspecialchars($acra_registra_no), 1);
										$templateProcessor->setValue('acra_registra_no_dot', htmlspecialchars($acra_registra_no_dot), 1);
										$templateProcessor->setValue('Allotment - members address', $allotment_members_address, 1);
										$templateProcessor->setValue('Allotment - members address(letter)', $allotment_members_address_letter, 1);
									
										$templateProcessor->setValue('Allotment - members nationality', htmlspecialchars($allotment_members_nationality), 1);
										$templateProcessor->setValue('Allotment - number of shares', $allotment_number_of_shares, 1);
										$templateProcessor->setValue('Allotment - amount of shares', $allotment_amount_of_shares, 1);
										$templateProcessor->setValue('Allotment - number of shares all', $allotment_number_of_shares_all, 1);
										$templateProcessor->setValue('corp_rep_name', htmlspecialchars($corp_rep_name), 1);
										$templateProcessor->setValue('corp_rep_id', htmlspecialchars($corp_rep_id), 1);
									}
									//End Microsoft Word

									//Microsoft Word
									if($q[0]["document_name"] == 'Allotment-Share Application Form')
									{
										$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Allotment-Share Application Form.docx");

										$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - number of shares', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - amount of paid', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - amount of paid", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - type of shares', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Allotment - members', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Allotment - members ID', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members ID", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Allotment - members address', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
							        }
						            //Microsoft Word End

							        //Microsoft Word
									if($q[0]["document_name"] == 'Transferee-Share Cert')
									{
										$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Transferee-Share Cert.docx");

										$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Transferee - certificate', $get_member_info[$t]["TransfereeCertificate"]);
										$each_certificate_no = $get_member_info[$t]["TransfereeCertificate"];
										$document->setValue('Transferee - share number(number)', $get_member_info[$t]["TransfereeShareNumber(Number)"]);

										$document->setValue('Transferee - name', htmlspecialchars($get_member_info[$t]["TransfereeName"]));

										$document->setValue('Transferee - members address', $get_member_info[$t]["TransfereeAddress"]);

										$document->setValue('Transferee - share number', $get_member_info[$t]["TransfereeShareNumber"]);

										$document->setValue('Transferee - share type', htmlspecialchars($get_member_info[$t]["TransfereeShareType"]));

										$document->setValue('Transferee - members address line 1', $get_member_info[$t]["membersAddressLine1"]);
										$document->setValue('Transferee - members address line 2', $get_member_info[$t]["membersAddressLine2"]);

									}

									$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
									$obj_pdf->SetCreator(PDF_CREATOR);
									$title = "Document";
									$obj_pdf->SetTitle($title);

									if($q[0]["document_name"] == "Shares allotment form")
									{
										$obj_pdf->setHeaderData($ln='', $lw='', $ht='', $hs='<div style="font-family: Helvetica, Sans-Serif;text-align: center;position: fixed; margin: 20px; width: 100%; font-weight: bold; font-size: 17px;">'.$client_query[0]["company_name"].'</div><br/><hr>', $tc=array(0,0,0), $lc=array(0,0,0));
									}

									$obj_pdf->setPrintFooter(false);
									$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
									$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
									$obj_pdf->SetDefaultMonospacedFont('helvetica');
									$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
									$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
									$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
									$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
									$obj_pdf->SetFont('helvetica', '', 10);
									$obj_pdf->setFontSubsetting(false);
									
									if($q[0]["document_name"] == "Allotment-Share Cert" || $q[0]["document_name"] == "Transferee-Share Cert")
									{
										$obj_pdf->AddPage('L');
									}
									else
									{
										$obj_pdf->AddPage();
									}
									
									$obj_pdf->setY(25);

									if($q[0]["document_name"] == "Allotment-Share Application Form")
									{	
				                		if($get_member_info[$t]['name'] != null)
				                		{	
				                			$signing_allot_name = '';
				                			$signing_allot_name_word = '';
				                		}
				                		elseif($get_member_info[$t]['company_name'] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$get_member_info[$t]['register_no'].'" and corporate_representative.subsidiary_name = "'.$get_member_info[$t]['tr_client_company_name'].'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			for($b = 0; $b < count($get_corp_rep_info); $b++)
			                				{
			                					$directors_html_string_corp_rep = '<span>__________________________</span><br/><span>'.$get_corp_rep_info[$b]["name_of_corp_rep"].'</span><br/><span>Corporate Representative of</span><br/><span>'.$this->encryption->decrypt($get_member_info[$t]['company_name']).'</span>';

			                					$directors_html_string_corp_rep_word = '__________________________<w:br/>'.$get_corp_rep_info[$b]["name_of_corp_rep"].'<w:br/>(Corporate Representative of<w:br/>'.$this->encryption->decrypt($get_member_info[$t]['company_name']).')';
			                					
			                				}

			                				$signing_allot_name = $directors_html_string_corp_rep;
			                				$signing_allot_name_word = $directors_html_string_corp_rep_word;
				                		}
				                		elseif($get_member_info[$t]['client_company_name'] != null)
				                		{	
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$get_member_info[$t]['registration_no'].'" and corporate_representative.subsidiary_name = "'.$get_member_info[$t]['tr_client_company_name'].'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();
				                			
				                			for($b = 0; $b < count($get_corp_rep_info); $b++)
			                				{
			                					$directors_html_string_corp_rep = '<span>__________________________</span><br/><span>'.$get_corp_rep_info[$b]["name_of_corp_rep"].'</span><br/><span>Corporate Representative of</span><br/><span>'.$get_member_info[$t]['client_company_name'].'</span>';

			                					$directors_html_string_corp_rep_word = '__________________________<w:br/>'.$get_corp_rep_info[$b]["name_of_corp_rep"].'<w:br/>(Corporate Representative of<w:br/>'.$get_member_info[$t]['client_company_name'].')';
			                				}

			                				$signing_allot_name = $directors_html_string_corp_rep;
			                				$signing_allot_name_word = $directors_html_string_corp_rep_word;
				                		}

				                		$latest_new_contents_info = str_replace('<span class="myclass mceNonEditable">{{Corporate representative}}</span>', $signing_allot_name, $new_contents_info);

				                		//Microsoft Word
				                		$document->setValue('Corporate representative', htmlspecialchars($signing_allot_name_word));
				                		//Microsoft Word End

					                }
					                else
					                {
					                	$latest_new_contents_info = $new_contents_info;
					                }
									
									$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $latest_new_contents_info, $get_member_info[$t]["id"], $q[0]["document_name"], $get_member_info[$t]["new_certificate_no"]);

									$content = $new_contents;

									$obj_pdf->writeHTML($content, true, false, false, false, '');

									if($get_member_info[$t]["name"] != null)
									{
										$member_name = $this->encryption->decrypt($get_member_info[$t]["name"]);
									}
									else if($get_member_info[$t]["company_name"] != null)
									{
										$member_name = $this->encryption->decrypt($get_member_info[$t]["company_name"]);
									}
									else if($get_member_info[$t]["client_company_name"] != null)
									{
										$member_name = $this->encryption->decrypt($get_member_info[$t]["client_company_name"]);
									}

									if($q[0]["document_name"] == "Shares allotment form" || $q[0]["document_name"] == "Allotment-Share Application Form")
									{
										// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($member_name)).'.pdf', 'F');

										// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($member_name)).'.pdf'))
						    // 			{
									 //        echo "File Doesn't Exist...";exit;
									 //    }

										// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($member_name)).'.pdf');
										//Microsoft Word
										if($q[0]["document_name"] == "Allotment-Share Application Form")
							            {
						            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($member_name)).'.docx');

											$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($member_name)).'.docx');
							            }
							            //Microsoft Word End
									}
									else
									{
										// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Share Cert '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($get_member_info[$t]["new_certificate_no"])).'.pdf', 'F');

										// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Share Cert '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($get_member_info[$t]["new_certificate_no"])).'.pdf'))
						    // 			{
									 //        echo "File Doesn't Exist...";exit;
									 //    }

										// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Share Cert '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($get_member_info[$t]["new_certificate_no"])).'.pdf');

										//Microsoft Word
										if($q[0]["document_name"] == 'Allotment-Share Cert' || $q[0]["document_name"] == 'Transferee-Share Cert')
										{
						            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Share Cert '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($each_certificate_no)).'.docx');

											$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Share Cert '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($each_certificate_no)).'.docx');
										}
										//Microsoft Word End
									}

									$data['transaction_id'] = $transaction_master_id;
									$data['type'] = "trans"; 
									$data['client_id'] = $client_query[0]["id"];
									$data['firm_id'] = $q[0]["firm_id"];
									$data['document_name'] = $q[0]["document_name"].' - '.$member_name;
									$data['triggered_by'] = 1;
									$data['document_date_checkbox'] = 1;
									$data['transaction_date'] = DATE("d/m/Y",now());
									$data['content'] = $content;
			                		$data['created_by']=$this->session->userdata('user_id');

			                		$this->save_incorporate_pdf($data);
			                	}
							}
						}

						//Microsoft Word
						if($q[0]["document_name"] == 'Shares allotment form')
						{
							$templateProcessor->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						}
						//End Microsoft Word
					}
					else if ($q[0]["document_name"] == "Nominee Director Agreement" || ($q[0]["document_name"] == "Declaration for Nominee Director" && $q[0]["document_category_id"] == 1)) 
					{
						$reader = new \PhpOffice\PhpSpreadsheet\Reader\Xls();
						//echo json_encode("value");
						if($transaction_task_name == "Incorporation of new company")
						{
							$get_nominee_directors_info = $this->db->query("select transaction_client_officers.*, officer.name, officer.identification_no, officer.date_of_birth, nationality.nationality, officer.address_type, officer.postal_code1, officer.street_name1, officer.building_name1, officer.unit_no1, officer.unit_no2, officer.foreign_address1, officer.foreign_address2, officer.foreign_address3, officer.alternate_address, officer.postal_code2, officer.street_name2, officer.building_name2, officer.unit_no3, officer.unit_no4 from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join nationality on nationality.id = officer.nationality where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 8");

							$get_nominee_directors_info = $get_nominee_directors_info->result_array();
						}
						else
						{
							$get_nominee_directors_info = $this->transaction_model->getApptNomineeDirectorController($company_code, $transaction_master_id);
						}

						//print_r($get_nominee_directors_info);

						if(count($get_nominee_directors_info) > 0 && $get_nominee_directors_info)
				        {
							for($k = 0; $k < count($get_nominee_directors_info); $k++)
			                {
			                	if($get_nominee_directors_info[$k]["alternate_address"] == "1")
								{
									$director_unit_no1 = $get_nominee_directors_info[$k]["unit_no3"];
									$director_unit_no2 = $get_nominee_directors_info[$k]["unit_no4"];
									$director_street_name = $get_nominee_directors_info[$k]["street_name2"];
									$director_building_name = $get_nominee_directors_info[$k]["building_name2"];
									$director_postal_code = $get_nominee_directors_info[$k]["postal_code2"];
								}
								else
								{
									$director_unit_no1 = $get_nominee_directors_info[$k]["unit_no1"];
									$director_unit_no2 = $get_nominee_directors_info[$k]["unit_no2"];
									$director_street_name = $get_nominee_directors_info[$k]["street_name1"];
									$director_building_name = $get_nominee_directors_info[$k]["building_name1"];
									$director_postal_code = $get_nominee_directors_info[$k]["postal_code1"];
								}

								if($transaction_task_name == "Incorporation of new company")
								{
									$nominee_director_name = $this->encryption->decrypt($get_nominee_directors_info[$k]['name']);
									$nominee_director_id_no = $this->encryption->decrypt($get_nominee_directors_info[$k]['identification_no']);
									$nominee_director_nationality = $get_nominee_directors_info[$k]['nationality'];

									$address = array(
										'type' 			=> $get_nominee_directors_info[$k]['address_type'],
										'street_name1' 	=> $director_street_name,
										'unit_no1'		=> $director_unit_no1,
										'unit_no2'		=> $director_unit_no2,
										'building_name1'=> $director_building_name,
										'postal_code1'	=> $director_postal_code,
										'foreign_address1' => $get_nominee_directors_info[$k]["foreign_address1"],
										'foreign_address2' => $get_nominee_directors_info[$k]["foreign_address2"],
										'foreign_address3' => $get_nominee_directors_info[$k]["foreign_address3"]
									);

									//Microsoft Word
				                	$word_offis_address_content = $this->transaction_word_model->getWordValue($transaction_master_id, "Nominee Director Address Format", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_nominee_directors_info[$k]);
				                	//Microsoft Word End
								}
								else
								{
									$nominee_director_name = $get_nominee_directors_info[$k]['name'];
									$nominee_director_id_no = $get_nominee_directors_info[$k]['identification_no'];
									$nominee_director_nationality = $get_nominee_directors_info[$k]['officer_nationality_name'];

									$address = array(
										'type' 			=> $get_nominee_directors_info[$k]["officer_address_type"],
										'street_name1' 	=> $get_nominee_directors_info[$k]["street_name1"],
										'unit_no1'		=> $get_nominee_directors_info[$k]["officer_unit_no1"],
										'unit_no2'		=> $get_nominee_directors_info[$k]["officer_unit_no2"],
										'building_name1'=> $get_nominee_directors_info[$k]["building_name1"],
										'postal_code1'	=> $get_nominee_directors_info[$k]["postal_code1"]
									);

									$word_offis_address_content = $this->transaction_word_model->write_address_local_foreign($address, "letter", "big_cap");
								}


			                	if($q[0]["document_name"] == "Nominee Director Agreement")
			                	{
				                	//Microsoft Word
				                	$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Nominee Director Agreement.docx");
				                	//Microsoft Word End

				                	$nominee_directors_content = $new_contents_info;

				                	$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
									$obj_pdf->SetCreator(PDF_CREATOR);
									$title = "Document";
									$obj_pdf->SetTitle($title);

									$obj_pdf->setPrintFooter(false);
									$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
									$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
									$obj_pdf->SetDefaultMonospacedFont('helvetica');
									$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
									$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
									$obj_pdf->SetMargins(25, 20, 25);
									$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
									$obj_pdf->SetFont('helvetica', '', 10);
									$obj_pdf->setFontSubsetting(false);
									$obj_pdf->AddPage();

									if($get_nominee_directors_info[$k]['name'] != null)
				                	{
				                		//$name = $this->encryption->decrypt($get_nominee_directors_info[$k]['name']);

				                		$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee Director Name}}</span>', $name, $nominee_directors_content);
				                	}

				                	if($get_nominee_directors_info[$k]['identification_no'] != null)
				                	{
				                		$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee of Identification No}}</span>', $this->encryption->decrypt($get_nominee_directors_info[$k]['identification_no']), $nominee_directors_content);
				                	}

									if($get_nominee_directors_info[$k]['address_type'] == "Local")
									{
										if($director_unit_no1 != "" || $director_unit_no2 != "")
										{
											$client_unit = ' #'.$director_unit_no1 .' - '.$director_unit_no2;
										}
										else
										{
											$client_unit = "";
										}

										if($director_building_name != "")
										{
											$members_building_name_1 = ' '.$director_building_name;
										}
										else
										{
											$members_building_name_1 = '';
										}

										$offis_address_content = $director_street_name.',<br/>'.$client_unit.''.$members_building_name_1.',<br/>SINGAPORE '.$director_postal_code;
										
									}
									else if($get_nominee_directors_info[$k]['address_type'] == "Foreign")
									{
										$foreign_address1 = !empty($get_nominee_directors_info[$k]["foreign_address1"])?$get_nominee_directors_info[$k]["foreign_address1"]: '';
										$foreign_address2 = !empty($get_nominee_directors_info[$k]["foreign_address2"])?',<br/>'.$get_nominee_directors_info[$k]["foreign_address2"]: '';
										$foreign_address3 = !empty($get_nominee_directors_info[$k]["foreign_address3"])?',<br/>'.$get_nominee_directors_info[$k]["foreign_address3"]: '';

										$offis_address_content = $foreign_address1.$foreign_address2.$foreign_address3;
									}
									
									$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee Director Address}}</span>', ucwords(strtolower($offis_address_content)), $nominee_directors_content);
									
				                	$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $nominee_directors_content, null, $q[0]["document_name"]);

				                	$content = str_replace('<p class="align" style="text-align: justify;">', '<p class="align" style="text-align: justify;" nobr="true">', $content);

				     //            	$obj_pdf->writeHTML($content, true, false, false, false, '');

									// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf', 'F');

									// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $name).'.pdf'))
					    // 			{
								 //        echo "File Doesn't Exist...";exit;
								 //    }

									// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf');

									$data['transaction_id'] = $transaction_master_id;
									$data['type'] = "trans"; 
									$data['client_id'] = $client_query[0]["id"];
									$data['firm_id'] = $q[0]["firm_id"];
									$data['document_name'] = $q[0]["document_name"].' - '.$name;
									$data['triggered_by'] = 1;
									$data['document_date_checkbox'] = 1;
									$data['transaction_date'] = DATE("d/m/Y",now());
									$data['content'] = $content;
				            		$data['created_by']=$this->session->userdata('user_id');

				            		$this->save_incorporate_pdf($data);

				            		//Microsoft Word
									$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Nominee Director Fee', $this->transaction_word_model->getWordValue($transaction_master_id, "Nominee Director Fee", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Nominee Director Deposit', $this->transaction_word_model->getWordValue($transaction_master_id, "Nominee Director Deposit", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Nominee Director Name', htmlspecialchars($nominee_director_name));
									$document->setValue('Nominee of Identification No', htmlspecialchars($nominee_director_id_no));
									$document->setValue('Nominee Director Address', $word_offis_address_content);

									$get_directors_info_with_address = $this->transaction_word_model->getWordValue($transaction_master_id, "All Director info without signature", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if(count($get_directors_info_with_address) > 0)
									{
										$document->cloneRow('Director Name', count($get_directors_info_with_address));

										for($num = 0; $num < count($get_directors_info_with_address); $num++)
										{	
											$nominee_director_address = $this->transaction_word_model->getWordValue($transaction_master_id, "Nominee Director Address Format", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info_with_address[$num]);

											if($num == 0)
											{
												$document->setValue('Director Name#'.($num+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_address[$num]["name"])));
												$document->setValue('Director identification no#'.($num+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_address[$num]["identification_no"])));
												$document->setValue('Director address#'.($num+1), $nominee_director_address);
											}
											else
											{
												$document->setValue('Director Name#'.($num+1), 'AND<w:br/><w:br/>'.htmlspecialchars($this->encryption->decrypt($get_directors_info_with_address[$num]["name"])));
												$document->setValue('Director identification no#'.($num+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_address[$num]["identification_no"])));
												$document->setValue('Director address#'.($num+1), $nominee_director_address);
											}

										}
									}

									$get_directors_info_with_signature = $this->transaction_word_model->getWordValue($transaction_master_id, "All Director info with signature", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if(count($get_directors_info_with_signature) > 0)
									{
										$document->cloneRow('Director Name Signature', count($get_directors_info_with_signature));

										$document->cloneRow('Director Name Signatures', count($get_directors_info_with_signature));

										for($nums = 0; $nums < count($get_directors_info_with_signature); $nums++)
										{	
											$document->setValue('Director Name Signature#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["name"])));
											$document->setValue('Director Name Signature ID#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["identification_no"])));

											$document->setValue('Director Name Signatures#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["name"])));
											$document->setValue('Director Name Signature IDs#'.($nums+1), htmlspecialchars($this->encryption->decrypt($get_directors_info_with_signature[$nums]["identification_no"])));
										}
									}
									//Microsoft Word End

				            		//Microsoft Word
				            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($nominee_director_name)).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($nominee_director_name)).'.docx');
									//Microsoft Word End
								}
								else if($q[0]["document_name"] == "Declaration for Nominee Director")
								{
									// file path
									$spreadsheet = $reader->load($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration for Nominee Director.xls");

									$new_sheet = $spreadsheet->getActiveSheet();

									if($transaction_task_name == "Incorporation of new company")
									{
										$new_sheet->setCellValue('G36', $this->transaction_word_model->getWordValue($transaction_master_id, "empty_effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									}
									else
									{
										$new_sheet->setCellValue('G36', $get_nominee_directors_info[$k]['date_become_nominator']);
									}

									$new_sheet->setCellValue('C4', htmlspecialchars($client_query[0]['company_name']));

									$new_sheet->setCellValue('C5', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "empty_UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

									$new_sheet->setCellValue('A7', "I, ".htmlspecialchars($nominee_director_name)." (Name) ".htmlspecialchars($nominee_director_id_no)." (Identification No.)  hereby make the following declaration:");
									$new_sheet->setCellValue('C25', htmlspecialchars($nominee_director_name));
									$new_sheet->setCellValue('G25', htmlspecialchars($nominee_director_name));
									$new_sheet->setCellValue('G26', "N/A");

									$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");

									$new_sheet->setCellValue('G27', htmlspecialchars($address_content));

									$new_sheet->setCellValue('G30', htmlspecialchars($nominee_director_nationality));
									$new_sheet->setCellValue('G32', htmlspecialchars($nominee_director_id_no));
									$new_sheet->setCellValue('G34', $get_nominee_directors_info[$k]['date_of_birth']);
									

									$new_sheet->setCellValue('A39', htmlspecialchars($nominee_director_name));
									$new_sheet->setCellValue('G39', htmlspecialchars($nominee_director_id_no));

									$writer = new \PhpOffice\PhpSpreadsheet\Writer\Xls($spreadsheet);
					 
						        	$filename = $_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Declaration for Nominee Director - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($nominee_director_name)).'.xls';

						        	$writer->save($filename);

									$this->zip->read_file($filename);
								}
			                }
			            }
					}
					else if($q[0]["document_name"] == "Declaration for Nominee Director" && $q[0]["document_category_id"] == 2) 
					{
						$reader = new \PhpOffice\PhpSpreadsheet\Reader\Xls();

						$appt_director_controller = $this->transaction_model->getApptNomineeDirectorController($company_code, $transaction_master_id);
						$get_nominee_directors_info = $appt_director_controller;

						if(count($get_nominee_directors_info) > 0 && $get_nominee_directors_info);
				        {
							foreach($get_nominee_directors_info as $key => $client_controller)
							{
								$spreadsheet = $reader->load($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration for Nominee Director v2.xls");
								$new_sheet = $spreadsheet->getActiveSheet();

								$new_sheet->setCellValue('C4', htmlspecialchars($client_query[0]['company_name']));

								$new_sheet->setCellValue('C5', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "empty_UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

								if($client_controller["name"] != null)
								{
									$controller_name = $client_controller["name"];
									$controller_ID = $client_controller["identification_no"];
								}
								else if($client_controller["officer_company_company_name"] != null)
								{
									$controller_name = $client_controller["officer_company_company_name"];
									$controller_ID = $client_controller["register_no"];
								}
								else if($client_controller["client_company_name"] != null)
								{
									$controller_name = $client_controller["client_company_name"];
									$controller_ID = $client_controller["registration_no"];
								}

								$new_sheet->setCellValue('A8', "I, ".htmlspecialchars($controller_name)." (Name) ".htmlspecialchars($controller_ID)." (NRIC No.)  hereby make the following declaration:");

								if($client_controller["name"] != null)
								{
									$new_sheet->setCellValue('G27', htmlspecialchars($controller_name));
									$new_sheet->setCellValue('G28', htmlspecialchars($client_controller['alias']));


					                $address = array(
										'type' 			=> $client_controller["officer_address_type"],
										'street_name1' 	=> $client_controller["street_name1"],
										'unit_no1'		=> $client_controller["officer_unit_no1"],
										'unit_no2'		=> $client_controller["officer_unit_no2"],
										'building_name1'=> $client_controller["building_name1"],
										'postal_code1'	=> $client_controller["postal_code1"],
										'foreign_address1' => $client_controller["foreign_address1"],
										'foreign_address2' => $client_controller["foreign_address2"],
										'foreign_address3' => $client_controller["foreign_address3"]
									);
									$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");

									$new_sheet->setCellValue('G29', $address_content);

									$new_sheet->setCellValue('G31', htmlspecialchars($client_controller['officer_nationality_name']));

									$new_sheet->setCellValue('G32', htmlspecialchars($controller_ID));

									$new_sheet->setCellValue('G33', $client_controller['date_of_birth']);

									// $new_sheet->setCellValue('G34', htmlspecialchars($client_controller['date_of_registration']));
									$new_sheet->setCellValue('G34', htmlspecialchars($client_controller['date_become_nominator']));
								}
								else
								{
									$new_sheet->setCellValue('H52', htmlspecialchars($controller_name));

									$new_sheet->setCellValue('H53', htmlspecialchars($client_controller["entity_issued_by_registrar"]));

									if($client_controller["client_controller_field_type"] == "company")
					                {
										$address = array(
											'type' 			=> $client_controller["officer_company_address_type"],
											'street_name1' 	=> $client_controller["company_street_name"],
											'unit_no1'		=> $client_controller["company_unit_no1"],
											'unit_no2'		=> $client_controller["company_unit_no2"],
											'building_name1'=> $client_controller["company_building_name"],
											'postal_code1'	=> $client_controller["company_postal_code"],
											'foreign_address1' => $client_controller["company_foreign_address1"],
											'foreign_address2' => $client_controller["company_foreign_address2"],
											'foreign_address3' => $client_controller["company_foreign_address3"]
										);
									}
									else if($client_controller["client_controller_field_type"] == "client")
									{
										$address = array(
											'type' 			=> "Local",
											'street_name1' 	=> $client_controller["street_name"],
											'unit_no1'		=> $client_controller["unit_no1"],
											'unit_no2'		=> $client_controller["unit_no2"],
											'building_name1'=> $client_controller["building_name"],
											'postal_code1'	=> $client_controller["postal_code"],
											'foreign_address1' => $client_controller["foreign_add_1"],
											'foreign_address2' => $client_controller["foreign_add_2"],
											'foreign_address3' => $client_controller["foreign_add_3"]
										);
									}
									$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");

									$new_sheet->setCellValue('H55', htmlspecialchars($address_content));

									$new_sheet->setCellValue('H57', htmlspecialchars(($client_controller["legal_form_entity"]!=null?$client_controller["legal_form_entity"]:$client_controller["client_company_type"]!=null?$client_controller["client_company_type"]:"")));
					                
									if($client_controller["statutes_of"] != null)
									{
										$statutes_of = ', '.$client_controller["statutes_of"];
									}
									else if($client_controller["client_statutes_of"] != null)
									{
										$statutes_of = ', '.$client_controller["client_statutes_of"];
									}
									else
									{
										$statutes_of = '';
									}

									$new_sheet->setCellValue('H59', htmlspecialchars(($client_controller["country_of_incorporation"]!=null?$client_controller["country_of_incorporation"]:$client_controller["client_country_of_incorporation"]!=null?$client_controller["client_country_of_incorporation"]:"").$statutes_of));

									$new_sheet->setCellValue('H60', htmlspecialchars(($client_controller["coporate_entity_name"]!=null?$client_controller["coporate_entity_name"]:$client_controller["client_coporate_entity_name"]!=null?$client_controller["client_coporate_entity_name"]:"")));

									$new_sheet->setCellValue('H61', htmlspecialchars($controller_ID));

									$new_sheet->setCellValue('H62', htmlspecialchars($client_controller['date_become_nominator']));
								}

								$new_sheet->setCellValue('A69', htmlspecialchars($controller_name));
								$new_sheet->setCellValue('G69', htmlspecialchars($controller_ID));

								$writer = new \PhpOffice\PhpSpreadsheet\Writer\Xls($spreadsheet);
					        	$filename = $_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Declaration for Nominee Director - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $controller_name).'.xls';

					        	$writer->save($filename);
								$this->zip->read_file($filename);
							}
			            }
					}
					else if ($q[0]["document_name"] == "Form of Nominee Director") 
					{
						$get_nominee_directors_info = $this->db->query("select transaction_client_officers.*, officer.name, officer.identification_no, officer.date_of_birth, nationality.nationality from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join nationality on nationality.id = officer.nationality where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 8");

						$get_nominee_directors_info = $get_nominee_directors_info->result_array();

						if(count($get_nominee_directors_info) > 0)
				        {
							for($k = 0; $k < count($get_nominee_directors_info); $k++)
			                {
			                	//Microsoft Word
			                	$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form of Nominee Director.docx");

			                	$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
			                	$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
			                	$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
			                	$document->setValue('Nominee Director Name', htmlspecialchars($this->encryption->decrypt($get_nominee_directors_info[$k]['name'])));
			                	$document->setValue('Nominee of nationality', htmlspecialchars($get_nominee_directors_info[$k]['nationality']));
			                	$document->setValue('Nominee of Identification No', htmlspecialchars($this->encryption->decrypt($get_nominee_directors_info[$k]['identification_no'])));
			                	$document->setValue('Nominee Director Date of Birth', date("j F Y", strtotime($get_nominee_directors_info[$k]['date_of_birth'])));

			                	//Microsoft Word End
			                	$nominee_directors_content = $new_contents_info;

			                	$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);

								$obj_pdf->setPrintFooter(false);
								$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
								$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
								$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
								$obj_pdf->SetMargins(25, 20, 25);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

								if($get_nominee_directors_info[$k]['name'] != null)
			                	{
			                		$name = $this->encryption->decrypt($get_nominee_directors_info[$k]['name']);

			                		$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee Director Name}}</span>', $name, $nominee_directors_content);
			                	}

			                	if($get_nominee_directors_info[$k]['nationality'] != null)
			                	{
			                		$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee of nationality}}</span>', $get_nominee_directors_info[$k]['nationality'], $nominee_directors_content);
			                	}

			                	if($get_nominee_directors_info[$k]['identification_no'] != null)
			                	{
			                		$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee of Identification No}}</span>', $this->encryption->decrypt($get_nominee_directors_info[$k]['identification_no']), $nominee_directors_content);
			                	}

			                	if($get_nominee_directors_info[$k]['date_of_birth'] != null)
			                	{
			                		$date_of_birth_nominee = date("j F Y", strtotime($get_nominee_directors_info[$k]['date_of_birth']));
			                		$nominee_directors_content = str_replace('<span class="myclass mceNonEditable">{{Nominee Director Date of Birth}}</span>', $date_of_birth_nominee, $nominee_directors_content);
			                	}

			                	$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $nominee_directors_content, null, $q[0]["document_name"]);

			     //            	$obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$name;
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
			            		$data['created_by']=$this->session->userdata('user_id');

			            		$this->save_incorporate_pdf($data);

			            		//Microsoft Word
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.docx');
								//Microsoft Word End
			                }
			            }
					}
					else if($q[0]["document_name"] == "Notice of Controller")
					{
						if($transaction_task_name == "Share Transfer" || $transaction_task_name == "Share Allotment")
						{
							$query = $this->transaction_word_model->getWordValue($transaction_master_id, "Member to Controller", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
							$document_number = "";
						}
						else if($transaction_task_name == "AGM & AR")
						{
							$query = $this->transaction_word_model->getWordValue($transaction_master_id, "Existing Member more than 25 percent", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
							$document_number = "08.";
						}
						else
						{
				        	$query = $this->transaction_word_model->getWordValue($transaction_master_id, "Transaction Client Controller Info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
				        	$document_number = "";
						}

				        if(count($query) > 0)
				        {
							if($transaction_task_name == "Share Transfer" || $transaction_task_name == "Share Allotment" || $transaction_task_name == "AGM & AR")
							{
								$get_secretary_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Client Secretary Info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
							}
							else
							{
					        	$get_secretary_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Secretary Info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
							}

					        for($g = 0; $g < count($query); $g++)
			                {	
			                	//Microsoft Word
			                	$this->generate_notice_of_controller($query[$g], $transaction_task_name, $transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $get_secretary_info, "updateOtherServices");
								//Microsoft Word End
			                	$controller_content = $new_contents_info;

			                	$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);

								$obj_pdf->setPrintFooter(false);
								$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
								$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
								$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
								$obj_pdf->SetMargins(25, 20, 25);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

			                	if($query[$g]['name'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller Name}}</span>', $this->encryption->decrypt($query[$g]['name']), $controller_content);

			                		$name = $this->encryption->decrypt($query[$g]['name']);
			                	}
			                	elseif($query[$g]['company_name'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller Name}}</span>', $this->encryption->decrypt($query[$g]['company_name']), $controller_content);

			                		$name = $this->encryption->decrypt($query[$g]['company_name']);
			                	}
			                	elseif($query[$g]['client_company_name'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller Name}}</span>', $query[$g]['client_company_name'], $controller_content);

			                		$name = $query[$g]['client_company_name'];
			                	}

			                	if($query[$g]['identification_no'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller identification no}}</span>', $this->encryption->decrypt($query[$g]['identification_no']), $controller_content);
			                	}
			                	elseif($query[$g]['register_no'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller identification no}}</span>', $this->encryption->decrypt($query[$g]['register_no']), $controller_content);
			                	}
			                	elseif($query[$g]['registration_no'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller identification no}}</span>', $query[$g]['registration_no'], $controller_content);
			                	}

			                	if($query[$g]['address'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller address}}</span>', $query[$g]['address'], $controller_content);
			                	}

			                	if($query[$g]['nationality_name'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller nationality}}</span>', $query[$g]['nationality_name'], $controller_content);
			                	}

			                	if($query[$g]['date_of_birth'] != null)
			                	{
			                		$controller_content = str_replace('<span class="myclass mceNonEditable">{{Controller date of birth}}</span>', date("d-m-Y", strtotime($query[$g]['date_of_birth'])), $controller_content);
			                	}

			                	$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $controller_content, null, $q[0]["document_name"]);

			                	$obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($name)).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$name;
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
			            		$data['created_by']=$this->session->userdata('user_id');

			            		$this->save_incorporate_pdf($data);
			                }
			            }
					}
					else if($q[0]["document_name"] == "CSS Proposal")
					{
						$query = $this->db->query("select firm.*, firm_email.email, firm_telephone.telephone, firm_fax.fax from firm 
										JOIN firm_email ON firm_email.firm_id = firm.id AND firm_email.primary_email = 1 
										JOIN firm_telephone ON firm_telephone.firm_id = firm.id AND firm_telephone.primary_telephone = 1 
										JOIN firm_fax ON firm_fax.firm_id = firm.id AND firm_fax.primary_fax = 1
										where firm.id = '".$this->session->userdata("firm_id")."'");

						$query = $query->result_array();

						//Microsoft Word
						$PHPWord = new \PhpOffice\PhpWord\PhpWord();

						$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/CSS Proposal.docx");

						$document->setImageValue('CompanyLogo', "uploads/logo/". $query[0]["file_name"] ."");
						$document->setValue('firm_name', htmlspecialchars($query[0]["name"]));
						$document->setValue('UEN', $query[0]["registration_no"]);

						$firm_address = array(
							'type' 			=> 'Local',
							'street_name1' 	=> $query[0]["street_name"],
							'unit_no1'		=> $query[0]["unit_no1"],
							'unit_no2'		=> $query[0]["unit_no2"],
							'building_name1'=> $query[0]["building_name"],
							'postal_code1'	=> $query[0]["postal_code"]
						);

						$address = $this->transaction_word_model->write_address_local_foreign($firm_address, "comma", "small_cap");

						$document->setValue('firm_address', $address);
						$document->setValue('firm_telephone', htmlspecialchars($query[0]["telephone"]));
						$document->setValue('firm_fax', htmlspecialchars($query[0]["fax"]));
						$document->setValue('firm_email', htmlspecialchars($query[0]["email"]));

						$document->setValue('company_name', htmlspecialchars($client_query[0]["company_name"]));

						$company_address = array(
							'type' 			=> 'Local',
							'street_name1' 	=> $client_query[0]["street_name"],
							'unit_no1'		=> $client_query[0]["unit_no1"],
							'unit_no2'		=> $client_query[0]["unit_no2"],
							'building_name1'=> $client_query[0]["building_name"],
							'postal_code1'	=> $client_query[0]["postal_code"]
						);

						$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
						$document->setValue('company_address', $address);

						if($transaction_task_name == "Incorporation of new company")
						{
							$background_info_content = "at the point of incorporation.";
						}
						else
						{
							$background_info_content = "according to the business activity as per registered on Accounting and Corporate Regulatory Authority (ACRA)";
						}
						$document->setValue('background_info_content', $background_info_content);

						$check_gst_status_query = $this->db->query("SELECT gst_firm.*, firm.jurisdiction_id, firm.gst_checkbox FROM gst_firm LEFT JOIN firm ON firm.id = gst_firm.firm_id WHERE gst_firm.register_date <= CURRENT_DATE() AND (gst_firm.deregister_date >= CURRENT_DATE() OR gst_firm.deregister_date IS NULL) AND gst_firm.firm_id = '".$q[0]["firm_id"]."'");

						if($transaction_task_name == "Incorporation of new company" || $transaction_task_name == "Change of Registered Office Address" || $transaction_task_name == "Appointment and Resign of Director" || $transaction_task_name == "Appointment and Resign of Secretarial")
						{
							if($check_gst_status_query->num_rows() > 0)
							{
								$check_gst_status_array = $check_gst_status_query->result_array();
								$select_gst_rate = ", gst_category_info.rate";
								$left_join_gst = " LEFT JOIN our_service_gst ON our_service_gst.our_service_info_id = our_service_info.id and our_service_gst.jurisdiction_id = '".$check_gst_status_array[0]["jurisdiction_id"]."'
									LEFT JOIN gst_category_info ON gst_category_info.deleted = 0 AND gst_category_info.id = our_service_gst.category_id AND gst_category_info.start_date <= CURRENT_DATE() AND (gst_category_info.end_date >= CURRENT_DATE() OR gst_category_info.end_date IS NULL)";
								$got_gst = true;
							}
							else
							{
								$select_gst_rate = "";
								$left_join_gst = "";
								$got_gst = false;
							}

							$get_billing_info = $this->db->query("select transaction_client_billing_info.*, our_service_info.service_name, unit_pricing.unit_pricing_name as frequency_name, currency.currency as currency_name".$select_gst_rate." from transaction_client_billing_info left join our_service_info on our_service_info.id = transaction_client_billing_info.service left join unit_pricing on unit_pricing.id = transaction_client_billing_info.unit_pricing left join currency on currency.id = transaction_client_billing_info.currency".$left_join_gst." where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_billing_info.deleted = 0 ORDER BY transaction_client_billing_info.id");
						}
						else
						{
							// $get_billing_info = $this->db->query("select client_billing_info.*, our_service_info.service_name, unit_pricing.unit_pricing_name as frequency_name, currency.currency as currency_name".$select_gst_rate." from client_billing_info left join our_service_info on our_service_info.id = client_billing_info.service left join unit_pricing on unit_pricing.id = client_billing_info.unit_pricing left join currency on currency.id = client_billing_info.currency".$left_join_gst." where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND client_billing_info.deleted = 0 ORDER BY client_billing_info.id");

							$get_billing_info = $this->db->query("select billing.*, billing_service.id as billing_service_id, billing_service.billing_id, billing_service.service, billing_service.invoice_description, billing_service.amount as billing_service_amount, billing_service.gst_rate, billing_service.gst_new_way, billing_service.gst_category_id, billing_service.unit_pricing, unit_pricing.unit_pricing_name as frequency_name, currency.currency as currency_name, billing_service.claim_service_id, our_service_info.service_name from billing left join transaction_master_with_billing on transaction_master_with_billing.billing_id = billing.id left join billing_service on billing_service.billing_id = billing.id left join our_service_info on our_service_info.id = billing_service.service left join unit_pricing on unit_pricing.id = billing_service.unit_pricing left join currency on currency.id = billing.currency_id where transaction_master_with_billing.transaction_master_id = '".$transaction_master_id."' and our_service_info.deleted = 0 and our_service_info.approved = 1 ORDER BY billing_service.id");


							// $q = $this->db->query("select billing_receipt_record.receipt_id, billing_receipt_record.billing_id, billing_receipt_record.received, group_concat(receipt.receipt_no SEPARATOR '<br />') as receipt_no, billing.*, payment_mode.payment_mode, currency.currency as currency_name from transaction_master_with_billing left join billing on billing.id = transaction_master_with_billing.billing_id left join billing_receipt_record on billing_receipt_record.billing_id = billing.id left join receipt on receipt.id = billing_receipt_record.receipt_id left join payment_mode on payment_mode.id = receipt.payment_mode left join currency on billing.currency_id = currency.id where transaction_master_with_billing.transaction_master_id = '".$transaction_master_id."' AND outstanding <= 0 GROUP BY billing.invoice_no");
						}

						$get_billing_info = $get_billing_info->result_array();
						//print_r($get_billing_info);

						$document->cloneRow('billing_services', count($get_billing_info));

						if (count($get_billing_info) > 0) 
						{
							for($g = 0; $g < count($get_billing_info); $g++)
		                	{
		                		$document->setValue('billing_services#'.($g+1), htmlspecialchars($get_billing_info[$g]["service_name"]));
		                		$document->setValue('billing_currency#'.($g+1), $get_billing_info[$g]["currency_name"]);
		                		
		                		if($got_gst)
								{
									$total_with_gst = number_format((float)((1 + ((float)$get_billing_info[$g]["rate"] / 100)) *  (float)$get_billing_info[$g]["amount"]), 2);
									$gst_wording = " w/GST";
								}
								else
								{
									$total_with_gst = number_format((float)$get_billing_info[$g]["amount"], 2);
									$gst_wording = "";
								}
								
								$document->setValue('billing_amount#'.($g+1), $total_with_gst . $gst_wording);

		            			if($get_billing_info[$g]["frequency_name"] == "Month")
		            			{
		            				$unit_pricing_name = "Monthly";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Quarter")
		            			{
		            				$unit_pricing_name = "Quarterly";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Half a year")
		            			{
		            				$unit_pricing_name = "Half Yearly";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Year")
		            			{
		            				$unit_pricing_name = "Yearly";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Assessment")
		            			{
		            				$unit_pricing_name = "Per Year of Assessment";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Financial Year")
		            			{
		            				$unit_pricing_name = "Per Financial Year";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Transaction")
		            			{
		            				$unit_pricing_name = "Per Transaction";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Service")
		            			{
		            				$unit_pricing_name = "Per Transaction";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Application")
		            			{
		            				$unit_pricing_name = "Per Application";
		            			}
		            			elseif($get_billing_info[$g]["frequency_name"] == "Review")
		            			{
		            				$unit_pricing_name = "Per Review";
		            			}

		            			$document->setValue('billing_period#'.($g+1), htmlspecialchars($unit_pricing_name));
		                	}
		                }

	                	$director_signature_result = $this->db->query("select director_signature_1, director_signature_2 from transaction_client_signing_info where company_code='".$company_code."'");
	                	if ($director_signature_result->num_rows() == 0) 
						{
							$director_signature_result = $this->db->query("select director_signature_1, director_signature_2 from client_signing_info where company_code='".$company_code."'");
						}

						if ($director_signature_result->num_rows() > 0) 
						{
		                	$director_signature_result = $director_signature_result->result_array();

		                	if($director_signature_result[0]["director_signature_2"] != "0")
		                	{
		                		$document->cloneRow('director_signature', 2);
		                	}

		                	if($director_signature_result[0]["director_signature_1"] != "0")
		                	{
			                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_1"]."'");

			                	if ($client_officer->num_rows() == 0) 
								{
									$client_officer = $this->db->query("select * from client_officers where id='".$director_signature_result[0]["director_signature_1"]."'");
								}

		                		$client_officer = $client_officer->result_array();

		                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

		                		$officer_result = $officer_result->result_array();

		                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

		                		if($director_signature_result[0]["director_signature_2"] != "0")
			                	{
				                	$document->setValue('director_signature#1', htmlspecialchars($name));
				                }
				                else
				                {
				                	$document->setValue('director_signature', htmlspecialchars($name));
				                }
		                	}
		                	else
		                	{
		                		$document->setValue('director_signature', "");
		                	}

		                	if($director_signature_result[0]["director_signature_2"] != "0")
		                	{
			                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_2"]."'");

			                	if ($client_officer->num_rows() == 0) 
								{
									$client_officer = $this->db->query("select * from client_officers where id='".$director_signature_result[0]["director_signature_2"]."'");
								}

		                		$client_officer = $client_officer->result_array();

		                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

		                		$officer_result = $officer_result->result_array();

		                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

			                	$document->setValue('director_signature#2', htmlspecialchars($name));
			                	
		                	}
		                	
		                }
						
						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//End Microsoft Word

						$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
						$obj_pdf->SetCreator(PDF_CREATOR);
						$title = "Document";
						$obj_pdf->SetTitle($title);

						$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs='<table style="width: 100%; border-collapse: collapse; height: 75px; font-family: arial, helvetica, sans-serif; font-size: 10pt" border="0"><tbody>
				<tr style="height: 95px;">
				<td style="width: 37.0114%; height: 75px;" align="center"><img src="uploads/logo/'. $query[0]["file_name"] .'" height="60" /></td>
				<td style="width: 62.9886%; height: 75px;">
					<span style="font-size: 14pt;"><strong>'.$query[0]["name"].'</strong></span><br />
					<span style="font-size: 8pt; text-align:left;">UEN: '. $query[0]["registration_no"] .'<br/>Address: '. $query[0]["street_name"] .', #'. $query[0]["unit_no1"] .'-'.$query[0]["unit_no2"].' '. $query[0]["building_name"] .', Singapore '. $query[0]["postal_code"] .'<br />Tel: '. $query[0]["telephone"] .' &nbsp; Fax: '. $query[0]["fax"] .'<br /><span style="font-size: 8px; color: #007ac0;">Email: '. $query[0]["email"] .'</span>&nbsp;</span></td>
				</tr></tbody></table><hr cellpadding="2">', $tc=array(0,0,0), $lc=array(0,0,0));

						$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
						$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
						$obj_pdf->SetDefaultMonospacedFont('helvetica');
						$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
						$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
						$obj_pdf->SetMargins(25, PDF_MARGIN_TOP, 25);
						$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
						$obj_pdf->SetFont('helvetica', '', 10);
						$obj_pdf->setFontSubsetting(false);
						$obj_pdf->AddPage();
						$obj_pdf->SetTopMargin(37);

						$str = $new_contents_info;
						$latest_billing_table = "";
			            $allotment_string = "";

						if(strpos($str, '<tr class="loop"') !== false)
	                	{
		            		preg_match_all ('/<tr class="loop"(.+?)<\/tr>/s', $str, $abstract_string_array);
		            	
		                	for($g = 0; $g < count($get_billing_info); $g++)
		                	{
		            			$billing_html_string = $abstract_string_array[0][0];

		                		if(strpos($billing_html_string, '<span class="myclass mceNonEditable">{{Billing services}}</span>') !== false)
			                	{
		                				$billing_html_string = str_replace('<span class="myclass mceNonEditable">{{Billing services}}</span>', $get_billing_info[$g]["service_name"], $billing_html_string);
		                		}

		                		if(strpos($billing_html_string, '{{Billing currency}}') !== false)
		                		{
		                			$billing_html_string = str_replace('{{Billing currency}}', $get_billing_info[$g]["currency_name"], $billing_html_string);
		                		}

		                		if(strpos($billing_html_string, '<span class="myclass mceNonEditable">{{Billing amount}}</span>') !== false)
		                		{
		                			$billing_html_string = str_replace('<span class="myclass mceNonEditable">{{Billing amount}}</span>', number_format($get_billing_info[$g]["amount"], 2), $billing_html_string);
		                		}

		                		if(strpos($billing_html_string, '<span class="myclass mceNonEditable">{{Billing period}}</span>') !== false)
		                		{
		                			if($get_billing_info[$g]["frequency_name"] == "Month")
		                			{
		                				$unit_pricing_name = "Monthly";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Quarter")
		                			{
		                				$unit_pricing_name = "Quarterly";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Half a year")
		                			{
		                				$unit_pricing_name = "Half Yearly";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Year")
		                			{
		                				$unit_pricing_name = "Yearly";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Assessment")
		                			{
		                				$unit_pricing_name = "Per Year of Assessment";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Financial Year")
		                			{
		                				$unit_pricing_name = "Per Financial Year";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Transaction")
		                			{
		                				$unit_pricing_name = "Per Transaction";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Service")
		                			{
		                				$unit_pricing_name = "Per Transaction";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Application")
		                			{
		                				$unit_pricing_name = "Per Application";
		                			}
		                			elseif($get_billing_info[$g]["frequency_name"] == "Review")
		                			{
		                				$unit_pricing_name = "Per Review";
		                			}

		                			$billing_html_string = str_replace('<span class="myclass mceNonEditable">{{Billing period}}</span>', $unit_pricing_name, $billing_html_string);
		                		}

		                		$latest_billing_table = $latest_billing_table.$billing_html_string;
		                		
			            		
		                	}
		                	$new_contents = str_replace($abstract_string_array[0][0], $latest_billing_table, $str);
		                }

		                $director_signature_result = $this->db->query("select director_signature_1, director_signature_2 from transaction_client_signing_info where company_code='".$company_code."'");

						if ($director_signature_result->num_rows() > 0) 
						{
		                	$director_signature_result = $director_signature_result->result_array();

		                	if($director_signature_result[0]["director_signature_1"] != "0")
		                	{
			                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_1"]."'");

		                		$client_officer = $client_officer->result_array();

		                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

		                		$officer_result = $officer_result->result_array();

		                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

			                	$new_contents = str_replace('<span class="myclass mceNonEditable">{{Director Signature 1}}</span>', $name, $new_contents);
		                	}
		                	else
		                	{
		                		$new_contents = str_replace('<div class="director_signature_1">', '<div class="director_signature_1" style="display: none">', $new_contents);
		                	}

		                	if($director_signature_result[0]["director_signature_2"] != "0")
		                	{
			                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_2"]."'");

		                		$client_officer = $client_officer->result_array();

		                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

		                		$officer_result = $officer_result->result_array();

		                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

			                	$new_contents = str_replace('<span class="myclass mceNonEditable">{{Director Signature 2}}</span>', $name, $new_contents);
			                	
		                	}
		                	else
		                	{
		                		$new_contents = str_replace('<div class="director_signature_2">', '<div class="director_signature_2" style="display: none">', $new_contents);
		                	}
		                }

						
						$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents, null, $q[0]["document_name"]);

						// $obj_pdf->writeHTML($content, true, false, false, false, '');

						// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "CONSTITUTION")
					{
						$PHPWord = new \PhpOffice\PhpWord\PhpWord();

						if($q[0]["document_category_id"] == 1)
						{
							$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/CONSTITUTION.docx");
						}
						elseif($q[0]["document_category_id"] == 2)
						{
							$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/CONSTITUTION_KL.docx");
						}
						
						$document->setValue('company_name', htmlspecialchars($client_query[0]["company_name"]));

						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('transaction_company_type', $this->transaction_word_model->getWordValue($transaction_master_id, "Transaction Company type", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('underline_effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "underline_effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						$allotment_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "allotment_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						$document->cloneRow('member_name', count($allotment_member_result));
						if($q[0]["document_category_id"] == 1)
						{
							$document->cloneRow('list_member_name', count($allotment_member_result));
						}

						$total_number_share = 0;
						$total_amount_share = 0;
						for($g = 0; $g < count($allotment_member_result); $g++)
			            {
							if($allotment_member_result[$g]["name"] != '')
	            			{
	            				$document->setValue('member_name#'.($g+1), htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["name"])));
	            				$document->setValue('list_member_name#'.($g+1), htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["name"])));
	            				$document->setValue('member_share#'.($g+1), number_format($allotment_member_result[$g]["number_of_share"]));
	            				if($q[0]["document_category_id"] == 2)
								{
		            				$document->setValue('class_of_share#'.($g+1), strtoupper(($allotment_member_result[$g]["other_class"]) != ""?$allotment_member_result[$g]["other_class"]:$allotment_member_result[$g]["sharetype_name"]));
		            				$document->setValue('share_currency#'.($g+1), strtoupper($allotment_member_result[$g]["currency_short_name"]));
		            			}

	            				$total_number_share = $total_number_share + intval($allotment_member_result[$g]["number_of_share"]);
	            				$total_amount_share = $total_amount_share + floatval($allotment_member_result[$g]["amount_share"]);

	            				if($allotment_member_result[$g]["alternate_address"] == "1")
								{
									$director_unit_no1 = $allotment_member_result[$g]["unit_no3"];
									$director_unit_no2 = $allotment_member_result[$g]["unit_no4"];
									$director_street_name = $allotment_member_result[$g]["street_name2"];
									$director_building_name = $allotment_member_result[$g]["building_name2"];
									$director_postal_code = $allotment_member_result[$g]["postal_code2"];
								}
								else
								{
									$director_unit_no1 = $allotment_member_result[$g]["unit_no1"];
									$director_unit_no2 = $allotment_member_result[$g]["unit_no2"];
									$director_street_name = $allotment_member_result[$g]["street_name1"];
									$director_building_name = $allotment_member_result[$g]["building_name1"];
									$director_postal_code = $allotment_member_result[$g]["postal_code1"];
								}

								if($allotment_member_result[$g]['officer_address_type'] == "Local")
								{
									if($director_unit_no1 != "" || $director_unit_no2 != "")
									{
										$client_unit = ' #'.$director_unit_no1 .' - '.$director_unit_no2;
									}
									else
									{
										$client_unit = "";
									}

									if($director_building_name != "")
									{
										$members_building_name_1 = ' '.$director_building_name;
									}
									else
									{
										$members_building_name_1 = '';
									}

									$offis_address_content = '';
									$offis_address_content = $director_street_name.',<w:br/>';

									if($client_unit != '' || $members_building_name_1 != '')
									{
										$offis_address_content = $offis_address_content.$client_unit.''.$members_building_name_1.',<w:br/>SINGAPORE '.$director_postal_code;
									}
									else
									{
										$offis_address_content = $offis_address_content.'SINGAPORE '.$director_postal_code;
									}

									$document->setValue('member_address#'.($g+1), $offis_address_content);
									$document->setValue('list_member_address#'.($g+1), $offis_address_content);
								}
								else if($allotment_member_result[$g]['officer_address_type'] == "Foreign")
								{
									$foreign_address1 = !empty($allotment_member_result[$g]["foreign_address1"])?$allotment_member_result[$g]["foreign_address1"]: '';
									$foreign_address2 = !empty($allotment_member_result[$g]["foreign_address2"])?', 
									'.$allotment_member_result[$g]["foreign_address2"]: '';
									$foreign_address3 = !empty($allotment_member_result[$g]["foreign_address3"])?', 
									'.$allotment_member_result[$g]["foreign_address3"]: '';

									$document->setValue('member_address#'.($g+1), $foreign_address1.$foreign_address2.$foreign_address3);
									$document->setValue('list_member_address#'.($g+1), $foreign_address1.$foreign_address2.$foreign_address3);
								}

	            			}
	            			elseif($allotment_member_result[$g]["company_name"] != '')
	            			{
	            				$document->setValue('member_name#'.($g+1), htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["company_name"])));
	            				$document->setValue('list_member_name#'.($g+1), htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["company_name"])));
	            				$document->setValue('member_share#'.($g+1), number_format($allotment_member_result[$g]["number_of_share"]));
	            				if($q[0]["document_category_id"] == 2)
								{
		            				$document->setValue('class_of_share#'.($g+1), strtoupper(($allotment_member_result[$g]["other_class"]) != ""?$allotment_member_result[$g]["other_class"]:$allotment_member_result[$g]["sharetype_name"]));
		            				$document->setValue('share_currency#'.($g+1), strtoupper($allotment_member_result[$g]["currency_short_name"]));
		            			}

	            				$total_number_share = $total_number_share + intval($allotment_member_result[$g]["number_of_share"]);
	            				$total_amount_share = $total_amount_share + floatval($allotment_member_result[$g]["amount_share"]);

	            				if($allotment_member_result[$g]['officer_company_address_type'] != null)
								{
									if($allotment_member_result[$g]['officer_company_address_type'] == "Local")
									{
										if($allotment_member_result[$g]["company_unit_no1"] != "" || $allotment_member_result[$g]["company_unit_no2"] != "")
										{
											$client_unit = ' #'.$allotment_member_result[$g]["company_unit_no1"].' - '.$allotment_member_result[$g]["company_unit_no2"];
										}
										else
										{
											$client_unit = "";
										}

										if($allotment_member_result[$g]["building_name1"] != "")
										{
											$members_building_name_2 = ' '.$allotment_member_result[$g]["building_name1"];
										}

										$offis_company_address = $allotment_member_result[$g]["company_street_name"].',
										'. $client_unit.''.$members_building_name_2.',
										SINGAPORE '.$allotment_member_result[$g]["company_postal_code"];

										$document->setValue('member_address#'.($g+1), $offis_company_address);
										$document->setValue('list_member_address#'.($g+1), $offis_company_address);
									}
									else if($allotment_member_result[$g]['officer_company_address_type'] == "Foreign")
									{
										$company_foreign_address1 = !empty($allotment_member_result[$g]["company_foreign_address1"])?$allotment_member_result[$g]["company_foreign_address1"]: '';
										$company_foreign_address2 = !empty($allotment_member_result[$g]["company_foreign_address2"])?',
										'.$allotment_member_result[$g]["company_foreign_address2"]: '';
										$company_foreign_address3 = !empty($allotment_member_result[$g]["company_foreign_address3"])? ',
										'.$allotment_member_result[$g]["company_foreign_address3"]: '';

										$offis_company_address = $company_foreign_address1 . $company_foreign_address2 . $company_foreign_address3;

										$document->setValue('member_address#'.($g+1), $offis_company_address);
										$document->setValue('list_member_address#'.($g+1), $offis_company_address);
									}
								}
	            			}
	            			elseif($allotment_member_result[$g]["client_company_name"] != '')
	            			{
	            				$document->setValue('member_name#'.($g+1), htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["client_company_name"])));
	            				$document->setValue('list_member_name#'.($g+1), htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["client_company_name"])));
	            				$document->setValue('member_share#'.($g+1), number_format($allotment_member_result[$g]["number_of_share"]));
	            				if($q[0]["document_category_id"] == 2)
								{
		            				$document->setValue('class_of_share#'.($g+1), strtoupper(($allotment_member_result[$g]["other_class"]) != ""?$allotment_member_result[$g]["other_class"]:$allotment_member_result[$g]["sharetype_name"]));
		            				$document->setValue('share_currency#'.($g+1), strtoupper($allotment_member_result[$g]["currency_short_name"]));
		            			}

	            				$total_number_share = $total_number_share + intval($allotment_member_result[$g]["number_of_share"]);
	            				$total_amount_share = $total_amount_share + floatval($allotment_member_result[$g]["amount_share"]);

								if($allotment_member_result[$g]["client_unit_no1"] != "" || $allotment_member_result[$g]["client_unit_no2"] != "")
								{
									$client_unit = ' #'.$allotment_member_result[$g]["client_unit_no1"].' - '.$allotment_member_result[$g]["client_unit_no2"];
								}
								else
								{
									$client_unit = "";
								}

								if($allotment_member_result[$g]["building_name1"] != "")
								{
									$members_building_name_3 = ' '.$allotment_member_result[$g]["building_name1"];
								}

								$client_street_name = !empty($allotment_member_result[$g]["client_street_name"])?$allotment_member_result[$g]["client_street_name"]: '';
								if(!empty($client_unit) || !empty($members_building_name_3))
								{
									$break = ',
									';
								}
								else
								{
									$break = '';
								}

								$client_address = $client_street_name . $break . $client_unit.''.$members_building_name_3.',
								SINGAPORE '.$allotment_member_result[$g]["client_postal_code"];

								$document->setValue('member_address#'.($g+1), $client_address);
								$document->setValue('list_member_address#'.($g+1), $client_address);	
			
	            			}
	            		}

						$document->setValue('total_member_share', number_format($total_number_share));
						
						if($q[0]["document_category_id"] == 2)
						{
							$document->setValue('total_amount_of_share', number_format($total_amount_share, 2));
							$document->setValue('currency_name', strtoupper($allotment_member_result[0]["currency_short_name"]));
							$document->setValue('currency_short_name', strtoupper($allotment_member_result[0]["currency_name"]));
						}

						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8)");

						$get_directors_info = $get_directors_info->result_array();

						//Microsoft Word
						if(count($get_directors_info) > 0)
						{
							for($g = 0; $g < count($get_directors_info); $g++)
		                	{
		                		if($q[0]["document_category_id"] == 2)
								{
									if($g == 0)
									{
										$director_name = $this->encryption->decrypt($get_directors_info[$g]["name"]);
									}
									elseif($g == (count($get_directors_info)-1))
									{
										$director_name = $director_name.", and ".$this->encryption->decrypt($get_directors_info[$g]["name"]);
									}
									else
									{
										$director_name = $director_name.", ".$this->encryption->decrypt($get_directors_info[$g]["name"]);
									}
								}
		                	}

		                	if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('Directors name - appointment (comma)', htmlspecialchars($director_name));
							}
						}
						else
						{
							$document->setValue('Directors name - appointment (comma)', '');
						}

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' OF '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' OF '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

					}
					else if ($q[0]["document_name"] == "Declaration directors' interest S165 &156") 
					{
						$get_directors_info = $this->db->query("select client_officers.*, officer.name, officer.identification_no, officer.date_of_birth, nationality.nationality from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type left join nationality on nationality.id = officer.nationality where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

						$get_directors_info = $get_directors_info->result_array();

						if(count($get_directors_info) > 0)
				        {
							for($k = 0; $k < count($get_directors_info); $k++)
			                {
			                	//Microsoft Word
			                	$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration directors' interest S165 &156.docx");

			                	$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
			                	$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
			                	$document->setValue('Director Name', htmlspecialchars($this->encryption->decrypt($get_directors_info[$k]['name'])));
			                	$document->setValue('Director of Identification No', htmlspecialchars($this->encryption->decrypt($get_directors_info[$k]['identification_no'])));
			                	$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
			                	$latest_share_number = $this->transaction_word_model->getWordValue($transaction_master_id, "check_latest_share", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info[$k]["officer_id"]);
			                	if((int)$latest_share_number > 0 && $latest_share_number != "")
			                	{
			                		$document->setValue('shares', "Shares");
				                	$document->setValue('latest_share_number', $latest_share_number);
				                	$document->setValue('date_acquired', $this->transaction_word_model->getWordValue($transaction_master_id, "share_date_acquired", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info[$k]["officer_id"]));
				                }
				                else
				                {
				                	$document->setValue('shares', "");
				                	$document->setValue('latest_share_number', "");
				                	$document->setValue('date_acquired', "");
				                }
				                //$number_of_officer_info = $this->transaction_word_model->getWordValue($transaction_master_id, "number_of_officer_info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info[$k]["officer_id"]);
				                $director_declaration_company_name = $this->transaction_word_model->getWordValue($transaction_master_id, "director_declaration_company_name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info[$k]["officer_id"]);

				                // $director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if(count($director_declaration_company_name) > 0)
								{
									$document->cloneRow('director_declaration_company_name', count($director_declaration_company_name));

									for($g = 0; $g < count($director_declaration_company_name); $g++)
				                	{
				                		$document->setValue('director_declaration_company_name#'.($g+1), htmlspecialchars($director_declaration_company_name[$g]));
				                	}
								}
								else
								{
									$document->setValue('director_declaration_company_name', '');
								}

			                	// $document->setValue('Nominee of nationality', htmlspecialchars($get_nominee_directors_info[$k]['nationality']));
			                	
			                	// $document->setValue('Nominee Director Date of Birth', date("j F Y", strtotime($get_nominee_directors_info[$k]['date_of_birth'])));
								if($q[0]["document_name"] == "Declaration directors' interest S165 &156")
								{
									$document_number = "02.";
								}

			                	$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName."/pdf/document/".$document_number."Declaration directors' interest S165 &156 - ".preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$k]["name"]))).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName."/pdf/document/".$document_number."Declaration directors' interest S165 &156 - ".preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$k]["name"]))).'.docx');
			                }
			            }
			        }
					else if($q[0]["document_name"] == "Financial Support Letter")
					{
						$director_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "get_director_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						if(count($director_member_result) > 0)
						{
							for($g = 0; $g < count($director_member_result); $g++)
				            {
				            	$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Financial Support Letter.docx");

				            	if($director_member_result[$g]["name"] != '')
		            			{
		            				$document_person_name = $director_member_result[$g]["name"];
					            	$document->setValue('Name', htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["name"])));

					            	if($director_member_result[$g]["alternate_address"] == "1")
									{
										$director_unit_no1 = $director_member_result[$g]["unit_no3"];
										$director_unit_no2 = $director_member_result[$g]["unit_no4"];
										$director_street_name = $director_member_result[$g]["street_name2"];
										$director_building_name = $director_member_result[$g]["building_name2"];
										$director_postal_code = $director_member_result[$g]["postal_code2"];
									}
									else
									{
										$director_unit_no1 = $director_member_result[$g]["unit_no1"];
										$director_unit_no2 = $director_member_result[$g]["unit_no2"];
										$director_street_name = $director_member_result[$g]["street_name1"];
										$director_building_name = $director_member_result[$g]["building_name1"];
										$director_postal_code = $director_member_result[$g]["postal_code1"];
									}

									if($director_member_result[$g]['officer_address_type'] == "Local")
									{
										$company_address = array(
											'type' 			=> 'Local',
											'street_name1' 	=> $director_street_name,
											'unit_no1'		=> $director_unit_no1,
											'unit_no2'		=> $director_unit_no2,
											'building_name1'=> $director_building_name,
											'postal_code1'	=> $director_postal_code
										);

										$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
										$document->setValue('Address', $address);
									}
									else if($director_member_result[$g]['officer_address_type'] == "Foreign")
									{
										$foreign_address1 = !empty($director_member_result[$g]["foreign_address1"])?$director_member_result[$g]["foreign_address1"]: '';
										$foreign_address2 = !empty($director_member_result[$g]["foreign_address2"])?$director_member_result[$g]["foreign_address2"]: '';
										$foreign_address3 = !empty($director_member_result[$g]["foreign_address3"])?$director_member_result[$g]["foreign_address3"]: '';

										$company_address = array(
											'type' 			=> "Foreign",
											'foreign_address1' => $foreign_address1,
											'foreign_address2' => $foreign_address2,
											'foreign_address3' => $foreign_address3
										);

										$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
										$document->setValue('Address', $address);
									}
								}
								elseif($director_member_result[$g]["company_name"] != '')
	            				{
	            					$document_person_name = $director_member_result[$g]["company_name"];
	            					$document->setValue('Name', htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["company_name"])));

	            					if($director_member_result[$g]['officer_company_address_type'] == "Local")
									{
										$company_address = array(
											'type' 			=> 'Local',
											'street_name1' 	=> $director_member_result[$g]["company_street_name"],
											'unit_no1'		=> $director_member_result[$g]["company_unit_no1"],
											'unit_no2'		=> $director_member_result[$g]["company_unit_no2"],
											'building_name1'=> $director_member_result[$g]["company_building_name"],
											'postal_code1'	=> $director_member_result[$g]["company_postal_code"]
										);

										$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
										$document->setValue('Address', $address);
									}
	            					else if($director_member_result[$g]['officer_company_address_type'] == "Foreign")
									{
										$foreign_address1 = !empty($director_member_result[$g]["company_foreign_address1"])?$director_member_result[$g]["company_foreign_address1"]: '';
										$foreign_address2 = !empty($director_member_result[$g]["company_foreign_address2"])?$director_member_result[$g]["company_foreign_address2"]: '';
										$foreign_address3 = !empty($director_member_result[$g]["company_foreign_address3"])?$director_member_result[$g]["company_foreign_address3"]: '';

										$company_address = array(
											'type' 			=> "Foreign",
											'foreign_address1' => $foreign_address1,
											'foreign_address2' => $foreign_address2,
											'foreign_address3' => $foreign_address3
										);

										$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
										$document->setValue('Address', $address);
									}
	            				}
	            				elseif($director_member_result[$g]["client_company_name"] != '')
	            				{
	            					$document_person_name = $director_member_result[$g]["client_company_name"];
	            					$document->setValue('Name', htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["client_company_name"])));

	            					$company_address = array(
										'type' 			=> 'Local',
										'street_name1' 	=> $director_member_result[$g]["client_street_name"],
										'unit_no1'		=> $director_member_result[$g]["client_unit_no1"],
										'unit_no2'		=> $director_member_result[$g]["client_unit_no2"],
										'building_name1'=> $director_member_result[$g]["client_building_name"],
										'postal_code1'	=> $director_member_result[$g]["client_postal_code"]
									);

									$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
									$document->setValue('Address', $address);
	            				}
				            	
				            	$document->setValue('Company Name', htmlspecialchars($client_query[0]['company_name']));

				            	$company_address = array(
									'type' 			=> 'Local',
									'street_name1' 	=> $client_query[0]["street_name"],
									'unit_no1'		=> $client_query[0]["unit_no1"],
									'unit_no2'		=> $client_query[0]["unit_no2"],
									'building_name1'=> $client_query[0]["building_name"],
									'postal_code1'	=> $client_query[0]["postal_code"]
								);

								$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
								$document->setValue('Company Address', $address);

				            	$document->setValue('Firm Name', $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

								$document->setValue('Firm Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

								if($q[0]["document_name"] == "Financial Support Letter")
								{
									$document_number = "07.";
								}

								$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.'Financial Support Letter - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($document_person_name))).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.'Financial Support Letter - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($document_person_name))).'.docx');
							}
						}
					}
					else if($q[0]["document_name"] == "Information and verification of clients")
					{
						$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Information and verification of clients.docx");
						//$document->getSettings()->setOutputEscapingEnabled(true);

						$get_transaction_director_list = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_officers_director_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						ini_set("pcre.backtrack_limit", "-1");

						$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
			            $document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('client_country_of_incorporation', $this->transaction_word_model->getWordValue($transaction_master_id, "client_country_of_incorporation", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('activity1', $this->transaction_word_model->getWordValue($transaction_master_id, "transaction_client_activity1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						
						$document->cloneBlock('cloneDirectorTable', count($get_transaction_director_list), true, true);

						foreach($get_transaction_director_list as $key => $officers_row)
						{
							$document->setValue('Officers - name#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
							$document->setValue('Officers IC#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
							$document->setValue('Officers - address#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));
							$document->setValue('Officers - DOB#'.($key+1), date("d/m/Y", $this->transaction_word_model->getWordValue($transaction_master_id, "Directors date of birth - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
							$document->setValue('OFFICERS NATIONALITY#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors nationality - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));
							$document->setValue('Officers - contact and email#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors contact and email - appointment", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

							if(($key+1) == 2)
							{
								$document->setValue('pageBreakDirector#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
							}
							else
							{
								$document->setValue('pageBreakDirector#'.($key+1), '');
							}
						}

						$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "get_transaction_member_list", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						if(count($get_member_info) > 0)
						{
							$document->cloneBlock('cloneBlockBeneficialOwner', count($get_member_info), true, true);

							for($t = 0 ; $t < count($get_member_info) ; $t++)
							{
								if($get_member_info[$t]["number_of_share"] > 0)
								{
									$allotment_members = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$allotment_members_id = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members ID", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$allotment_members_nationality = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members nationality", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$allotment_members_telephone = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members telephone", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$allotment_members_email = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members email", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$allotment_members_occupation = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members officers occupation", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$allotment_number_of_shares = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"], null, $q[0]["document_category_id"]);
									$allotment_number_of_shares_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares all", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);

									$identity_name = $this->transaction_word_model->getWordValue($transaction_master_id, "identity_name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$nation_name = $this->transaction_word_model->getWordValue($transaction_master_id, "nation_name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);
									$member_type = $this->transaction_word_model->getWordValue($transaction_master_id, "member_type", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]);

									$document->setValue('number#'.($t+1), $t+1);
									$document->setValue('Allotment - members#'.($t+1), htmlspecialchars($allotment_members));
									$document->setValue('Allotment - members ID#'.($t+1), $allotment_members_id);
									$document->setValue('Allotment - members address line 1#'.($t+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address line 1", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
									$document->setValue('Allotment - members address line 2#'.($t+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members address line 2", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
									$document->setValue('identity_name#'.($t+1), htmlspecialchars($identity_name));
									$document->setValue('nation_name#'.($t+1), htmlspecialchars($nation_name));
									$document->setValue('member_type#'.($t+1), htmlspecialchars($member_type));
									$document->setValue('Allotment - members nationality#'.($t+1), htmlspecialchars($allotment_members_nationality));
									$document->setValue('Allotment - members telephone#'.($t+1), htmlspecialchars($allotment_members_telephone));
									$document->setValue('Allotment - members email#'.($t+1), htmlspecialchars($allotment_members_email));
									$document->setValue('Allotment - members officers occupation#'.($t+1), strtoupper(htmlspecialchars($allotment_members_occupation)));
									$percentage_number_of_share = ((int)$allotment_number_of_shares / (int)$allotment_number_of_shares_all) * 100;
									$document->setValue('percentage number of share#'.($t+1), $percentage_number_of_share);

									$document->setValue('Allotment - number of shares#'.($t+1), $allotment_number_of_shares);

									
								}
							}
						}
						//get_director_member_result	

						$get_transaction_member_director_list = $this->transaction_word_model->getWordValue($transaction_master_id, "CDD_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						$document->cloneBlock('cloneBlock', count($get_transaction_member_director_list), true, true);

						foreach($get_transaction_member_director_list as $key => $officers_row)
						{
							if($officers_row["name"] != '')
							{
								$document->setValue('Director Member Name#'.($key+1), htmlspecialchars($this->encryption->decrypt($officers_row["name"])));
								$document->setValue('Director Member IC#'.($key+1), htmlspecialchars($this->encryption->decrypt($officers_row["identification_no"])));
								$allotment_members_occupation = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members officers occupation", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]);
								if($allotment_members_occupation == "")
								{
									$designation = "DIRECTOR";
								}
								else
								{
									$designation = "DIRECTOR & SHAREHOLDER";
								}
								$document->setValue('Director Member Designation#'.($key+1), htmlspecialchars($designation));
							}
							elseif($officers_row["company_name"] != '')
            				{
            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($officers_row["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($officers_row["ms_client_company_name"]).'"');

                				$get_corp_rep_info = $get_corp_rep_info->result_array();

								$document->setValue('Director Member Name#'.($key+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"])." (Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($officers_row["company_name"])).")");
								$document->setValue('Director Member IC#'.($key+1), htmlspecialchars($officers_row["identity_number"]));
								$allotment_members_occupation = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members officers occupation", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]);
								if($allotment_members_occupation == "")
								{
									$designation = "DIRECTOR";
								}
								else
								{
									$designation = "DIRECTOR & SHAREHOLDER";
								}
								$document->setValue('Director Member Designation#'.($key+1), htmlspecialchars($designation));
								// $document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
							}
            				elseif($officers_row["client_company_name"] != '')
            				{
            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($officers_row["registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($officers_row["ms_client_company_name"]).'"');

                				$get_corp_rep_info = $get_corp_rep_info->result_array();

								$document->setValue('Director Member Name#'.($key+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"])." (Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($officers_row["client_company_name"])).")");
								$document->setValue('Director Member IC#'.($key+1), htmlspecialchars($officers_row["identity_number"]));
								$allotment_members_occupation = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members officers occupation", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]);
								if($allotment_members_occupation == "")
								{
									$designation = "DIRECTOR";
								}
								else
								{
									$designation = "DIRECTOR & SHAREHOLDER";
								}
								$document->setValue('Director Member Designation#'.($key+1), htmlspecialchars($designation));
							}
							$document->setValue('pageBreakHere#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
						}


						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//End Microsoft Word
					}
					else if($q[0]["document_name"] == "CDD Form")
					{
						$transaction_tasks_name = $this->db->query("select transaction_tasks.transaction_task as transaction_task_name from transaction_master left join transaction_tasks on transaction_tasks.id = transaction_master.transaction_task_id where transaction_master.id='".$transaction_master_id."'");

		                $transaction_tasks_name = $transaction_tasks_name->result_array();

						$reader = new \PhpOffice\PhpSpreadsheet\Reader\Xls();

						$allotment_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "CDD_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						if(count($allotment_member_result) > 0)
						{
							for($g = 0; $g < count($allotment_member_result); $g++)
				            {
				            	// file path
								$spreadsheet = $reader->load($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/CDD Form.xls");

								$new_sheet = $spreadsheet->getSheet(2);

								$new_sheet->setCellValue('C9', "Yes, ".htmlspecialchars($transaction_tasks_name[0]["transaction_task_name"]));

								$get_secretary_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Secretary Info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if(count($get_secretary_info) > 0)
								{
									$secretary = "Name: ".$this->encryption->decrypt($get_secretary_info[0]["name"]);
									$secretary_identification_no = $this->encryption->decrypt($get_secretary_info[0]["identification_no"]);
								}
								else
								{
									$secretary = "Name: ";
									$secretary_identification_no = "";
								}

								$new_sheet->setCellValue('D107', htmlspecialchars($secretary));
								if($secretary_identification_no == "S8085328I")
								{
									$drawing = new \PhpOffice\PhpSpreadsheet\Worksheet\Drawing();
									$drawing->setName('Thomas Signature');
									$drawing->setPath('./img/thomas_signature.jpeg');
									$drawing->setHeight(38);
									$drawing->setWidth(96);
									$drawing->setCoordinates('D102');
									$drawing->setWorksheet($new_sheet);
								}

								$sheet = $spreadsheet->getSheet(0);

								if($allotment_member_result[$g]["name"] != '')
		            			{
		            				if($allotment_member_result[$g]["alternate_address"] == "1")
									{
										$director_unit_no1 = $allotment_member_result[$g]["unit_no3"];
										$director_unit_no2 = $allotment_member_result[$g]["unit_no4"];
										$director_street_name = $allotment_member_result[$g]["street_name2"];
										$director_building_name = $allotment_member_result[$g]["building_name2"];
										$director_postal_code = $allotment_member_result[$g]["postal_code2"];
									}
									else
									{
										$director_unit_no1 = $allotment_member_result[$g]["unit_no1"];
										$director_unit_no2 = $allotment_member_result[$g]["unit_no2"];
										$director_street_name = $allotment_member_result[$g]["street_name1"];
										$director_building_name = $allotment_member_result[$g]["building_name1"];
										$director_postal_code = $allotment_member_result[$g]["postal_code1"];
									}

									if($allotment_member_result[$g]['officer_address_type'] == "Local")
									{
										if($director_unit_no1 != "" || $director_unit_no2 != "")
										{
											$client_unit = ' #'.$director_unit_no1 .' - '.$director_unit_no2;
										}
										else
										{
											$client_unit = "";
										}

										if($director_building_name != "")
										{
											$members_building_name_1 = $director_building_name;
										}
										else
										{
											$members_building_name_1 = '';
										}

										$sheet->setCellValue('C10', htmlspecialchars($director_street_name).', ');

										if($client_unit != "" || $members_building_name_1 != '')
										{
											if($client_unit != "")
											{
												$building_name = $client_unit.' '.$members_building_name_1;
											}
											else
											{
												$building_name = $members_building_name_1;
											}

											$sheet->setCellValue('C11', htmlspecialchars($building_name).', ');
											$sheet->setCellValue('C12', 'SINGAPORE '.$director_postal_code);
										}
										else
										{
											$sheet->setCellValue('C11', 'SINGAPORE '.$director_postal_code);
										}
										
									}
									else if($allotment_member_result[$g]['officer_address_type'] == "Foreign")
									{
										$foreign_address1 = !empty($allotment_member_result[$g]["foreign_address1"])?$allotment_member_result[$g]["foreign_address1"]: '';
										$foreign_address2 = !empty($allotment_member_result[$g]["foreign_address2"])?$allotment_member_result[$g]["foreign_address2"]: '';
										$foreign_address3 = !empty($allotment_member_result[$g]["foreign_address3"])?$allotment_member_result[$g]["foreign_address3"]: '';

										$sheet->setCellValue('C10', htmlspecialchars($foreign_address1));
										$sheet->setCellValue('C11', htmlspecialchars($foreign_address2));
										$sheet->setCellValue('C12', htmlspecialchars($foreign_address3));
									}

									$sheet->setCellValue('C6', htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["name"])));
									$sheet->setCellValue('C8', htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["identification_no"])));
									$sheet->setCellValue('C14', htmlspecialchars($allotment_member_result[$g]["officer_nationality"]));

									if($allotment_member_result[$g]["mobile_no"] != null)
									{
										$contact_info = $this->encryption->decrypt($allotment_member_result[$g]["mobile_no"]);

										if($allotment_member_result[$g]["officer_email_address"] != null)
										{
											$contact_info = $contact_info."; ".$this->encryption->decrypt($allotment_member_result[$g]["officer_email_address"]);
										}
									}
									elseif($allotment_member_result[$g]["officer_email_address"] != null)
									{
										$contact_info = $this->encryption->decrypt($allotment_member_result[$g]["officer_email_address"]);
									}
									$sheet->setCellValue('C16', htmlspecialchars($contact_info));

									$sheet->setCellValue('C19', htmlspecialchars($client_query[0]['company_name']));

									if($client_query[0]["unit_no1"] != "" || $client_query[0]["unit_no2"] != "")
									{
										$client_unit_no = ' #'.$client_query[0]["unit_no1"] .' - '.$client_query[0]["unit_no2"];
									}
									else
									{
										$client_unit_no = "";
									}

									if($client_query[0]["building_name"] != "")
									{
										$client_building_name_1 = ' '.$client_query[0]["building_name"];
									}
									else
									{
										$client_building_name_1 = "";
									}

									$sheet->setCellValue('C23', htmlspecialchars($client_query[0]["street_name"]).', ');

									if($client_unit_no != '' || $client_building_name_1 != '')
									{
										$sheet->setCellValue('C24', htmlspecialchars($client_unit_no).' '.htmlspecialchars($client_building_name_1).', ');
										$sheet->setCellValue('C25', 'SINGAPORE '.$client_query[0]["postal_code"]);
									}
									else
									{
										$sheet->setCellValue('C24', 'SINGAPORE '.$client_query[0]["postal_code"]);
									}

									$sheet->setCellValue('C27', "SINGAPORE");

									$sheet->setCellValue('C33', htmlspecialchars($client_query[0]['activity1']));
									
									$sheet->setCellValue('A131', "Name of Client/ Agent: ".htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["name"])));
									$sheet->setCellValue('A132', "NRIC/FIN/Passport no: ".htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["identification_no"])));

									$writer = new \PhpOffice\PhpSpreadsheet\Writer\Xls($spreadsheet);
					 
						        	$filename = $_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/CDD Form - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($allotment_member_result[$g]["name"]))).'.xls';

						        	$writer->save($filename);

									$this->zip->read_file($filename);

		            			}
							}
	            		}
					}
					else if($q[0]["document_name"] == "Ltrs Transfer of Shares")
					{
						$transferor_result = $this->db->query("select transaction_member_shares.* from transaction_member_shares where transaction_member_shares.company_code='".$company_code."' AND transaction_member_shares.transaction_page_id='".$transaction_master_id."' AND 0 > transaction_member_shares.number_of_share");

						$transferor_result = $transferor_result->result_array();

						$member_transfer_info = $this->transaction_model->getTransactionClientTransferMemberInfo($transaction_master_id);

						$array_transferor_name = array();

						for($f = 0; $f < count($transferor_result); $f++)
			            {
			            	$transferor_officer_id_with_field_type = $transferor_result[$f]['officer_id'].'-'.$transferor_result[$f]['field_type'];

			        		if(!in_array($transferor_officer_id_with_field_type, $array_transferor_name))
			        		{
			        			array_push($array_transferor_name, $transferor_officer_id_with_field_type);

				            	$array_transferee_name = array();
				            	$array_consideration = array();
				            	$get_transferor_name = "";
			                	$multiple_transferee_name = "";
			                	$multiple_consideration = "";
				            	//Microsoft Word
								$PHPWord = new \PhpOffice\PhpWord\PhpWord();

								$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Ltrs Transfer of Shares.docx");	

								$number_of_transferor = 0;

								for($g = 0; $g < count($member_transfer_info); $g++)
			                	{
			                		$member_officer_id = (($member_transfer_info[$g]->from_officer_id != null)?$member_transfer_info[$g]->from_officer_id:(($member_transfer_info[$g]->from_officer_company_id != null)?$member_transfer_info[$g]->from_officer_company_id:(($member_transfer_info[$g]->from_client_company_id != null)?$member_transfer_info[$g]->from_client_company_id:"")));

			                		$member_field_type = (($member_transfer_info[$g]->from_officer_field_type != null)?$member_transfer_info[$g]->from_officer_field_type:(($member_transfer_info[$g]->from_officer_company_field_type != null)?$member_transfer_info[$g]->from_officer_company_field_type:(($member_transfer_info[$g]->from_client_company_field_type != null)?$member_transfer_info[$g]->from_client_company_field_type:"")));

			                		if($member_officer_id == $transferor_result[$f]["officer_id"] && $member_field_type == $transferor_result[$f]["field_type"])
			                		{
			                			$number_of_transferor = $number_of_transferor + 1;
			                		}
			                	}
								$document->cloneRow('Transferor - share number', $number_of_transferor);	
								$num_of_clone_row = 1;

								for($g = 0; $g < count($member_transfer_info); $g++)
			                	{
			                		$member_officer_id = (($member_transfer_info[$g]->from_officer_id != null)?$member_transfer_info[$g]->from_officer_id:(($member_transfer_info[$g]->from_officer_company_id != null)?$member_transfer_info[$g]->from_officer_company_id:(($member_transfer_info[$g]->from_client_company_id != null)?$member_transfer_info[$g]->from_client_company_id:"")));

			                		$member_field_type = (($member_transfer_info[$g]->from_officer_field_type != null)?$member_transfer_info[$g]->from_officer_field_type:(($member_transfer_info[$g]->from_officer_company_field_type != null)?$member_transfer_info[$g]->from_officer_company_field_type:(($member_transfer_info[$g]->from_client_company_field_type != null)?$member_transfer_info[$g]->from_client_company_field_type:"")));

			                		if($member_officer_id == $transferor_result[$f]["officer_id"] && $member_field_type == $transferor_result[$f]["field_type"])
			                		{
			                			$document->setValue('Transferor - share number#'.($num_of_clone_row),  number_format($member_transfer_info[$g]->to_number_of_share, 2));

			                			if($member_transfer_info[$g]->from_officer_name != null)
				                		{
				                			$transferor_name = $member_transfer_info[$g]->from_officer_name;
				                		}
				                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
				                		{
				                			$transferor_name = $member_transfer_info[$g]->from_officer_company_name;
				                		}
				                		elseif($member_transfer_info[$g]->from_client_company_name != null)
				                		{
				                			$transferor_name = $member_transfer_info[$g]->from_client_company_name;
				                		}

				                		$document->setValue('Transferor - name#'.($num_of_clone_row), htmlspecialchars($transferor_name));
				                		$get_transferor_name = $transferor_name;
				                		$document->setValue('Transferor - consideration#'.($num_of_clone_row),  $member_transfer_info[$g]->currency.number_format($member_transfer_info[$g]->from_consideration, 2));
				                		array_push($array_consideration, $member_transfer_info[$g]->currency.number_format($member_transfer_info[$g]->from_consideration, 2));

				                		$get_latest_consideration = $member_transfer_info[$g]->currency.number_format($member_transfer_info[$g]->from_consideration, 2);

				                		if($member_transfer_info[$g]->to_officer_name != null)
				                		{
				                			$transferee_name = $member_transfer_info[$g]->to_officer_name;
				                		}
				                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
				                		{
				                			$transferee_name = $member_transfer_info[$g]->to_officer_company_name;
				                		}
				                		elseif($member_transfer_info[$g]->to_client_company_name != null)
				                		{
				                			$transferee_name = $member_transfer_info[$g]->to_client_company_name;
				                		}

				                		$document->setValue('Transferee - name#'.($num_of_clone_row), htmlspecialchars($transferee_name));
				                		array_push($array_transferee_name, $transferee_name);
				                		
				                		$num_of_clone_row = $num_of_clone_row + 1;
			                		}
			                	}	
			                	$array_transferee_name = array_unique($array_transferee_name);

			                	for($r = 0; $r < count($array_transferee_name); $r++)
		                		{
		                			if($r == 0)
		                			{
		                				$multiple_transferee_name = $array_transferee_name[$r];
		                			}
		                			else if($r == (count($array_transferee_name) - 1))
		                			{
		                				$multiple_transferee_name = $multiple_transferee_name.", and ".$array_transferee_name[$r];
		                			}
		                			else
		                			{
		                				$multiple_transferee_name = $multiple_transferee_name.", ".$array_transferee_name[$r];
		                			}
		                		}

		                		for($r = 0; $r < count($array_consideration); $r++)
		                		{
		                			if($r == 0)
		                			{
		                				$multiple_consideration = $array_consideration[$r];
		                			}
		                			else if($r == (count($array_transferee_name) - 1))
		                			{
		                				$multiple_consideration = $multiple_consideration.", and ".$array_consideration[$r];
		                			}
		                			else
		                			{
		                				$multiple_consideration = $multiple_consideration.", ".$array_consideration[$r];
		                			}
		                		}
		                		$document->setValue('Transferee - name',  htmlspecialchars($multiple_transferee_name));

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $transferor_result[$f]["id"], $q[0]["document_name"])));
								$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $transferor_result[$f]["id"], $q[0]["document_name"]));


								$document->setValue('Transferor - name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Transferor - name", $company_code, $q[0]["firm_id"], $transferor_result[$f]["id"], $q[0]["document_name"], $transferor_result[$f]["id"])));
								$document->setValue('Transferor - Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Transferor - Address", $company_code, $q[0]["firm_id"], $transferor_result[$f]["id"], $q[0]["document_name"], $transferor_result[$f]["id"]));
								$document->setValue('Transferor - consideration', $multiple_consideration);
								//Microsoft Word End

				            	$str = $new_contents_info;

				            	$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
								$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
								$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

								if(strpos($str, '<tr class="loop"') !== false)
			                	{
				            		preg_match_all ('/<tr class="loop"(.+?)<\/tr>/s', $str, $abstract_string_array);
				            		$latest_transfer_table = "";
				            		$array_transferee_name = array();
					            	$get_transferor_name = "";
				                	$multiple_transferee_name = "";
			                		
				                	for($g = 0; $g < count($member_transfer_info); $g++)
				                	{
				                		$transfer_html_string = $abstract_string_array[0][0];

				                		if($member_transfer_info[$g]->from_transfer_member_id == $transferor_result[$f]["id"])
				                		{
				                			if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferor - share number}}</span>') !== false)
						                	{
						                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferor - share number}}</span>', number_format($member_transfer_info[$g]->to_number_of_share, 2), $transfer_html_string);
						                	}

						                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferor - name}}</span>') !== false)
						                	{
						                		if($member_transfer_info[$g]->from_officer_name != null)
						                		{
						                			$transferor_name = $member_transfer_info[$g]->from_officer_name;
						                		}
						                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
						                		{
						                			$transferor_name = $member_transfer_info[$g]->from_officer_company_name;
						                		}
						                		elseif($member_transfer_info[$g]->from_client_company_name != null)
						                		{
						                			$transferor_name = $member_transfer_info[$g]->from_client_company_name;
						                		}

						                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferor - name}}</span>', $transferor_name, $transfer_html_string);

						                		$get_transferor_name = $transferor_name;
						                	}

						                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferor - consideration}}</span>') !== false)
						                	{
						                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferor - consideration}}</span>', $member_transfer_info[$g]->currency.number_format($member_transfer_info[$g]->from_consideration, 2), $transfer_html_string);
						                	}

						                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferee - name}}</span>') !== false)
						                	{
						                		if($member_transfer_info[$g]->to_officer_name != null)
						                		{
						                			$transferee_name = $member_transfer_info[$g]->to_officer_name;
						                		}
						                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
						                		{
						                			$transferee_name = $member_transfer_info[$g]->to_officer_company_name;
						                		}
						                		elseif($member_transfer_info[$g]->to_client_company_name != null)
						                		{
						                			$transferee_name = $member_transfer_info[$g]->to_client_company_name;
						                		}

						                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferee - name}}</span>', $transferee_name, $transfer_html_string);

						                		array_push($array_transferee_name, $transferee_name);
						                	}
						                	$latest_transfer_table = $latest_transfer_table.$transfer_html_string;
				                		}
				                	}

				                	$new_contents = str_replace($abstract_string_array[0][0], $latest_transfer_table, $str);

				                	$new_contents = str_replace('<span class="myclass mceNonEditable">{{Transferor - name}}</span>', $get_transferor_name, $new_contents);

			                		for($r = 0; $r < count($array_transferee_name); $r++)
			                		{
			                			if($r == 0)
			                			{
			                				$multiple_transferee_name = $array_transferee_name[$r];
			                			}
			                			else if($r == (count($array_transferee_name) - 1))
			                			{
			                				$multiple_transferee_name = $multiple_transferee_name.", and ".$array_transferee_name[$r];
			                			}
			                			else
			                			{
			                				$multiple_transferee_name = $multiple_transferee_name.", ".$array_transferee_name[$r];
			                			}
			                		}

			                		$new_contents = str_replace('<span class="myclass mceNonEditable">{{Transferee - name}}</span>', $multiple_transferee_name, $new_contents);

			                		$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents, $transferor_result[$f]["id"], $q[0]["document_name"]);
				                }

				                $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($transferor_name)).')'.'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($transferor_name)).')'.'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($transferor_name)).')'.'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.$transferor_name.')';
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
			            		$data['created_by']=$this->session->userdata('user_id');

			            		$this->save_incorporate_pdf($data);

			            		//Microsoft Word
			             		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($transferor_name)).')'.'.docx');

								 $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($transferor_name)).')'.'.docx');
								//Microsoft Word End
							}
			            }
					}
					else if($q[0]["document_name"] == "Transfer Form")
					{
						$member_transfer_info = $this->transaction_model->getTransactionClientTransferMemberInfo($transaction_master_id);
						//print_r($member_transfer_info);
						for($g = 0; $g < count($member_transfer_info); $g++)
			            {
			            	//Microsoft Word
							$PHPWord = new \PhpOffice\PhpWord\PhpWord();

							if($q[0]["document_category_id"] == 1)
							{
								$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Transfer Form.docx");
							}
							else if($q[0]["document_category_id"] == 2)
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Transfer Form KL.docx");
							}

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $member_transfer_info[$g]->to_transfer_member_id, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $member_transfer_info[$g]->to_transfer_member_id, $q[0]["document_name"]));
							if($q[0]["document_category_id"] == 1)
							{
								$document->setValue('Transferee - share number', ucwords($this->convert_number_to_word_model->convert_number_to_words($member_transfer_info[$g]->to_number_of_share))." (".number_format($member_transfer_info[$g]->to_number_of_share).")");
							}
							else if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('Transferee - share number', number_format($member_transfer_info[$g]->to_number_of_share)." (".$this->convert_number_to_word_model->convert_number_to_words($member_transfer_info[$g]->to_number_of_share).")");
							}
							$document->setValue('Transferor - Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Transferor - Address", $company_code, $q[0]["firm_id"], $member_transfer_info[$g]->from_cert_id, $q[0]["document_name"], null, $q[0]["document_category_id"]));
							
							$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], $member_transfer_info[$g]->to_transfer_member_id, $q[0]["document_name"]));
							$document->setValue('Transferee - Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Transferee - Address", $company_code, $q[0]["firm_id"], $member_transfer_info[$g]->to_transfer_member_id, $q[0]["document_name"], null, $q[0]["document_category_id"]));
							if($member_transfer_info[$g]->class_id == 2)
							{
								$share_type = $member_transfer_info[$g]->other_class;
							}
							else
							{
								$share_type = $member_transfer_info[$g]->sharetype;
							}
							$document->setValue('Transferee - share type', htmlspecialchars($share_type));
							if($member_transfer_info[$g]->from_officer_name != null)
	                		{
	                			$transferor_name = htmlspecialchars($member_transfer_info[$g]->from_officer_name);
	                			$doc_transferor_name = $member_transfer_info[$g]->from_officer_name;
	                			$transferor_id = $member_transfer_info[$g]->from_officer_identification_no;
	                		}
	                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
	                		{
	                			$doc_transferor_name = $member_transfer_info[$g]->from_officer_company_name;
	                			$transferor_id = $member_transfer_info[$g]->from_officer_company_register_no;

	                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->from_officer_company_register_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

	                			$get_corp_rep_info = $get_corp_rep_info->result_array();

	                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	            				{
	            					$directors_html_string_corp_rep = htmlspecialchars($member_transfer_info[$g]->from_officer_company_name).'<w:br/>Corp Rep Name: '.htmlspecialchars($get_corp_rep_info[$b]["name_of_corp_rep"]).'<w:br/>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"];
	            				}

	            				$transferor_name = $directors_html_string_corp_rep;
	                		}
	                		elseif($member_transfer_info[$g]->from_client_company_name != null)
	                		{
	                			$doc_transferor_name = $member_transfer_info[$g]->from_client_company_name;
	                			$transferor_id = $member_transfer_info[$g]->from_client_regis_no;
	                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->from_client_regis_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

	                			$get_corp_rep_info = $get_corp_rep_info->result_array();

	                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	            				{
	            					$directors_html_string_corp_rep = htmlspecialchars($member_transfer_info[$g]->from_client_company_name).'<w:br/>Corp Rep Name: '.htmlspecialchars($get_corp_rep_info[$b]["name_of_corp_rep"]).'<w:br/>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"];
	            				}

	            				$transferor_name = $directors_html_string_corp_rep;
	                		}
	                		$document->setValue('Transferor - name (FULL)', $transferor_name);
	                		$document->setValue('Transferor - name', htmlspecialchars($doc_transferor_name));
	                		$document->setValue('Transferor - ID', htmlspecialchars($transferor_id));
	                		$document->setValue('Transferor - consideration', $member_transfer_info[$g]->currency.number_format($member_transfer_info[$g]->from_consideration,2));

	                		if($member_transfer_info[$g]->to_officer_name != null)
	                		{
	                			$transferee_name = htmlspecialchars($member_transfer_info[$g]->to_officer_name);
	                			$doc_transferee_name = $member_transfer_info[$g]->to_officer_name;
	                			$transferee_id = $member_transfer_info[$g]->to_officer_identification_no;
	                		}
	                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
	                		{
	                			$doc_transferee_name = $member_transfer_info[$g]->to_officer_company_name;
	                			$transferee_id = $member_transfer_info[$g]->to_officer_company_register_no;

	                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->to_officer_company_register_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

	                			$get_corp_rep_info = $get_corp_rep_info->result_array();

	                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	            				{
	            					$directors_html_string_corp_rep = htmlspecialchars($member_transfer_info[$g]->to_officer_company_name).'<w:br/>Corp Rep Name: '.htmlspecialchars($get_corp_rep_info[$b]["name_of_corp_rep"]).'<w:br/>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"];
	            				}

	            				$transferee_name = $directors_html_string_corp_rep;
	                		}
	                		elseif($member_transfer_info[$g]->to_client_company_name != null)
	                		{
	                			$doc_transferee_name = $member_transfer_info[$g]->to_client_company_name;
	                			$transferee_id = $member_transfer_info[$g]->to_client_regis_no;

	                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->to_client_regis_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

	                			$get_corp_rep_info = $get_corp_rep_info->result_array();

	                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	            				{
	            					$directors_html_string_corp_rep = htmlspecialchars($member_transfer_info[$g]->to_client_company_name).'<w:br/>Corp Rep Name: '.htmlspecialchars($get_corp_rep_info[$b]["name_of_corp_rep"]).'<w:br/>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"];
	            				}
								$transferee_name = $directors_html_string_corp_rep;
	                		}

	                		$document->setValue('Transferee - name (FULL)', $transferee_name);
	                		$document->setValue('current_year', ucwords($this->convert_number_to_word_model->convert_number_to_words(date("Y"))).' ('.date("Y").')');
	                		$document->setValue('Transferee - name', htmlspecialchars($doc_transferee_name));
	                		$document->setValue('Transferee - ID', $transferee_id);
							//Microsoft Word End

			            	$str = $new_contents_info;

			            	$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setPrintHeader(false);
							$obj_pdf->setPrintFooter(false);
							$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
							$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
							$obj_pdf->SetDefaultMonospacedFont('helvetica');
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
							$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
							$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
							$obj_pdf->SetFont('helvetica', '', 10);
							$obj_pdf->setFontSubsetting(false);
							$obj_pdf->AddPage();

			            	if(strpos($str, '<span class="myclass mceNonEditable">{{Transferee - share number}}</span>') !== false)
		                	{
		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferee - share number}}</span>', strtoupper($this->convert_number_to_word_model->convert_number_to_words($member_transfer_info[$g]->to_number_of_share))." (".number_format($member_transfer_info[$g]->to_number_of_share).")", $str);
		                	}

		                	if(strpos($str, '<span class="myclass mceNonEditable">{{Transferee - share type}}</span>') !== false)
		                	{	
		                		if($member_transfer_info[$g]->class_id == 2)
								{
									$share_type = $member_transfer_info[$g]->other_class;
								}
								else
								{
									$share_type = $member_transfer_info[$g]->sharetype;
								}

		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferee - share type}}</span>', $share_type, $str);
		                	}
		                	
							if(strpos($str, '<span class="myclass mceNonEditable">{{Transferor - name}}</span>') !== false)
		                	{
		                		if($member_transfer_info[$g]->from_officer_name != null)
		                		{
		                			$transferor_name = $member_transfer_info[$g]->from_officer_name;
		                			$doc_transferor_name = $member_transfer_info[$g]->from_officer_name;
		                		}
		                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
		                		{
		                			$doc_transferor_name = $member_transfer_info[$g]->from_officer_company_name;

		                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->from_officer_company_register_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

		                			$get_corp_rep_info = $get_corp_rep_info->result_array();

		                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	                				{
	                					$directors_html_string_corp_rep = '<span>'.$member_transfer_info[$g]->client_company_name.'</span><br/><span>Corp Rep Name: '.$get_corp_rep_info[$b]["name_of_corp_rep"].'</span><br/><span>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"].'</span>';
	                					
	                				}

	                				$transferor_name = $directors_html_string_corp_rep;
		                		}
		                		elseif($member_transfer_info[$g]->from_client_company_name != null)
		                		{
		                			$doc_transferor_name = $member_transfer_info[$g]->from_client_company_name;
		                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->from_client_regis_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

		                			$get_corp_rep_info = $get_corp_rep_info->result_array();

		                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	                				{
	                					$directors_html_string_corp_rep = '<span>'.$member_transfer_info[$g]->client_company_name.'</span><br/><span>Corp Rep Name: '.$get_corp_rep_info[$b]["name_of_corp_rep"].'</span><br/><span>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"].'</span>';
	                				}

	                				$transferor_name = $directors_html_string_corp_rep;
		                		}

		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferor - name (FULL)}}</span>', $transferor_name, $str);
		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferor - name}}</span>', $doc_transferor_name, $str);
		                	}

		                	if(strpos($str, '<span class="myclass mceNonEditable">{{Transferor - consideration}}</span>') !== false)
		                	{
		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferor - consideration}}</span>', $member_transfer_info[$g]->currency.number_format($member_transfer_info[$g]->from_consideration,2), $str);
		                	}

		                	if(strpos($str, '<span class="myclass mceNonEditable">{{Transferee - name}}</span>') !== false)
		                	{
		                		if($member_transfer_info[$g]->to_officer_name != null)
		                		{
		                			$transferee_name = $member_transfer_info[$g]->to_officer_name;
		                			$doc_transferee_name = $member_transfer_info[$g]->to_officer_name;
		                		}
		                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
		                		{
		                			$doc_transferee_name = $member_transfer_info[$g]->to_officer_company_name;

		                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->to_officer_company_register_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

		                			$get_corp_rep_info = $get_corp_rep_info->result_array();

		                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	                				{
	                					$directors_html_string_corp_rep = '<span>'.$member_transfer_info[$g]->client_company_name.'</span><br/><span>Corp Rep Name: '.$get_corp_rep_info[$b]["name_of_corp_rep"].'</span><br/><span>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"].'</span>';
	                				}

	                				$transferee_name = $directors_html_string_corp_rep;
		                		}
		                		elseif($member_transfer_info[$g]->to_client_company_name != null)
		                		{
		                			$doc_transferee_name = $member_transfer_info[$g]->to_client_company_name;

		                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_transfer_info[$g]->to_client_regis_no.'" and corporate_representative.subsidiary_name = "'.$member_transfer_info[$g]->client_company_name.'"');

		                			$get_corp_rep_info = $get_corp_rep_info->result_array();

		                			for($b = 0; $b < count($get_corp_rep_info); $b++)
	                				{
	                					$directors_html_string_corp_rep = '<span>'.$member_transfer_info[$g]->client_company_name.'</span><br/><span>Corp Rep Name: '.$get_corp_rep_info[$b]["name_of_corp_rep"].'</span><br/><span>Corp Rep ID: '.$get_corp_rep_info[$b]["identity_number"].'</span>';
	                				}
									$transferee_name = $directors_html_string_corp_rep;
		                		}

		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferee - name (FULL)}}</span>', $transferee_name, $str);
		                		$str = str_replace('<span class="myclass mceNonEditable">{{Transferee - name}}</span>', $doc_transferee_name, $str);

		                	}

		                	$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $str, $member_transfer_info[$g]->to_transfer_member_id, $q[0]["document_name"], $member_transfer_info[$g]->from_transfer_member_id);

				            $obj_pdf->writeHTML($content, true, false, false, false, '');

							// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_transferee_name).' with '.$this->myUrlEncode($doc_transferor_name)).')'.($g+1).'.pdf', 'F');

							// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_transferee_name) .' with '.$this->myUrlEncode($doc_transferor_name)).')'.($g+1).'.pdf'))
			    // 			{
						 //        echo "File Doesn't Exist...";exit;
						 //    }

							// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_transferee_name) .' with '.$this->myUrlEncode($doc_transferor_name)).')'.($g+1).'.pdf');

							$data['transaction_id'] = $transaction_master_id;
							$data['type'] = "trans"; 
							$data['client_id'] = $client_query[0]["id"];
							$data['firm_id'] = $q[0]["firm_id"];
							$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
							$data['triggered_by'] = 1;
							$data['document_date_checkbox'] = 1;
							$data['transaction_date'] = DATE("d/m/Y",now());
							$data['content'] = $content;
		            		$data['created_by']=$this->session->userdata('user_id');

		            		$this->save_incorporate_pdf($data);

		            		//Microsoft Word
		             		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_transferee_name) .' with '.$this->myUrlEncode($doc_transferor_name)).')'.($g+1).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$client_query[0]["company_name"].' ('.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_transferee_name) .' with '.$this->myUrlEncode($doc_transferor_name)).')'.($g+1).'.docx');
							//Microsoft Word End
			            }
					}
					else if ($q[0]["document_name"] == "Waiver of Pre-Emption rights")
					{
						$member_transfer_info = $this->transaction_model->getTransactionClientTransferMemberInfo($transaction_master_id);
						//Microsoft Word
						if($q[0]["document_category_id"] == 2)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Waiver of Pre-Emption rights.docx");
						}
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						$document->cloneRow('Transferor - share number', count($member_transfer_info));
							$total_number_of_share_transfer = 0;
						for($g = 0; $g < count($member_transfer_info); $g++)
	                	{
	                		$document->setValue('Transferor - share number#'.($g+1), number_format($member_transfer_info[$g]->to_number_of_share, 2));
	                		if($q[0]["document_category_id"] == 2)
							{
								$total_number_of_share_transfer = $total_number_of_share_transfer + intval($member_transfer_info[$g]->to_number_of_share);
								$document->setValue('Transferor - currency#'.($g+1), $member_transfer_info[$g]->currency);
		                		$document->setValue('Transferor - consideration#'.($g+1), number_format($member_transfer_info[$g]->from_consideration, 2));
		                		//echo json_encode($member_transfer_info[$g]); 
		                	}

	                		if($member_transfer_info[$g]->from_officer_name != null)
	                		{
	                			$transferor_name = $member_transfer_info[$g]->from_officer_name;
	                		}
	                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
	                		{
	                			$transferor_name = $member_transfer_info[$g]->from_officer_company_name;
	                		}
	                		elseif($member_transfer_info[$g]->from_client_company_name != null)
	                		{
	                			$transferor_name = $member_transfer_info[$g]->from_client_company_name;
	                		}

	                		$document->setValue('Transferor - name#'.($g+1), htmlspecialchars($transferor_name));

	                		if($member_transfer_info[$g]->from_officer_identification_no != null)
	                		{
	                			$transferor_id = $member_transfer_info[$g]->from_officer_identification_no;
	                		}
	                		elseif($member_transfer_info[$g]->from_officer_company_register_no != null)
	                		{
	                			$transferor_id = $member_transfer_info[$g]->from_officer_company_register_no;
	                		}
	                		elseif($member_transfer_info[$g]->from_client_regis_no != null)
	                		{
	                			$transferor_id = $member_transfer_info[$g]->from_client_regis_no;
	                		}

	                		$document->setValue('Transferor - ID#'.($g+1), htmlspecialchars($transferor_id));

	                		if($member_transfer_info[$g]->to_officer_name != null)
	                		{
	                			$transferee_name = $member_transfer_info[$g]->to_officer_name;
	                		}
	                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
	                		{
	                			$transferee_name = $member_transfer_info[$g]->to_officer_company_name;
	                		}
	                		elseif($member_transfer_info[$g]->to_client_company_name != null)
	                		{
	                			$transferee_name = $member_transfer_info[$g]->to_client_company_name;
	                		}

	                		$document->setValue('Transferee - name#'.($g+1), htmlspecialchars($transferee_name));

	                		if($member_transfer_info[$g]->to_officer_identification_no != null)
	                		{
	                			$transferee_id = $member_transfer_info[$g]->to_officer_identification_no;
	                		}
	                		elseif($member_transfer_info[$g]->to_officer_company_register_no != null)
	                		{
	                			$transferee_id = $member_transfer_info[$g]->to_officer_company_register_no;
	                		}
	                		elseif($member_transfer_info[$g]->to_client_regis_no != null)
	                		{
	                			$transferee_id = $member_transfer_info[$g]->to_client_regis_no;
	                		}

	                		$document->setValue('Transferee - ID#'.($g+1), htmlspecialchars($transferee_id));
	                	}
	                	if($q[0]["document_category_id"] == 2)
						{
							$document->setValue('total_number_of_share_transfer', number_format($total_number_of_share_transfer));
							$total_number_of_share_transfer_english = $this->convert_number_to_word_model->convert_number_to_words($total_number_of_share_transfer);
							$document->setValue('total_number_of_share_transfer_english', strtoupper($total_number_of_share_transfer_english).' ('.number_format($total_number_of_share_transfer).')');
						}

						$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
						if(count($get_member_info) > 0)
						{
							$document->cloneRow('Members name - all', count($get_member_info));

							for($g = 0; $g < count($get_member_info); $g++)
		                	{
		                		if($get_member_info[$g]["name"] != null)
		                		{
		                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
		                			$document->setValue('Corp Rep of Name#'.($g+1), "");
		                		}
		                		elseif($get_member_info[$g]["company_name"] != null)
		                		{
		                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

		                			$get_corp_rep_info = $get_corp_rep_info->result_array();

	                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
	                				$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");

		                		}
		                		elseif($get_member_info[$g]["client_company_name"] != null)
		                		{
		                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

		                			$get_corp_rep_info = $get_corp_rep_info->result_array();

	                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
	                				$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])).")");
		                		}
		                	}
						}
						else
						{
							$document->setValue('Members name - all', '');
						}

	            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = "";//$content
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
						//Microsoft Word End
					}
					else if($q[0]["document_name"] == "DRIW-Allotment of Shares" || $q[0]["document_name"] == "F24 - Return of allotment of shares" || $q[0]["document_name"] == "DRIW - Transfer of Shares")
					{	
						$header_content = '';
						if($q[0]["document_name"] == "DRIW-Allotment of Shares" || $q[0]["document_name"] == "DRIW - Transfer of Shares")
						{
							$header_content = $this->get_header_template("DRIW");

							$pattern = "/{{[^}}]*}}/";
							$subject = $header_content;
							preg_match_all($pattern, $subject, $header_tag_matches);

							$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
							$obj_pdf->setPrintHeader(true);
							$obj_pdf->setPrintFooter(true);
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+40, PDF_MARGIN_RIGHT+3);
							$obj_pdf->SetAutoPageBreak(TRUE, 30);
							$obj_pdf->AddPage();
							$obj_pdf->setListIndentWidth(4);
						}
						else 
						{
							$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setPrintHeader(false);
							$obj_pdf->setPrintFooter(false);
							$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
							$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
							$obj_pdf->SetDefaultMonospacedFont('helvetica');
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
							$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
							$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

							if($q[0]["document_name"] == "F24 - Return of allotment of shares")
							{
								$obj_pdf->SetAutoPageBreak(TRUE, 15);
							}

							$obj_pdf->SetFont('helvetica', '', 10);
							$obj_pdf->setFontSubsetting(false);
							$obj_pdf->AddPage();
							$obj_pdf->setListIndentWidth(4);
						}

						$str = $new_contents_info;
						$latest_allotment_table = "";
						$latest_transfer_table = "";
						$list_no = "";
			            $allotment_string = "";

			            if($q[0]["document_name"] == "DRIW - Transfer of Shares")
			            {
			            	$member_transfer_info = $this->transaction_model->getTransactionClientTransferMemberInfo($transaction_master_id);
			            	//echo json_encode($q[0]["document_name"]);
			            	//Microsoft Word
			            	if($q[0]["document_category_id"] == 1)
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Transfer of Shares.docx");
							}
							else if($q[0]["document_category_id"] == 2)
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DIR RESOL-transfer.docx");
							}

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue('Display title type for board of director', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($director_name_all) > 0)
							{
								$document->cloneRow('Directors name - all', count($director_name_all));

								for($g = 0; $g < count($director_name_all); $g++)
			                	{
			                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
			                	}
							}
							else
							{
								$document->setValue('Directors name - all', '');
							}	

							$document->cloneRow('Transferor - share number', count($member_transfer_info));
							$total_number_of_share_transfer = 0;
							for($g = 0; $g < count($member_transfer_info); $g++)
		                	{
		                		$document->setValue('Transferor - share number#'.($g+1), number_format($member_transfer_info[$g]->to_number_of_share, 2));
		                		if($q[0]["document_category_id"] == 2)
								{
									$total_number_of_share_transfer = $total_number_of_share_transfer + intval($member_transfer_info[$g]->to_number_of_share);
									$document->setValue('Transferor - currency#'.($g+1), $member_transfer_info[$g]->currency);
			                		$document->setValue('Transferor - consideration#'.($g+1), number_format($member_transfer_info[$g]->from_consideration, 2));
			                		//echo json_encode($member_transfer_info[$g]); 
			                	}

		                		if($member_transfer_info[$g]->from_officer_name != null)
		                		{
		                			$transferor_name = $member_transfer_info[$g]->from_officer_name;
		                		}
		                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
		                		{
		                			$transferor_name = $member_transfer_info[$g]->from_officer_company_name;
		                		}
		                		elseif($member_transfer_info[$g]->from_client_company_name != null)
		                		{
		                			$transferor_name = $member_transfer_info[$g]->from_client_company_name;
		                		}

		                		$document->setValue('Transferor - name#'.($g+1), htmlspecialchars($transferor_name));

		                		if($member_transfer_info[$g]->from_officer_identification_no != null)
		                		{
		                			$transferor_id = $member_transfer_info[$g]->from_officer_identification_no;
		                		}
		                		elseif($member_transfer_info[$g]->from_officer_company_register_no != null)
		                		{
		                			$transferor_id = $member_transfer_info[$g]->from_officer_company_register_no;
		                		}
		                		elseif($member_transfer_info[$g]->from_client_regis_no != null)
		                		{
		                			$transferor_id = $member_transfer_info[$g]->from_client_regis_no;
		                		}

		                		$document->setValue('Transferor - ID#'.($g+1), htmlspecialchars($transferor_id));

		                		if($member_transfer_info[$g]->to_officer_name != null)
		                		{
		                			$transferee_name = $member_transfer_info[$g]->to_officer_name;
		                		}
		                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
		                		{
		                			$transferee_name = $member_transfer_info[$g]->to_officer_company_name;
		                		}
		                		elseif($member_transfer_info[$g]->to_client_company_name != null)
		                		{
		                			$transferee_name = $member_transfer_info[$g]->to_client_company_name;
		                		}

		                		$document->setValue('Transferee - name#'.($g+1), htmlspecialchars($transferee_name));

		                		if($member_transfer_info[$g]->to_officer_identification_no != null)
		                		{
		                			$transferee_id = $member_transfer_info[$g]->to_officer_identification_no;
		                		}
		                		elseif($member_transfer_info[$g]->to_officer_company_register_no != null)
		                		{
		                			$transferee_id = $member_transfer_info[$g]->to_officer_company_register_no;
		                		}
		                		elseif($member_transfer_info[$g]->to_client_regis_no != null)
		                		{
		                			$transferee_id = $member_transfer_info[$g]->to_client_regis_no;
		                		}

		                		$document->setValue('Transferee - ID#'.($g+1), htmlspecialchars($transferee_id));
		                	}
		                	if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('total_number_of_share_transfer', number_format($total_number_of_share_transfer));
								$total_number_of_share_transfer_english = $this->convert_number_to_word_model->convert_number_to_words($total_number_of_share_transfer);
								$document->setValue('total_number_of_share_transfer_english', strtoupper($total_number_of_share_transfer_english).' ('.number_format($total_number_of_share_transfer).')');
							}
							//Microsoft Word End

			            	if(strpos($str, '<tr class="loop"') !== false)
		                	{
			            		preg_match_all ('/<tr class="loop"(.+?)<\/tr>/s', $str, $abstract_string_array);
			            	
			                	for($g = 0; $g < count($member_transfer_info); $g++)
			                	{
			                		$transfer_html_string = $abstract_string_array[0][0];

			                		if(strpos($transfer_html_string, '{{no}}') !== false)
				                	{
				                		$list_no = ($g + 1).".";
				                		$transfer_html_string = str_replace('{{no}}', $list_no, $transfer_html_string);
				                	}

			                		if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferor - share number}}</span>') !== false)
				                	{
				                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferor - share number}}</span>', number_format($member_transfer_info[$g]->to_number_of_share, 2), $transfer_html_string);
				                	}

				                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferor - name}}</span>') !== false)
				                	{
				                		if($member_transfer_info[$g]->from_officer_name != null)
				                		{
				                			$transferor_name = $member_transfer_info[$g]->from_officer_name;
				                		}
				                		elseif($member_transfer_info[$g]->from_officer_company_name != null)
				                		{
				                			$transferor_name = $member_transfer_info[$g]->from_officer_company_name;
				                		}
				                		elseif($member_transfer_info[$g]->from_client_company_name != null)
				                		{
				                			$transferor_name = $member_transfer_info[$g]->from_client_company_name;
				                		}

				                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferor - name}}</span>', $transferor_name, $transfer_html_string);
				                	}

				                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferor - ID}}</span>') !== false)
				                	{
				                		if($member_transfer_info[$g]->from_officer_identification_no != null)
				                		{
				                			$transferor_id = $member_transfer_info[$g]->from_officer_identification_no;
				                		}
				                		elseif($member_transfer_info[$g]->from_officer_company_register_no != null)
				                		{
				                			$transferor_id = $member_transfer_info[$g]->from_officer_company_register_no;
				                		}
				                		elseif($member_transfer_info[$g]->from_client_regis_no != null)
				                		{
				                			$transferor_id = $member_transfer_info[$g]->from_client_regis_no;
				                		}

				                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferor - ID}}</span>', $transferor_id, $transfer_html_string);
				                	}

				                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferee - name}}</span>') !== false)
				                	{
				                		if($member_transfer_info[$g]->to_officer_name != null)
				                		{
				                			$transferee_name = $member_transfer_info[$g]->to_officer_name;
				                		}
				                		elseif($member_transfer_info[$g]->to_officer_company_name != null)
				                		{
				                			$transferee_name = $member_transfer_info[$g]->to_officer_company_name;
				                		}
				                		elseif($member_transfer_info[$g]->to_client_company_name != null)
				                		{
				                			$transferee_name = $member_transfer_info[$g]->to_client_company_name;
				                		}

				                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferee - name}}</span>', $transferee_name, $transfer_html_string);
				                	}

				                	if(strpos($transfer_html_string, '<span class="myclass mceNonEditable">{{Transferee - ID}}</span>') !== false)
				                	{
				                		if($member_transfer_info[$g]->to_officer_identification_no != null)
				                		{
				                			$transferee_id = $member_transfer_info[$g]->to_officer_identification_no;
				                		}
				                		elseif($member_transfer_info[$g]->to_officer_company_register_no != null)
				                		{
				                			$transferee_id = $member_transfer_info[$g]->to_officer_company_register_no;
				                		}
				                		elseif($member_transfer_info[$g]->to_client_regis_no != null)
				                		{
				                			$transferee_id = $member_transfer_info[$g]->to_client_regis_no;
				                		}

				                		$transfer_html_string = str_replace('<span class="myclass mceNonEditable">{{Transferee - ID}}</span>', $transferee_id, $transfer_html_string);
				                	}
				                	$latest_transfer_table = $latest_transfer_table.$transfer_html_string;
			                	}
			                	$new_contents = str_replace($abstract_string_array[0][0], $latest_transfer_table, $str);
			                }

			                $new_contents = str_replace('{{no}}', (($list_no + 1)."."), $new_contents);

			            	$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents, null, $q[0]["document_name"]);	            	
			            }
			            else
			            {
				            $allotment_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "allotment_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

				            if($q[0]["document_name"] == "DRIW-Allotment of Shares")
				            {
				            	//Microsoft Word
				            	if($q[0]["document_category_id"] == 1)
				            	{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Allotment of Shares.docx");
				            	}
				            	else if($q[0]["document_category_id"] == 2)
				            	{
				            		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Alloment of Shares (KL).docx");
				            	}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('sing/plu s', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "sing/plu s", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('DISPLAY TITLE TYPE FOR BOARD OF DIRECTOR', $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Allotment - number of shares all", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Allotment - type of shares", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("Allotment - currency", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - currency", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Display All members of the', $this->transaction_word_model->getWordValue($transaction_master_id, "Display All members of the", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Display board of director - content', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Display board of director - content", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$check_amount_share_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - amount share all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
								$check_latest_amount_share = $this->transaction_word_model->getWordValue($transaction_master_id, "check_latest_amount_share", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if($q[0]["document_category_id"] == 2)
				            	{
									$document->setValue('latest_amount_share', number_format((float)$check_latest_amount_share, 2));

									$total_amount_of_share = (float)$check_amount_share_all + (float)$check_latest_amount_share;

									$document->setValue('total_amount_share', number_format($total_amount_of_share, 2));
								}

								if(count($allotment_member_result) > 0)
								{
									$document->cloneRow('Allotment - members_details', count($allotment_member_result));

									for($g = 0; $g < count($allotment_member_result); $g++)
				                	{
				                		$document->setValue('Allotment - members_details#'.($g+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members_details", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $allotment_member_result[$g], $q[0]["document_category_id"]));
				                		$document->setValue('Allotment - number of shares#'.($g+1), number_format($allotment_member_result[$g]["number_of_share"]));
				                		$document->setValue('Allotment - certificate#'.($g+1), $allotment_member_result[$g]["new_certificate_no"]);
				                		$document->setValue('Allotment - currency#'.($g+1), $allotment_member_result[$g]["currency_name"]);
				                		$document->setValue('Allotment - Number of shares paid#'.($g+1), number_format($allotment_member_result[$g]["amount_paid"], 2));
				                	}
								}
								else
								{
									$document->setValue('Allotment - members_details', '');
									$document->setValue('Allotment - number of shares', '');
									$document->setValue('Allotment - certificate', '');
									$document->setValue('Allotment - currency', '');
									$document->setValue('Allotment - Number of shares paid', '');

								}	

								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									$document->cloneRow('Directors name - all', count($director_name_all));

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}	
								//Microsoft Word End
				            }

				            if($q[0]["document_name"] == "F24 - Return of allotment of shares")
				            {
				            	//Microsoft Word
				            	if($q[0]["document_category_id"] == 1)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/F24 - Return of allotment of shares.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 24.docx");

									$type_of_share = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
									$number_of_share_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
									$amount_of_share_all_with_currency = $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - amount of share all with currency", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if($type_of_share == "Ordinary Share(s)")
									{
										$document->setValue('Allotment – number of shares all(ordinary)', $number_of_share_all);
										$document->setValue('Allotment – amount of shares all with currency(ordinary)', $amount_of_share_all_with_currency);
										$document->setValue("Allotment – currency(ordinary)", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - currency", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

										$document->setValue('Allotment – number of shares all(preference)', "");
										$document->setValue('Allotment – number of shares all(others)', "");
										$document->setValue('Allotment – amount of shares all with currency(preference)', "");
										$document->setValue('Allotment – amount of shares all with currency(others)', "");
										$document->setValue("Allotment – currency(preference)", "");
										$document->setValue("Allotment – currency(others)", "");

									}
									elseif($type_of_share == "Preferred Share")
									{
										$document->setValue('Allotment – number of shares all(preference)', $number_of_share_all);
										$document->setValue('Allotment – amount of shares all with currency(preference)', $amount_of_share_all_with_currency);
										$document->setValue("Allotment – currency(preference)", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - currency", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

										$document->setValue('Allotment – number of shares all(ordinary)', "");
										$document->setValue('Allotment – number of shares all(others)', "");
										$document->setValue('Allotment – amount of shares all with currency(ordinary)', "");
										$document->setValue('Allotment – amount of shares all with currency(others)', "");
										$document->setValue("Allotment – currency(ordinary)", "");
										$document->setValue("Allotment – currency(others)", "");
									}
									else
									{
										$document->setValue('Allotment – number of shares all(others)', $number_of_share_all);
										$document->setValue('Allotment – amount of shares all with currency(others)', $amount_of_share_all_with_currency);
										$document->setValue("Allotment – currency(others)", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - currency", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

										$document->setValue('Allotment – number of shares all(ordinary)', "");
										$document->setValue('Allotment – number of shares all(preference)', "");
										$document->setValue('Allotment – amount of shares all with currency(ordinary)', "");
										$document->setValue('Allotment – amount of shares all with currency(preference)', "");
										$document->setValue("Allotment – currency(ordinary)", "");
										$document->setValue("Allotment – currency(preference)", "");
									}
									$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('firm_address', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('Firm Tel', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Tel", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('Firm Fax', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Fax", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Company type', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company type", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("Allotment - number of shares all", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Allotment - type of shares", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("Allotment - currency", $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - currency", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Class of shares - all', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Class of shares - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('Currency of shares - all', $this->transaction_word_model->getWordValue($transaction_master_id, "Currency of shares - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('No of shares issued - all', $this->transaction_word_model->getWordValue($transaction_master_id, "No of shares issued - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								//print_r($this->transaction_word_model->getWordValue($transaction_master_id, "No of shares issued - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Amount of shares issued - all', $this->transaction_word_model->getWordValue($transaction_master_id, "Amount of shares issued - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Amount of shares paid up - all', $this->transaction_word_model->getWordValue($transaction_master_id, "Amount of shares paid up - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));


								if(count($allotment_member_result) > 0)
								{
									$document->cloneRow('Allotment - members_details', count($allotment_member_result));
									for($g = 0; $g < count($allotment_member_result); $g++)
				                	{
				                		$document->setValue('Allotment - members_details#'.($g+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members_details", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $allotment_member_result[$g]));
				                		$document->setValue('Allotment - number of shares#'.($g+1), number_format($allotment_member_result[$g]["number_of_share"], 2));
				                		$document->setValue('Allotment - type of shares#'.($g+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - type of shares", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
				                		if($transaction_task_name == "Incorporation of new company")
				                		{
				                			$document->setValue("Members' Meeting Date#".($g+1), "DATE OF INCORPORATION");
				                		}
				                		else
				                		{
				                			$document->setValue("Members' Meeting Date#".($g+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
				                		}
				                		$document->setValue('Allotment - currency#'.($g+1), $allotment_member_result[$g]["currency_name"]);
				                		$document->setValue('Allotment - amount of shares#'.($g+1), number_format($allotment_member_result[$g]["amount_paid"], 2));
				                	}
								}
								else
								{
									$document->setValue('Allotment - members_details', '');
									$document->setValue('Allotment - number of shares', '');
									$document->setValue('Allotment - type of shares', '');
									$document->setValue('Allotment - currency', '');
									$document->setValue('Allotment - amount of shares', '');
									$document->setValue("Member's Meeting Date", '');
								}
								//Microsoft Word End
				            }
				            
							if(strpos($str, '<tr class="loop"') !== false)
		                	{
			            		preg_match_all ('/<tr class="loop"(.+?)<\/tr>/s', $str, $abstract_string_array);
			            	
			                	for($g = 0; $g < count($allotment_member_result); $g++)
			                	{
			                		$allotment_html_string = $abstract_string_array[0][0];
			            			
			                		if(strpos($allotment_html_string, '<span class="myclass mceNonEditable">{{Allotment - members}}</span>') !== false)
				                	{
			                			if($allotment_member_result[$g]["name"] != '')
			                			{
											if($allotment_member_result[$g]['officer_address_type'] == "Local")
											{
												if($allotment_member_result[$g]["unit_no1"] != "" || $allotment_member_result[$g]["unit_no2"] != "")
												{
													$client_unit = ' #'.$allotment_member_result[$g]["unit_no1"] .' - '.$allotment_member_result[$g]["unit_no2"];
												}
												else
												{
													$client_unit = "";
												}

												if($allotment_member_result[$g]["building_name1"] != "")
												{
													$members_building_name_1 = ' '.$allotment_member_result[$g]["building_name1"];
												}

												$offis_address_content = $allotment_member_result[$g]["street_name1"].',<br/>'.$client_unit.''.$members_building_name_1.',<br/>SINGAPORE '.$allotment_member_result[$g]["postal_code1"];
											}
											else if($allotment_member_result[$g]['officer_address_type'] == "Foreign")
											{
												$foreign_address1 = !empty($allotment_member_result[$g]["foreign_address1"])?$allotment_member_result[$g]["foreign_address1"]: '';
												$foreign_address2 = !empty($allotment_member_result[$g]["foreign_address2"])?',<br/>'. $allotment_member_result[$g]["foreign_address2"]: '';
												$foreign_address3 = !empty($allotment_member_result[$g]["foreign_address3"])?',<br/>'.$allotment_member_result[$g]["foreign_address3"]: '';

												$offis_address_content = $foreign_address1.$foreign_address2.$foreign_address3;
											}

			                				$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members}}</span>', $this->encryption->decrypt($allotment_member_result[$g]["name"]).'<br/>(Identification no: '.$this->encryption->decrypt($allotment_member_result[$g]["identification_no"]).')<br/>('.$offis_address_content.')<br/>'. $allotment_member_result[$g]["officer_nationality"] .'<br/>', $allotment_html_string);

			                			}
			                			elseif($allotment_member_result[$g]["company_name"] != '')
			                			{
			                				if($allotment_member_result[$g]['officer_company_address_type'] != null)
											{
												if($allotment_member_result[$g]['officer_company_address_type'] == "Local")
												{
													if($allotment_member_result[$g]["company_unit_no1"] != "" || $allotment_member_result[$g]["company_unit_no2"] != "")
													{
														$client_unit = ' #'.$allotment_member_result[$g]["company_unit_no1"].' - '.$allotment_member_result[$g]["company_unit_no2"];
													}
													else
													{
														$client_unit = "";
													}

													if($allotment_member_result[$g]["building_name1"] != "")
													{
														$members_building_name_2 = ' '.$allotment_member_result[$g]["building_name1"];
													}

													$offis_company_address = $this->encryption->decrypt($allotment_member_result[$g]["company_street_name"]).',<br/>'. $client_unit.''.$members_building_name_2.',<br/>SINGAPORE '.$allotment_member_result[$g]["company_postal_code"];
												}
												else if($allotment_member_result[$g]['officer_company_address_type'] == "Foreign")
												{
													$company_foreign_address1 = !empty($allotment_member_result[$g]["company_foreign_address1"])?$allotment_member_result[$g]["company_foreign_address1"]: '';
													$company_foreign_address2 = !empty($allotment_member_result[$g]["company_foreign_address2"])?',<br/>'.$allotment_member_result[$g]["company_foreign_address2"]: '';
													$company_foreign_address3 = !empty($allotment_member_result[$g]["company_foreign_address3"])? ',<br/>'.$allotment_member_result[$g]["company_foreign_address3"]: '';

													$offis_company_address = $company_foreign_address1 . $company_foreign_address2 . $company_foreign_address3;
												}
											}
			                				$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members}}</span>', $this->encryption->decrypt($allotment_member_result[$g]["company_name"]).'<br/>(Identification no: '.$this->encryption->decrypt($allotment_member_result[$g]["register_no"]).')<br/>('.$offis_company_address.')<br/>'. $allotment_member_result[$g]["country_of_incorporation"] .'<br/>', $allotment_html_string);
			                			}
			                			elseif($allotment_member_result[$g]["client_company_name"] != '')
			                			{
											if($allotment_member_result[$g]["client_unit_no1"] != "" || $allotment_member_result[$g]["client_unit_no2"] != "")
											{
												$client_unit = ' #'.$allotment_member_result[$g]["client_unit_no1"].' - '.$allotment_member_result[$g]["client_unit_no2"];
											}
											else
											{
												$client_unit = "";
											}

											if($allotment_member_result[$g]["building_name1"] != "")
											{
												$members_building_name_3 = ' '.$allotment_member_result[$g]["building_name1"];
											}

											$client_street_name = !empty($allotment_member_result[$g]["client_street_name"])?$allotment_member_result[$g]["client_street_name"]: '';
											if(!empty($client_unit) || !empty($members_building_name_3))
											{
												$break = ',<br/>';
											}
											else
											{
												$break = '';
											}

											$client_address = $client_street_name . $break . $client_unit.''.$members_building_name_3.',<br/>SINGAPORE '.$allotment_member_result[$g]["client_postal_code"];	

											$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members}}</span>', $allotment_member_result[$g]["client_company_name"].'<br/>(Identification no: '.$allotment_member_result[$g]["registration_no"].')<br/>('.$client_address.')<br/>', $allotment_html_string);
			                			}
			                		}

			                		if(strpos($allotment_html_string, '<span class="myclass mceNonEditable">{{Allotment - number of shares}}</span>') !== false)
				                	{
				                		$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - number of shares}}</span>', number_format($allotment_member_result[$g]["number_of_share"], 2), $allotment_html_string);
				                	}

				                	if(strpos($allotment_html_string, '<span class="myclass mceNonEditable">{{Allotment - amount of shares}}</span>') !== false)
				                	{
				                		$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - amount of shares}}</span>', number_format($allotment_member_result[$g]["amount_share"], 2), $allotment_html_string);
				                	}

				                	if(strpos($allotment_html_string, '<span class="myclass mceNonEditable">{{Allotment - currency}}</span>') !== false)
				                	{
				                		$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - currency}}</span>', $allotment_member_result[$g]["currency_name"], $allotment_html_string);
				                	}

				                	if(strpos($allotment_html_string, '<span class="myclass mceNonEditable">{{Allotment - certificate}}</span>') !== false)
				                	{
				                		$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - certificate}}</span>', $allotment_member_result[$g]["new_certificate_no"], $allotment_html_string);
				                	}

				                	if(strpos($allotment_html_string, '<span class="myclass mceNonEditable">{{Allotment - Number of shares paid}}</span>') !== false)
				                	{
				                		$allotment_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - Number of shares paid}}</span>', number_format($allotment_member_result[$g]["amount_paid"], 2), $allotment_html_string);
				                	}

									if($q[0]["document_name"] == "DRIW-Allotment of Shares" && $g == 3)
									{
										// break page and create new table tag so that they have 2 separate tables
										$latest_allotment_table = $latest_allotment_table . $allotment_html_string . '</tbody></table></td></tr></tbody></table>' . "{{break_page}} <br/><br/><br/>" . 
										'<table style="height: 292px; width: 100%; border-collapse: collapse;" border="0">
											<tbody>
											<tr>
											<td style="width: 6.49432%;"><span style="font-size: 10pt;"></span></td>
											<td style="width: 93.5057%;"><span style="font-size: 10pt;"></span>
											<table style="width: 100%; border-collapse: collapse;" border="0">
											<tbody>';
									}
									elseif($q[0]["document_name"] == "F24 - Return of allotment of shares" && $g == 1 && $g != count($allotment_member_result) - 1)
									{
										$latest_allotment_table = $latest_allotment_table  . $allotment_html_string . '</tbody></table>' . "{{break_page}} <br/><br/><br/>" . 
										'<table style="width: 100%; border-collapse: collapse;" border="1">
											<tbody>';
									}
									else
									{
										$obj_pdf->SetAutoPageBreak(TRUE, 25);

										$latest_allotment_table = $latest_allotment_table . $allotment_html_string;
									}
			                	}
			                	$new_contents = str_replace($abstract_string_array[0][0], $latest_allotment_table, $str);
			                }

			                if($q[0]["document_name"] == "F24 - Return of allotment of shares" && (count($allotment_member_result) < 3 || count($allotment_member_result) > 7)) 
			                {
			                	if(strpos($new_contents, '<p style="text-align: justify;"><strong>Summary of Capital</strong></p>') !== false)
					            {
					            	$new_contents = str_replace('<p style="text-align: justify;"><strong>Summary of Capital</strong></p>', '{{break_page}} <p style="text-align: justify;"><strong>Summary of Capital</strong></p>', $new_contents);
					            }
			                }

			    //             $pattern = "/{{[^}}]*}}/";
							// $subject = $new_contents;
							// preg_match_all($pattern, $subject, $matches);
							
							// for($r = 0; $r < count($matches[0]); $r++)
							// {
							// 	$string1 = (str_replace('{{', '',$matches[0][$r]));
							// 	$string2 = (str_replace('}}', '',$string1));
								
							// 	$replace_string = $matches[0][$r];

							// 	if($string2 == "Allotment - overall amount of share")
							// 	{
							// 		$temp = '______________';

									$overall_amount_paid = 0;

									for($amrc = 0; $amrc < count($allotment_member_result); $amrc++)
									{
										$overall_amount_paid += (float)$allotment_member_result[$amrc]["amount_paid"];
									}

									$temp = number_format($overall_amount_paid,2);

									$new_contents = str_replace($replace_string, $temp, $new_contents);

									//Microsoft Word
									$document->setValue("Allotment - overall amount of share", $temp);

									if($q[0]["document_category_id"] == 2)
									{
										if($type_of_share == "Ordinary Share(s)")
										{
											$document->setValue('Allotment - overall amount of share(ordinary)', $temp);
											$document->setValue('Allotment - overall amount of share(preference)', "");
											$document->setValue('Allotment - overall amount of share(others)', "");
										}
										elseif($type_of_share == "Preferred Share")
										{
											$document->setValue('Allotment - overall amount of share(preference)', $temp);
											$document->setValue('Allotment - overall amount of share(ordinary)', "");
											$document->setValue('Allotment - overall amount of share(others)', "");
										}
										else
										{
											$document->setValue('Allotment - overall amount of share(others)', $temp);
											$document->setValue('Allotment - overall amount of share(ordinary)', "");
											$document->setValue('Allotment - overall amount of share(preference)', "");
										}
									}
									//Microsoft Word End
							// 	}
							// }
			                $content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents, null, $q[0]["document_name"]);
			            }

						$content = $this->break_page($obj_pdf, $content);
			            $content = $this->end_of_resol_page_break($obj_pdf, $content);

						$obj_pdf->writeHTML($content, true, false, false, false, '');

						// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = "";//$content
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);

	            		//Microsoft Word
	            		if($q[0]["document_name"] == "DRIW-Allotment of Shares" || $q[0]["document_name"] == "F24 - Return of allotment of shares" || $q[0]["document_name"] == "DRIW - Transfer of Shares")
			            {
		            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
			            }
			            //Microsoft Word End
					}
					else if($q[0]["document_name"] == "Ltr of Indemnity")
					{	
						$new_contents = '';
						if($transaction_task_name == "Appointment and Resign of Secretarial")
						{
							$sec_where = " AND transaction_client_officers.appoint_resign_flag = 'appoint'";
						}
						else
						{
							$sec_where = "";
						}

						$get_secretary_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 4".$sec_where."");

						if($get_secretary_info->num_rows())
						{
							$get_secretary_info = $get_secretary_info->result_array();
							
							for($t = 0 ; $t < count($get_secretary_info) ; $t++)
							{
								//Microsoft Word
								$PHPWord = new \PhpOffice\PhpWord\PhpWord();

								$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Ltr of Indemnity.docx");

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('Secretarys name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Secretarys ID - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys ID - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Secretarys address - appointment', $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								//Microsoft Word End

								$obj_pdf = new NEWPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
								$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
								$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
								$obj_pdf->SetMargins(25, PDF_MARGIN_TOP, 25);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								$str = $new_contents_info;
								$latest_directors_table = "";

					            if($transaction_task_name == "Appointment and Resign of Secretarial")
								{
					            	$get_directors_info = $this->db->query("select client_officers.*, officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");
					            }
					            else
					            {
					            	$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_client_officers.position = 1");
					            }

								$get_directors_info = $get_directors_info->result_array();

								//Microsoft Word
								if(count($get_directors_info) > 0)
								{
									$document->cloneRow('Directors name - appointment', count($get_directors_info));

									for($g = 0; $g < count($get_directors_info); $g++)
				                	{
				                		$document->setValue('Directors name - appointment#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_directors_info[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - appointment', '');
								}	
								//Microsoft Word End
								if(strpos($str, '<tr class="loop"') !== false)
			                	{
				            		preg_match_all ('/<tr class="loop"(.+?)<\/tr>/s', $str, $abstract_string_array);

				                	for($g = 0; $g < count($get_directors_info); $g++)
				                	{
				            			$directors_html_string = $abstract_string_array[0][0];
				                		if(strpos($directors_html_string, '<span class="myclass mceNonEditable">{{Directors name - appointment}}</span>') !== false)
					                	{
				                				$directors_html_string = str_replace('<span class="myclass mceNonEditable">{{Directors name - appointment}}</span>', $this->encryption->decrypt($get_directors_info[$g]["name"]), $directors_html_string);
				                		}


				                		$latest_directors_table = $latest_directors_table.'<br/><br/><br/><br/><br/><br/>&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..<br/>'.$directors_html_string;
				                		
					            		
				                	}
				                	$new_contents = str_replace($abstract_string_array[0][0], $latest_directors_table, $str);
				                }
							
								$below_content = $new_contents;
								$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $below_content, $get_secretary_info[$t]["id"], $q[0]["document_name"]);

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_secretary_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
			            		$data['created_by']=$this->session->userdata('user_id');

			            		$this->save_incorporate_pdf($data);

			            		//Microsoft Word
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' ('. $this->encryption->decrypt($get_secretary_info[$t]["name"]) .') - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' ('. $this->encryption->decrypt($get_secretary_info[$t]["name"]) .') - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
								//Microsoft Word End
							}
						}

					}
					else if($q[0]["document_name"] == "Letter taking over of Secretarial Services")
					{
						//Microsoft Word
						$PHPWord = new \PhpOffice\PhpWord\PhpWord();

						$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Letter taking over of Secretarial Services.docx");

						$document->setValue('company_name', htmlspecialchars($client_query[0]["company_name"]));

						$company_address = array(
							'type' 			=> 'Local',
							'street_name1' 	=> $client_query[0]["street_name"],
							'unit_no1'		=> $client_query[0]["unit_no1"],
							'unit_no2'		=> $client_query[0]["unit_no2"],
							'building_name1'=> $client_query[0]["building_name"],
							'postal_code1'	=> $client_query[0]["postal_code"]
						);

						$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
						$document->setValue('company_address', $address);

						$get_resignation_of_company_secretary_info = $this->db->query("select transaction_resignation_of_company_secretary.* from transaction_resignation_of_company_secretary where transaction_id='".$transaction_master_id."'");

						if($get_resignation_of_company_secretary_info->num_rows())
						{
							$get_resignation_of_company_secretary_info = $get_resignation_of_company_secretary_info->result_array();
							if($get_resignation_of_company_secretary_info[0]["resignation_of_corporate_secretarial_agent_address"] != "")
							{
								$string_address = nl2br($get_resignation_of_company_secretary_info[0]["resignation_of_corporate_secretarial_agent_address"]);
								$string_address = preg_replace("/<br\W*?\/>\n/", "<w:br/>", $string_address);
								//echo json_encode($string_address);
								$document->setValue('resignation_of_corporate_secretarial_agent_address', $string_address);
							}
							else
							{
								$document->setValue('resignation_of_corporate_secretarial_agent_address', '<w:t xml:space="preserve">                                                     </w:t>');
							}
							if($get_resignation_of_company_secretary_info[0]["resignation_of_corporate_secretarial_agent"] != "")
							{
								$document->setValue('resignation_of_corporate_secretarial_agent', htmlspecialchars($get_resignation_of_company_secretary_info[0]["resignation_of_corporate_secretarial_agent"]));
							}
							else
							{
								$document->setValue('resignation_of_corporate_secretarial_agent', '<w:t xml:space="preserve">                                                                         </w:t>');
							}
						}
						$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End
					}
					else if($q[0]["document_name"] == "DRIW - Resignation of Co Sec")
					{
						//Microsoft Word
						$PHPWord = new \PhpOffice\PhpWord\PhpWord();

						$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Resignation of Co Sec.docx");

						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						$get_resignation_of_company_secretary_info = $this->db->query("select transaction_resignation_of_company_secretary.* from transaction_resignation_of_company_secretary where transaction_id='".$transaction_master_id."'");

						if($get_resignation_of_company_secretary_info->num_rows())
						{
							$get_resignation_of_company_secretary_info = $get_resignation_of_company_secretary_info->result_array();
							
							$secretarys_name_resignation = $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - resignation", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							//if($get_resignation_of_company_secretary_info[0]["resignation_of_company_secretary"] != "")
							if($secretarys_name_resignation != "")
							{
								$document->setValue('resignation_of_company_secretary', htmlspecialchars($secretarys_name_resignation));
							}
							else
							{
								$document->setValue('resignation_of_company_secretary', '<w:t xml:space="preserve">                                                     </w:t>');
							}
							if($get_resignation_of_company_secretary_info[0]["resignation_of_corporate_secretarial_agent"] != "")
							{
								$document->setValue('resignation_of_corporate_secretarial_agent', htmlspecialchars($get_resignation_of_company_secretary_info[0]["resignation_of_corporate_secretarial_agent"]));
							}
							else
							{
								$document->setValue('resignation_of_corporate_secretarial_agent', '<w:t xml:space="preserve">                                                                         </w:t>');
							}
						}
						else
						{
							$document->setValue('resignation_of_company_secretary', '<w:t xml:space="preserve">                                                     </w:t>');
							$document->setValue('resignation_of_corporate_secretarial_agent', '<w:t xml:space="preserve">                                                                         </w:t>');
						}

						$document->setValue('DISPLAY TITLE TYPE FOR BOARD OF DIRECTOR', $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						if(count($director_name_all) > 0)
						{
							$document->cloneRow('Directors name - all', count($director_name_all));

							for($g = 0; $g < count($director_name_all); $g++)
		                	{
		                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
		                	}
						}
						else
						{
							$document->setValue('Directors name - all', '');
						}

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End
					}
					else if($q[0]["document_name"] == "Handover - Terminaltion of Corp Sec")
					{
						$query = $this->db->query("select firm.*, firm_email.email, firm_telephone.telephone, firm_fax.fax from firm 
										JOIN firm_email ON firm_email.firm_id = firm.id AND firm_email.primary_email = 1 
										JOIN firm_telephone ON firm_telephone.firm_id = firm.id AND firm_telephone.primary_telephone = 1 
										JOIN firm_fax ON firm_fax.firm_id = firm.id AND firm_fax.primary_fax = 1
										where firm.id = '".$this->session->userdata("firm_id")."'");

						$query = $query->result_array();

						$get_resign_secretary_info = $this->db->query("select transaction_client_officers.*, officer.name, transaction_resign_officer_reason.reason_selected from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join transaction_resign_officer_reason on transaction_resign_officer_reason.transaction_client_officers_id = transaction_client_officers.id where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 4 AND transaction_client_officers.appoint_resign_flag = 'resign'");

						if($get_resign_secretary_info->num_rows())
						{
							$get_resign_secretary_info = $get_resign_secretary_info->result_array();
							
							for($t = 0 ; $t < count($get_resign_secretary_info) ; $t++)
							{
								if($get_resign_secretary_info[$t]["reason_selected"] != NULL)
								{
									//Microsoft Word
									$PHPWord = new \PhpOffice\PhpWord\PhpWord();

									$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Handover - Terminaltion of Corp Sec.docx");

									$document->setImageValue('CompanyLogo', "uploads/logo/". $query[0]["file_name"] ."");
									$document->setValue('firm_name', htmlspecialchars($query[0]["name"]));
									$document->setValue('UEN', $query[0]["registration_no"]);
									$firm_address = array(
										'type' 			=> 'Local',
										'street_name1' 	=> strtoupper($query[0]["street_name"]),
										'unit_no1'		=> $query[0]["unit_no1"],
										'unit_no2'		=> $query[0]["unit_no2"],
										'building_name1'=> strtoupper($query[0]["building_name"]),
										'postal_code1'	=> $query[0]["postal_code"]
									);

									$address1 = $this->transaction_word_model->write_address_local_foreign($firm_address, "comma", "big_cap");
									
									$document->setValue('firm_address', $address1);
									$document->setValue('firm_telephone', htmlspecialchars($query[0]["telephone"]));
									$document->setValue('firm_fax', htmlspecialchars($query[0]["fax"]));
									$document->setValue('firm_email', htmlspecialchars($query[0]["email"]));

									$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_resign_secretary_info[$t]["id"], $q[0]["document_name"])));
									$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], $get_resign_secretary_info[$t]["id"], $q[0]["document_name"])));
									$document->setValue('Secretarys name - resignation', htmlspecialchars($this->encryption->decrypt($get_resign_secretary_info[$t]["name"])));

									$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_resign_secretary_info[$t]["name"]))).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_resign_secretary_info[$t]["name"]))).'.docx');
									//Microsoft Word End
								}
							}
						}
					}
					else if($q[0]["document_name"] == "Ltr - Resignation of Co Sec")
					{
						$get_resign_secretary_info = $this->db->query("select transaction_client_officers.*, officer.name, transaction_resign_officer_reason.reason_selected from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join transaction_resign_officer_reason on transaction_resign_officer_reason.transaction_client_officers_id = transaction_client_officers.id where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 4 AND transaction_client_officers.appoint_resign_flag = 'resign'");

						if($get_resign_secretary_info->num_rows())
						{
							$get_resign_secretary_info = $get_resign_secretary_info->result_array();
							
							for($t = 0 ; $t < count($get_resign_secretary_info) ; $t++)
							{
								if($get_resign_secretary_info[$t]["reason_selected"] != NULL)
								{
									//Microsoft Word
									$PHPWord = new \PhpOffice\PhpWord\PhpWord();

									$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Ltr - Resignation of Co Sec.docx");

									$document->setValue('company_name', htmlspecialchars($client_query[0]["company_name"]));

									$company_address = array(
										'type' 			=> 'Local',
										'street_name1' 	=> $client_query[0]["street_name"],
										'unit_no1'		=> $client_query[0]["unit_no1"],
										'unit_no2'		=> $client_query[0]["unit_no2"],
										'building_name1'=> $client_query[0]["building_name"],
										'postal_code1'	=> $client_query[0]["postal_code"]
									);

									$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
									$document->setValue('company_address', $address);

									$document->setValue('Secretarys name - resignation', $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - resignation", $company_code, $q[0]["firm_id"], $get_resign_secretary_info[$t]["id"], $q[0]["document_name"]));
									$document->setValue('Secretarys ID - resignation', $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys ID - resignation", $company_code, $q[0]["firm_id"], $get_resign_secretary_info[$t]["id"], $q[0]["document_name"]));
									$document->setValue('Secretarys address - resignation', $this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys address - resignation", $company_code, $q[0]["firm_id"], $get_resign_secretary_info[$t]["id"], $q[0]["document_name"]));

									$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_resign_secretary_info[$t]["name"]))).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_resign_secretary_info[$t]["name"]))).'.docx');
									//Microsoft Word End
								}
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW - Appt of Co Sec")
					{
						if($transaction_task_name == "Appointment and Resign of Secretarial")
						{
							$sec_where = " AND transaction_client_officers.appoint_resign_flag = 'appoint'";
						}
						else
						{
							$sec_where = "";
						}

						$get_secretary_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 4".$sec_where."");

						if($get_secretary_info->num_rows())
						{
							$get_secretary_info = $get_secretary_info->result_array();
							
							for($t = 0 ; $t < count($get_secretary_info) ; $t++)
							{
								//Microsoft Word
								$PHPWord = new \PhpOffice\PhpWord\PhpWord();

								$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Appt of Co Sec.docx");

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('firm_address', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm address", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Secretarys name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Secretarys ID - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys ID - appointment", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"])));

								$document->setValue('DISPLAY TITLE TYPE FOR BOARD OF DIRECTOR', $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));

								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $get_secretary_info[$t]["id"], $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									$document->cloneRow('Directors name - all', count($director_name_all));

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}
								
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_secretary_info[$t]["name"]))).'.docx');
								//Microsoft Word End
							}
						}
					}
					else if($q[0]["document_name"] == "First Director Resolutions (Many)")
					{
						//Microsoft Word
						if($q[0]["document_category_id"] == 1)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/First Director Resolutions (Many).docx");
						}
						else if($q[0]["document_category_id"] == 2)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Board of meeting (Many).docx");
						}

						$get_secretarys = $this->db->query("select officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position=4");

						$get_secretarys = $get_secretarys->result_array();

						if(count($get_secretarys) == 0)
						{
							$document->setValue('title_appt_secretary', "");
							$document->setValue('appt_secretary_content', "");
						}
						else
						{
							if($q[0]["document_category_id"] == 1)
							{
								$document->setValue('title_appt_secretary', '<w:br/>APPOINTMENT OF SECRETARY<w:br/>');
								$document->setValue('appt_secretary_content', 'Resolved that ${Secretarys name - appointment} be and is hereby appointed the Secretary of the Company and that his appointment as Secretary shall ipso facto be terminated effectively and conclusively one month from the date of notice in writing served upon the Board of the Directors of the Company either personally or by sending it through the post in a prepaid letter addressed to the Company or delivering or leaving the same at its last known registered office.<w:br/>');
							}
							else if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('title_appt_secretary', '<w:br/><w:br/>FIRST SECRETARY<w:br/>');
								$document->setValue('appt_secretary_content', '<w:p w14:paraId="2EC9336F" w14:textId="77777777" w:rsidR="00284784" w:rsidRPr="00044943" w:rsidRDefault="00284784"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr></w:pPr><w:r w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t>IT WAS CONFIRMED THAT</w:t></w:r><w:r w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidR="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t>${Secretarys name - appointment}</w:t></w:r><w:r w:rsidR="00337CF2" w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t>was named as the First Secretary of the Company.</w:t></w:r></w:p><w:br/>');
							}
						}
						
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('underline_UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "underline_UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('underline_effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "underline_effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Chairman', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Year end new', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Year end new (No Year)', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new (No Year)", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Secretarys name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - appointment", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], null, $q[0]["document_category_id"])));
						$document->setValue('Allotment - number of shares all', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						//Microsoft Word End
						
						$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
						$obj_pdf->SetCreator(PDF_CREATOR);
						$title = "Document";
						$obj_pdf->SetTitle($title);

						if($client_query[0]["transaction_master_register_no"] != "")
						{
							$register_no = $client_query[0]["transaction_master_register_no"];
						}
						else
						{
							$register_no = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
						}
						$obj_pdf->setHeaderData($ln='', $lw='', $ht='', $hs='<div style="font-family: Helvetica, Sans-Serif;text-align: center;position: fixed; margin: 20px; width: 100%; font-weight: bold;"><span style="font-size: 17px;">'.$client_query[0]["company_name"].'</span><br/><span style="font-size: 10px;">(the &ldquo;<strong>Company</strong>&rdquo;)<br />(Company Registration No.: '.$register_no.')<br />(Incorporated in the Republic of Singapore)</span></div><hr>', $tc=array(0,0,0), $lc=array(0,0,0));
						$obj_pdf->setHeaderMargin(5);
						$obj_pdf->setPrintFooter(false);
						$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
						$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
						$obj_pdf->SetDefaultMonospacedFont('helvetica');
						$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
						$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
						$obj_pdf->SetMargins(25, PDF_MARGIN_TOP + 10, 25);
						$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
						$obj_pdf->SetFont('helvetica', '', 10);
						$obj_pdf->setFontSubsetting(false);
						$obj_pdf->AddPage();
						$obj_pdf->SetTopMargin(25);

						$director_str = $new_contents_info;
						$latest_directors_table = "";

			            $get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8)");

						$get_directors_info = $get_directors_info->result_array();

						//Microsoft Word
						if(count($get_directors_info) > 0)
						{
							if($q[0]["document_category_id"] == 1)
							{
								for($g = 0; $g < 2; $g++)
				                {
									$document->cloneRow('Directors name - appointment', count($get_directors_info));
								}
							}
							elseif($q[0]["document_category_id"] == 2)
							{
								$document->cloneRow('Directors name - appointment', count($get_directors_info));
							}
							for($g = 0; $g < count($get_directors_info); $g++)
		                	{
		                		$document->setValue('Directors name - appointment#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_directors_info[$g]["name"])));
		                		$document->setValue('Directors ID - appointment#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_directors_info[$g]["identification_no"])));
			                	
		                		if($q[0]["document_category_id"] == 2)
								{
									if($g == 0)
									{
										$director_name = $this->encryption->decrypt($get_directors_info[$g]["name"]);
									}
									elseif($g == (count($get_directors_info)-1))
									{
										$director_name = $director_name.", and ".$this->encryption->decrypt($get_directors_info[$g]["name"]);
									}
									else
									{
										$director_name = $director_name.", ".$this->encryption->decrypt($get_directors_info[$g]["name"]);
									}
								}
		                	}

		                	if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('Directors name - appointment (comma)', htmlspecialchars($director_name));
							}
						}
						else
						{
							$document->setValue('Directors name - appointment', '');
						}	
						//Microsoft Word End

						if(strpos($director_str, '<tr class="loop director"') !== false)
	                	{
		            		preg_match_all ('/<tr class="loop director"(.+?)<\/tr>/s', $director_str, $abstract_string_array);
		            	
		                	for($k = 0; $k < count($get_directors_info); $k++)
		                	{
		            			$directors_html_string = $abstract_string_array[0][0];

		                		if(strpos($directors_html_string, '<span class="myclass mceNonEditable">{{Directors name - appointment}}</span>') !== false)
			                	{
		                			$directors_html_string = str_replace('<span class="myclass mceNonEditable">{{Directors name - appointment}}</span>', $this->encryption->decrypt($get_directors_info[$k]["name"]), $directors_html_string);
		                		}

		                		if(strpos($directors_html_string, '<span class="myclass mceNonEditable">{{Directors ID - appointment}}</span>') !== false)
			                	{
		                			$directors_html_string = str_replace('<span class="myclass mceNonEditable">{{Directors ID - appointment}}</span>', $this->encryption->decrypt($get_directors_info[$k]["identification_no"]), $directors_html_string);
		                		}


		                		$latest_directors_table = $latest_directors_table.$directors_html_string;
		                		
			            		
		                	}
		                	$new_director_contents = str_replace($abstract_string_array[0][0], $latest_directors_table, $director_str);
		                }

						if(count($get_secretarys) == "0")
						{
							$new_director_contents = preg_replace('/<p class="check_secretary" style="text-align: justify;">(.*?)<\/p>/i', '', $new_director_contents);
						}
						

						$member_str = $new_director_contents;
						$latest_member_table = "";

			            $get_member_info = $this->db->query("select transaction_member_shares.*, officer.name, officer_company.company_name, client.company_name as client_company_name, officer.identification_no, officer_company.register_no, client.registration_no, transaction_certificate.certificate_no from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id AND transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id AND transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = 'client' AND client.deleted != 1 right join transaction_certificate on transaction_certificate.officer_id = transaction_member_shares.officer_id and transaction_certificate.field_type = transaction_member_shares.field_type and transaction_certificate.transaction_id = transaction_member_shares.transaction_id and transaction_certificate.client_member_share_capital_id = transaction_member_shares.client_member_share_capital_id where transaction_member_shares.company_code='".$company_code."' AND transaction_member_shares.transaction_page_id='".$transaction_master_id."' order by transaction_certificate.certificate_no");

						$get_member_info = $get_member_info->result_array();

						//Microsoft Word
						if(count($get_member_info) > 0)
						{
							$document->cloneRow('Allotment - members', count($get_member_info));

							for($g = 0; $g < count($get_member_info); $g++)
		                	{
		                		if($get_member_info[$g]["name"] != null)
								{
									$document->setValue('Allotment - members#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
								}
								else if($get_member_info[$g]["company_name"] != null)
								{
									$document->setValue('Allotment - members#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
								}
								else if($get_member_info[$g]["client_company_name"] != null)
								{
									$document->setValue('Allotment - members#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
								}

								if($get_member_info[$g]["identification_no"] != null)
								{
									$document->setValue('Allotment - members ID#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["identification_no"])));
								}
								else if($get_member_info[$g]["register_no"] != null)
								{
									$document->setValue('Allotment - members ID#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["register_no"])));
								}
								else if($get_member_info[$g]["registration_no"] != null)
								{
									$document->setValue('Allotment - members ID#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["registration_no"])));
								}
		                		
		                		if($q[0]["document_category_id"] == 1)
								{
		                			$document->setValue('Allotment - number of shares#'.($g+1), number_format($get_member_info[$g]["number_of_share"]).'<w:br/>('.strtoupper($this->convert_number_to_word_model->convert_number_to_words($get_member_info[$g]["number_of_share"])).')');
		                		}
		                		elseif($q[0]["document_category_id"] == 2)
								{
									$document->setValue('Allotment - number of shares#'.($g+1), number_format($get_member_info[$g]["number_of_share"]));
									$document->setValue('Allotment - certificate#'.($g+1), $get_member_info[$g]["certificate_no"]);
								}
		                	}
						}
						else
						{
							$document->setValue('Allotment - members', '');
							$document->setValue('Allotment - members ID', '');
							$document->setValue('Allotment - number of shares', '');
						}
						//Microsoft Word End

						if(strpos($member_str, '<tr class="loop allotment"') !== false)
	                	{
		            		preg_match_all ('/<tr class="loop allotment"(.+?)<\/tr>/s', $member_str, $abstract_string_array);
		            	
		                	for($g = 0; $g < count($get_member_info); $g++)
		                	{
		            			$member_html_string = $abstract_string_array[0][0];

		                		if(strpos($member_html_string, '<span class="myclass mceNonEditable">{{Allotment - members}}</span>') !== false)
			                	{
		                				if($get_member_info[$g]["name"] != null)
										{
											$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members}}</span>', $this->encryption->decrypt($get_member_info[$g]["name"]), $member_html_string);
										}
										else if($get_member_info[$g]["company_name"] != null)
										{
											$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members}}</span>', $this->encryption->decrypt($get_member_info[$g]["company_name"]), $member_html_string);
										}
										else if($get_member_info[$g]["client_company_name"] != null)
										{
											$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members}}</span>', $get_member_info[$g]["client_company_name"], $member_html_string);
										}
		                		}

		                		if(strpos($member_html_string, '<span class="myclass mceNonEditable">{{Allotment - members ID}}</span>') !== false)
		                		{
		                			if($get_member_info[$g]["identification_no"] != null)
									{
										$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members ID}}</span>', $this->encryption->decrypt($get_member_info[$g]["identification_no"]), $member_html_string);
									}
									else if($get_member_info[$g]["register_no"] != null)
									{
										$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members ID}}</span>', $this->encryption->decrypt($get_member_info[$g]["register_no"]), $member_html_string);
									}
									else if($get_member_info[$g]["registration_no"] != null)
									{
										$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - members ID}}</span>', $get_member_info[$g]["registration_no"], $member_html_string);
									}
		                		}

		                		if(strpos($member_html_string, '<span class="myclass mceNonEditable">{{Allotment - number of shares}}</span>') !== false)
		                		{

		                			$member_html_string = str_replace('<span class="myclass mceNonEditable">{{Allotment - number of shares}}</span>', number_format($get_member_info[$g]["number_of_share"]).'<br/>('.strtoupper($this->convert_number_to_word_model->convert_number_to_words($get_member_info[$g]["number_of_share"])).')', $member_html_string);
		                		}

		                		$latest_member_table = $latest_member_table.$member_html_string;
		                		
			            		
		                	}
		                	$new_member_contents = str_replace($abstract_string_array[0][0], $latest_member_table, $member_str);
		                }
					
						$other_content = $new_member_contents;

						$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $other_content, null, $q[0]["document_name"]);

						// $obj_pdf->writeHTML($content, true, false, false, false, '');

						// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = ""; //$content;
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);

	            		//Microsoft Word
	            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End
					}
					else if($q[0]["document_name"] == "First Director Resolution - ATTENDANCE SHEET")
					{
						$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
						$obj_pdf->SetCreator(PDF_CREATOR);
						$title = "Document";
						$obj_pdf->SetTitle($title);
						if($client_query[0]["transaction_master_register_no"] != "")
						{
							$register_no = $client_query[0]["transaction_master_register_no"];
						}
						else
						{
							$register_no = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
						}
						$obj_pdf->setHeaderData($ln='', $lw='', $ht='', $hs='<div style="font-family: Helvetica, Sans-Serif;text-align: center;position: fixed; margin: 20px; width: 100%; font-weight: bold;"><span style="font-size: 17px;">'.$client_query[0]["company_name"].'</span><br/><span style="font-size: 10px;">(the &ldquo;<strong>Company</strong>&rdquo;)<br />(Company Registration No.: '.$register_no.')<br />(Incorporated in the Republic of Singapore)</span></div><hr>', $tc=array(0,0,0), $lc=array(0,0,0));
						$obj_pdf->setHeaderMargin(5);
						$obj_pdf->setPrintFooter(false);
						$obj_pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
						$obj_pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
						$obj_pdf->SetDefaultMonospacedFont('helvetica');
						$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
						$obj_pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
						$obj_pdf->SetMargins(25, PDF_MARGIN_TOP + 10, 25);
						$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
						$obj_pdf->SetFont('helvetica', '', 10);
						$obj_pdf->setFontSubsetting(false);
						$obj_pdf->AddPage();
						$obj_pdf->SetTopMargin(25);

						$director_str = $new_contents_info;
						$latest_directors_table = "";

						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8)");

						$get_directors_info = $get_directors_info->result_array();
						if(strpos($director_str, '<tr class="loop director"') !== false)
	                	{
		            		preg_match_all ('/<tr class="loop director"(.+?)<\/tr>/s', $director_str, $abstract_string_array);
		            	
		                	for($k = 0; $k < count($get_directors_info); $k++)
		                	{
		            			$directors_html_string = $abstract_string_array[0][0];

		                		if(strpos($directors_html_string, '<span class="myclass mceNonEditable">{{Directors name - appointment}}</span>') !== false)
			                	{
		                			$directors_html_string = str_replace('<span class="myclass mceNonEditable">{{Directors name - appointment}}</span>', $this->encryption->decrypt($get_directors_info[$k]["name"]), $directors_html_string);
		                		}

		                		$latest_directors_table = $latest_directors_table.$directors_html_string;
		                	}
		                	$new_contents = str_replace($abstract_string_array[0][0], $latest_directors_table, $director_str);
		                }
				
						$content = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents, null, $q[0]["document_name"]);

						// $obj_pdf->writeHTML($content, true, false, false, false, '');

						// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
						
					}
					else if($q[0]["document_name"] == "First Director Resolutions (One)")
					{
						//Microsoft Word
						if($q[0]["document_category_id"] == 1)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/First Director Resolutions (One).docx");
						}
						else if($q[0]["document_category_id"] == 2)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Board of meeting (One).docx");
						}

						$get_secretarys = $this->db->query("select officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position=4");

						$get_secretarys = $get_secretarys->result_array();

						if(count($get_secretarys) == "0")
						{
							$document->setValue('title_appt_secretary', "");
							$document->setValue('appt_secretary_content', "");
						}
						else
						{
							if($q[0]["document_category_id"] == 1)
							{
								$document->setValue('title_appt_secretary', '<w:br/>APPOINTMENT OF SECRETARY<w:br/>');
								$document->setValue('appt_secretary_content', 'Resolved that ${Secretarys name - appointment} be and is hereby appointed the Secretary of the Company and that his appointment as Secretary shall ipso facto be terminated effectively and conclusively one month from the date of notice in writing served upon the Board of the Directors of the Company either personally or by sending it through the post in a prepaid letter addressed to the Company or delivering or leaving the same at its last known registered office.<w:br/>');
							}
							else if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('title_appt_secretary', '<w:br/><w:br/>FIRST SECRETARY<w:br/>');
								$document->setValue('appt_secretary_content', '<w:p w14:paraId="2EC9336F" w14:textId="77777777" w:rsidR="00284784" w:rsidRPr="00044943" w:rsidRDefault="00284784"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr></w:pPr><w:r w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t>IT WAS CONFIRMED THAT</w:t></w:r><w:r w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidR="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t>${Secretarys name - appointment}</w:t></w:r><w:r w:rsidR="00337CF2" w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidRPr="00044943"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="22"/><w:szCs w:val="22"/></w:rPr><w:t>was named as the First Secretary of the Company.</w:t></w:r></w:p><w:br/>');
							}
						}

						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1");

						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();
							//Microsoft Word
							if($q[0]["document_category_id"] == 2)
							{
								$document->cloneRow('Directors name - appointment', count($get_directors_info));
							}
							//Microsoft Word End
							for($t = 0 ; $t < count($get_directors_info) ; $t++)
							{
								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);

								if($client_query[0]["transaction_master_register_no"] != "")
								{
									$register_no = $client_query[0]["transaction_master_register_no"];
								}
								else
								{
									$register_no = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
								}
								$obj_pdf->setHeaderData($ln='', $lw='', $ht='', $hs='<div style="font-family: Helvetica, Sans-Serif;text-align: center;position: fixed; margin: 20px; width: 100%; font-weight: bold;"><span style="font-size: 17px;">'.$client_query[0]["company_name"].'</span><br/><span style="font-size: 10px;">(the &ldquo;<strong>Company</strong>&rdquo;)<br />(Company Registration No.: '.$register_no.')<br />(Incorporated in the Republic of Singapore)</span></div><hr>', $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setHeaderMargin(5);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(25, PDF_MARGIN_TOP + 10, 25);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

								//Microsoft Word
		                		if($q[0]["document_category_id"] == 2)
								{
									$document->setValue('Directors name - appointment#'.($t+1), htmlspecialchars($this->encryption->decrypt($get_directors_info[$t]["name"])));
		                			$document->setValue('Directors ID - appointment#'.($t+1), htmlspecialchars($this->encryption->decrypt($get_directors_info[$t]["identification_no"])));

									if($t == 0)
									{
										$director_name = $this->encryption->decrypt($get_directors_info[$t]["name"]);
									}
									elseif($t == (count($get_directors_info)-1))
									{
										$director_name = $director_name.", and ".$this->encryption->decrypt($get_directors_info[$t]["name"]);
									}
									else
									{
										$director_name = $director_name.", ".$this->encryption->decrypt($get_directors_info[$t]["name"]);
									}
								}
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

								if(count($get_secretarys) == "0")
								{
									//echo json_encode(count($get_secretarys));
									$new_contents = preg_replace('/<p class="check_secretary" style="text-align: justify;">(.*?)<\/p>/i', '', $new_contents);
								}

								$content = $new_contents;

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf');
							}

							if($q[0]["document_category_id"] == 2)
							{
								$document->setValue('Directors name - appointment (comma)', htmlspecialchars($director_name));
							}
						}
						else
						{
							$document->setValue('Directors name - appointment', '');
						}
						//Microsoft Word
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('underline_UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "underline_UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('underline_effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "underline_effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Directors name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[0]["id"], $q[0]["document_name"])));
						$document->setValue('Directors ID - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[0]["id"], $q[0]["document_name"])));
						$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Year end new', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Year end new (No Year)', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new (No Year)", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Secretarys name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Secretarys name - appointment", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], null, $q[0]["document_category_id"])));
						$document->setValue('Allotment - members', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - members", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Allotment - number of shares', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - number of shares", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], null, $q[0]["document_category_id"]));
						$document->setValue('Allotment - certificate', $this->transaction_word_model->getWordValue($transaction_master_id, "Allotment - sole share cert", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						$document->setValue('Chairman', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						
	            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = "";
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
						
					}
					else if($q[0]["document_name"] == "DRIW - Reg Of Controller")
					{
						//Microsoft Word
						$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Reg Of Controller.docx");

						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));

						$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

						$get_directors = $get_directors->result_array();

						if(2 > count($get_directors))
						{
							$document->setValue('sing/plur for director(big_cap)', "'S");
						}
		                else
		                {
							$document->setValue('sing/plur for director(big_cap)', "S'");
						}

						$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]);

						if(count($director_name_all) > 0)
						{
							$document->cloneRow('Directors name - all', count($director_name_all));

							for($g = 0; $g < count($director_name_all); $g++)
		                	{
		                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
		                	}
						}
						else
						{
							$document->setValue('Directors name - all', '');
						}

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						//Microsoft Word End

					}
					else if($q[0]["document_name"] == "Declaration for register of nominee director")
					{
						$current_client_nominee_director = $this->transaction_model->getCurrentClientNomineeDirector($company_code, $transaction_master_id);

						if($current_client_nominee_director != false)
						{	
							for($t = 0 ; $t < count($current_client_nominee_director) ; $t++)
							{
								$this->generate_declaration_for_register_of_nominee_director($transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $current_client_nominee_director[$t]);
							}
						}

						$latest_client_nominee_director = $this->transaction_model->getLatestClientNomineeDirector($company_code, $transaction_master_id);

						if($latest_client_nominee_director != false)
						{
							for($t = 0 ; $t < count($latest_client_nominee_director) ; $t++)
							{
								$this->generate_declaration_for_register_of_nominee_director($transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $latest_client_nominee_director[$t]);
							}
						}
					}
					else if($q[0]["document_name"] == "Declaration for register of controller")
					{
						$get_secretary_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Client Secretary Info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						$current_client_controller = $this->transaction_model->getCurrentClientController($company_code, $transaction_master_id);

						if($current_client_controller != false)
						{
							for($t = 0 ; $t < count($current_client_controller) ; $t++)
							{
								if($q[0]["document_category_id"] == 1)
								{
									$this->generate_declaration_for_register_of_controller($transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $current_client_controller[$t]);
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$this->generate_notice_of_controller($current_client_controller[$t], $transaction_task_name, $transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $get_secretary_info, "updateRegController");
								}
							}
						}

						$latest_client_controller = $this->transaction_model->getLatestClientController($company_code, $transaction_master_id);

						if($latest_client_controller != false)
						{
							for($t = 0 ; $t < count($latest_client_controller) ; $t++)
							{
								if($q[0]["document_category_id"] == 1)
								{
									$this->generate_declaration_for_register_of_controller($transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $latest_client_controller[$t]);
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$this->generate_notice_of_controller($latest_client_controller[$t], $transaction_task_name, $transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $get_secretary_info, "updateRegController");
								}
							}
						}
						
					}
					else if($q[0]["document_name"] == "Declaration for Controller") //Declaration for Controller - Director
					{
						if($transaction_task_name == "Share Transfer")
						{
							$share_transfer_query = $this->transaction_word_model->getWordValue($transaction_master_id, "Member to Controller", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
							//print_r($share_transfer_query);
							if(count($share_transfer_query) > 0)
					        {
								// for($g = 0; $g < count($share_transfer_query); $g++)
				    //             {
				                	$this->generate_declaration_for_controller_of_director($transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $share_transfer_query, $transaction_task_name);
				                //}
				            }
						}
						else
						{
							$appt_director_controller = $this->transaction_model->getApptDirectorController($company_code, $transaction_master_id);

							if($appt_director_controller != false)
							{
								// print_r($appt_director_controller);
								// for($t = 0 ; $t < count($appt_director_controller) ; $t++)
								// {
									$this->generate_declaration_for_controller_of_director($transaction_master_id, $company_code, $q[0]["firm_id"], $q[0]["document_name"], $appt_director_controller, $transaction_task_name);
								// }
							}
						}
					}
					// else if($q[0]["document_name"] == "Declaration for Controller - Director")
					// {
					// 	$transaction_tasks_name = $this->db->query("select transaction_tasks.transaction_task as transaction_task_name from transaction_master left join transaction_tasks on transaction_tasks.id = transaction_master.transaction_task_id where transaction_master.id='".$transaction_master_id."'");

		   //              $transaction_tasks_name = $transaction_tasks_name->result_array();

					// 	$reader = new \PhpOffice\PhpSpreadsheet\Reader\Xls();

					// 	$allotment_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "CDD_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

					// 	if(count($allotment_member_result) > 0)
					// 	{
					// 		for($g = 0; $g < count($allotment_member_result); $g++)
				 //            {
				 //            	// file path
					// 			$spreadsheet = $reader->load($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration for Controller - Director.xls");

					// 			$new_sheet = $spreadsheet->getSheet(2);

					// 			$new_sheet->setCellValue('C9', "Yes, ".htmlspecialchars($transaction_tasks_name[0]["transaction_task_name"]));

					// 			$get_secretary_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Secretary Info", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

					// 			if(count($get_secretary_info) > 0)
					// 			{
					// 				$secretary = "Name: ".$this->encryption->decrypt($get_secretary_info[0]["name"]);
					// 				$secretary_identification_no = $this->encryption->decrypt($get_secretary_info[0]["identification_no"]);
					// 			}
					// 			else
					// 			{
					// 				$secretary = "Name: ";
					// 				$secretary_identification_no = "";
					// 			}

					// 			$new_sheet->setCellValue('D107', htmlspecialchars($secretary));
					// 			if($secretary_identification_no == "S8085328I")
					// 			{
					// 				$drawing = new \PhpOffice\PhpSpreadsheet\Worksheet\Drawing();
					// 				$drawing->setName('Thomas Signature');
					// 				$drawing->setPath('./img/thomas_signature.jpeg');
					// 				$drawing->setHeight(38);
					// 				$drawing->setWidth(96);
					// 				$drawing->setCoordinates('D102');
					// 				$drawing->setWorksheet($new_sheet);
					// 			}

					// 			$sheet = $spreadsheet->getSheet(0);

					// 			if($allotment_member_result[$g]["name"] != '')
		   //          			{
		   //          				if($allotment_member_result[$g]["alternate_address"] == "1")
					// 				{
					// 					$director_unit_no1 = $allotment_member_result[$g]["unit_no3"];
					// 					$director_unit_no2 = $allotment_member_result[$g]["unit_no4"];
					// 					$director_street_name = $allotment_member_result[$g]["street_name2"];
					// 					$director_building_name = $allotment_member_result[$g]["building_name2"];
					// 					$director_postal_code = $allotment_member_result[$g]["postal_code2"];
					// 				}
					// 				else
					// 				{
					// 					$director_unit_no1 = $allotment_member_result[$g]["unit_no1"];
					// 					$director_unit_no2 = $allotment_member_result[$g]["unit_no2"];
					// 					$director_street_name = $allotment_member_result[$g]["street_name1"];
					// 					$director_building_name = $allotment_member_result[$g]["building_name1"];
					// 					$director_postal_code = $allotment_member_result[$g]["postal_code1"];
					// 				}

					// 				if($allotment_member_result[$g]['officer_address_type'] == "Local")
					// 				{
					// 					if($director_unit_no1 != "" || $director_unit_no2 != "")
					// 					{
					// 						$client_unit = ' #'.$director_unit_no1 .' - '.$director_unit_no2;
					// 					}
					// 					else
					// 					{
					// 						$client_unit = "";
					// 					}

					// 					if($director_building_name != "")
					// 					{
					// 						$members_building_name_1 = $director_building_name;
					// 					}
					// 					else
					// 					{
					// 						$members_building_name_1 = '';
					// 					}

					// 					$sheet->setCellValue('C10', htmlspecialchars($director_street_name).', ');

					// 					if($client_unit != "" || $members_building_name_1 != '')
					// 					{
					// 						if($client_unit != "")
					// 						{
					// 							$building_name = $client_unit.' '.$members_building_name_1;
					// 						}
					// 						else
					// 						{
					// 							$building_name = $members_building_name_1;
					// 						}

					// 						$sheet->setCellValue('C11', htmlspecialchars($building_name).', ');
					// 						$sheet->setCellValue('C12', 'SINGAPORE '.$director_postal_code);
					// 					}
					// 					else
					// 					{
					// 						$sheet->setCellValue('C11', 'SINGAPORE '.$director_postal_code);
					// 					}
										
					// 				}
					// 				else if($allotment_member_result[$g]['officer_address_type'] == "Foreign")
					// 				{
					// 					$foreign_address1 = !empty($allotment_member_result[$g]["foreign_address1"])?$allotment_member_result[$g]["foreign_address1"]: '';
					// 					$foreign_address2 = !empty($allotment_member_result[$g]["foreign_address2"])?$allotment_member_result[$g]["foreign_address2"]: '';
					// 					$foreign_address3 = !empty($allotment_member_result[$g]["foreign_address3"])?$allotment_member_result[$g]["foreign_address3"]: '';

					// 					$sheet->setCellValue('C10', htmlspecialchars($foreign_address1));
					// 					$sheet->setCellValue('C11', htmlspecialchars($foreign_address2));
					// 					$sheet->setCellValue('C12', htmlspecialchars($foreign_address3));
					// 				}

					// 				$sheet->setCellValue('C6', htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["name"])));
					// 				$sheet->setCellValue('C8', htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["identification_no"])));
					// 				$sheet->setCellValue('C14', htmlspecialchars($allotment_member_result[$g]["officer_nationality"]));

					// 				if($allotment_member_result[$g]["mobile_no"] != null)
					// 				{
					// 					$contact_info = $this->encryption->decrypt($allotment_member_result[$g]["mobile_no"]);

					// 					if($allotment_member_result[$g]["officer_email_address"] != null)
					// 					{
					// 						$contact_info = $contact_info."; ".$this->encryption->decrypt($allotment_member_result[$g]["officer_email_address"]);
					// 					}
					// 				}
					// 				elseif($allotment_member_result[$g]["officer_email_address"] != null)
					// 				{
					// 					$contact_info = $this->encryption->decrypt($allotment_member_result[$g]["officer_email_address"]);
					// 				}
					// 				$sheet->setCellValue('C16', htmlspecialchars($contact_info));

					// 				$sheet->setCellValue('C19', htmlspecialchars($client_query[0]['company_name']));

					// 				if($client_query[0]["unit_no1"] != "" || $client_query[0]["unit_no2"] != "")
					// 				{
					// 					$client_unit_no = ' #'.$client_query[0]["unit_no1"] .' - '.$client_query[0]["unit_no2"];
					// 				}
					// 				else
					// 				{
					// 					$client_unit_no = "";
					// 				}

					// 				if($client_query[0]["building_name"] != "")
					// 				{
					// 					$client_building_name_1 = ' '.$client_query[0]["building_name"];
					// 				}
					// 				else
					// 				{
					// 					$client_building_name_1 = "";
					// 				}

					// 				$sheet->setCellValue('C23', htmlspecialchars($client_query[0]["street_name"]).', ');

					// 				if($client_unit_no != '' || $client_building_name_1 != '')
					// 				{
					// 					$sheet->setCellValue('C24', htmlspecialchars($client_unit_no).' '.htmlspecialchars($client_building_name_1).', ');
					// 					$sheet->setCellValue('C25', 'SINGAPORE '.$client_query[0]["postal_code"]);
					// 				}
					// 				else
					// 				{
					// 					$sheet->setCellValue('C24', 'SINGAPORE '.$client_query[0]["postal_code"]);
					// 				}

					// 				$sheet->setCellValue('C27', "SINGAPORE");

					// 				$sheet->setCellValue('C33', htmlspecialchars($client_query[0]['activity1']));
									
					// 				$sheet->setCellValue('A131', "Name of Client/ Agent: ".htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["name"])));
					// 				$sheet->setCellValue('A132', "NRIC/FIN/Passport no: ".htmlspecialchars($this->encryption->decrypt($allotment_member_result[$g]["identification_no"])));

					// 				$writer = new \PhpOffice\PhpSpreadsheet\Writer\Xls($spreadsheet);
					 
					// 	        	$filename = $_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/CDD Form - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($allotment_member_result[$g]["name"]))).'.xls';

					// 	        	$writer->save($filename);

					// 				$this->zip->read_file($filename);

		   //          			}
					// 		}
	    //         		}
					// }
					else if($q[0]["document_name"] == "DRIW-Appt and Resign of Director")
					{
						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1");

						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();

							//Microsoft Word
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Appt and Resign of Director.docx");
							ini_set("pcre.backtrack_limit", "-1");

							// getWordValue($transaction_master_id, $string2, $company_code, $firm_id, $id = null, $document_name = null, $value = null, $document_category_id = null)
							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_directors_info[0]["id"], $q[0]["document_name"])));

							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_directors_info[0]["id"], $q[0]["document_name"]));

							$document->setValue('Directors name - all appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all appointment", $company_code, $q[0]["firm_id"], $get_directors_info[0]["id"], $q[0]["document_name"])));

							$document->setValue('Directors name - all resign', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all resign", $company_code, $q[0]["firm_id"], $get_directors_info[0]["id"], $q[0]["document_name"])));


							$get_resign_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.appoint_resign_flag='resign'");

							if($get_resign_directors_info->num_rows())
							{
								$get_resign_directors_info = $get_resign_directors_info->result_array();
								$numof_DirectorResignForm  =  count($get_resign_directors_info);
							
								$document->cloneBlock('cloneDirectorResignForm', count($get_resign_directors_info), true, true);
								$document->cloneBlock('cloneDirectorResignSignature', count($get_resign_directors_info), true, true);

								foreach($get_resign_directors_info as $key => $officers_row)
								{
									$document->setValue('Directors name - resigning#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

									$document->setValue('Directors ID - resigning#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

									$document->setValue('Directors address - resigning#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"]));

									$document->setValue('Address - new#'.($key+1), $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $$officers_row["id"], $q[0]["document_name"]));

									if(($key+1) == $numof_DirectorResignForm)
									{
										$document->setValue('pageBreakDirector#'.($key+1), '');
									}
									else
									{
										$document->setValue('pageBreakDirector#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
									}
								}
							}

							$document->setValue('footer_firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

		            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
							//Microsoft Word End

							// $header_content = $this->get_header_template("DRIW");

							// $pattern = "/{{[^}}]*}}/";
							// $subject = $header_content;
							// preg_match_all($pattern, $subject, $header_tag_matches);

							// $header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							// $obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							// $obj_pdf->SetCreator(PDF_CREATOR);
							// $title = "Document";
							// $obj_pdf->SetTitle($title);
							// $obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
							// $obj_pdf->setPrintHeader(true);
							// $obj_pdf->setPrintFooter(true);
							// $obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
							// $obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
							// $obj_pdf->SetAutoPageBreak(TRUE, 30);
							// $obj_pdf->AddPage();
							// $obj_pdf->setListIndentWidth(4);
			
							// $new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

							// $content = $new_contents;

							// $content = $this->end_of_resol_page_break($obj_pdf, $content);

							$data['transaction_id'] = $transaction_master_id;
							$data['type'] = "trans"; 
							$data['client_id'] = $client_query[0]["id"];
							$data['firm_id'] = $q[0]["firm_id"];
							$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
							$data['triggered_by'] = 1;
							$data['document_date_checkbox'] = 1;
							$data['transaction_date'] = DATE("d/m/Y",now());
							$data['content'] = '';
	                		$data['created_by']=$this->session->userdata('user_id');

	                		$this->save_incorporate_pdf($data);
						}
					}
					else if($q[0]["document_name"] == "PDPA Form")
					{
						if($transaction_task_name == "Share Transfer")
						{
							$get_member_info = $this->transaction_model->getTransactionShareTransferRecordForCert($transaction_master_id);

							if(count($get_member_info) > 0)
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/PDPA Form.docx");
								ini_set("pcre.backtrack_limit", "-1");

								$total_num_for_valid_member = 0;

								for($t = 0 ; $t < count($get_member_info) ; $t++)
								{
									if($get_member_info[$t]["number_of_share"] > 0)
									{
										$total_num_for_valid_member = $total_num_for_valid_member + 1;
									}
								}
								$numof_PDPAForm  	=  $total_num_for_valid_member;
								$document->cloneBlock('clonePDPAFormIndividual', $total_num_for_valid_member, true, true);

								for($t = 0 ; $t < count($get_member_info) ; $t++)
								{
									if($get_member_info[$t]["number_of_share"] > 0)
									{
										// $document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));
										// $document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Directors name - resigning#'.($t+1), htmlspecialchars($get_member_info[$t]["TransfereeName"]));

										$document->setValue('Directors ID - resigning#'.($t+1), htmlspecialchars($get_member_info[$t]["TransfereeID"]));

										$document->setValue('firm_name#'.($t+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

										if(($t+1) == $numof_PDPAForm)
										{
											$document->setValue('pageBreakPDPA#'.($t+1), '');
										}
										else
										{
											$document->setValue('pageBreakPDPA#'.($t+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
										}
									}
								}

								$document->setValue('footer_firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

								$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
								//Microsoft Word End

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = '';
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
						else
						{
							$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag='appoint' AND transaction_client_officers.position = 1");

							if($get_directors_info->num_rows())
							{
								$get_directors_info = $get_directors_info->result_array();
								$numof_PDPAForm  	=  count($get_directors_info);

								//Microsoft Word
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/PDPA Form.docx");
								ini_set("pcre.backtrack_limit", "-1");

								// getWordValue($transaction_master_id, $string2, $company_code, $firm_id, $id = null, $document_name = null, $value = null, $document_category_id = null)
								
								$document->cloneBlock('clonePDPAFormIndividual', count($get_directors_info), true, true);

								foreach($get_directors_info as $key => $officers_row)
								{
									$document->setValue('Directors name - resigning#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

									$document->setValue('Directors ID - resigning#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

									$document->setValue('firm_name#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

									if(($key+1) == $numof_PDPAForm)
									{
										$document->setValue('pageBreakPDPA#'.($key+1), '');
									}
									else
									{
										$document->setValue('pageBreakPDPA#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
									}
								}
								$document->setValue('footer_firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
								//Microsoft Word End

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = '';
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "Information and verification of director")
					{
						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag='appoint' AND transaction_client_officers.position = 1");

						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();
							$numof_PDPAForm  	=  count($get_directors_info);

							//Microsoft Word
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Information and verification of director.docx");
							ini_set("pcre.backtrack_limit", "-1");

							// getWordValue($transaction_master_id, $string2, $company_code, $firm_id, $id = null, $document_name = null, $value = null, $document_category_id = null)
							
							$document->cloneBlock('cloneBlock', count($get_directors_info), true, true);

							foreach($get_directors_info as $key => $officers_row)
							{
								$document->setValue('Directors name - appointment#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

								$document->setValue('Directors ID - appointment#'.($key+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - resigning", $company_code, $q[0]["firm_id"], $officers_row["id"], $q[0]["document_name"])));

								// if(($key+1) == $numof_PDPAForm)
								// {
								// 	$document->setValue('pageBreakPDPA#'.($key+1), '');
								// }
								// else
								// {
								// 	$document->setValue('pageBreakPDPA#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
								// }

								$document->setValue('pageBreakHere#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
							}


		            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $client_query[0]["company_name"]).'.docx');
							//Microsoft Word End

							// $header_content = $this->get_header_template("DRIW");

							// $pattern = "/{{[^}}]*}}/";
							// $subject = $header_content;
							// preg_match_all($pattern, $subject, $header_tag_matches);

							// $header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							// $obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							// $obj_pdf->SetCreator(PDF_CREATOR);
							// $title = "Document";
							// $obj_pdf->SetTitle($title);
							// $obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
							// $obj_pdf->setPrintHeader(true);
							// $obj_pdf->setPrintFooter(true);
							// $obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
							// $obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
							// $obj_pdf->SetAutoPageBreak(TRUE, 30);
							// $obj_pdf->AddPage();
							// $obj_pdf->setListIndentWidth(4);
			
							// $new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

							// $content = $new_contents;

							// $content = $this->end_of_resol_page_break($obj_pdf, $content);

							$data['transaction_id'] = $transaction_master_id;
							$data['type'] = "trans"; 
							$data['client_id'] = $client_query[0]["id"];
							$data['firm_id'] = $q[0]["firm_id"];
							$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
							$data['triggered_by'] = 1;
							$data['document_date_checkbox'] = 1;
							$data['transaction_date'] = DATE("d/m/Y",now());
							$data['content'] = '';
	                		$data['created_by']=$this->session->userdata('user_id');

	                		$this->save_incorporate_pdf($data);
						}
					}
					else if($q[0]["document_name"] == "DRIW-Appt of Director")
					{
						if($transaction_task_name == "Incorporation of new company")
						{
							$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment='' AND transaction_client_officers.position = 1");
						}
						else
						{
							$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag='appoint' AND transaction_client_officers.position = 1");
						}

						// $get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment='' AND transaction_client_officers.position = 1");

						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();
							
							for($t = 0 ; $t < count($get_directors_info) ; $t++)
							{
								//Microsoft Word
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Appt of Director.docx");

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('Directors name - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('Directors ID - appointment', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - appointment", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('DISPLAY TITLE TYPE FOR BOARD OF DIRECTOR', $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));

								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									$document->cloneRow('Directors name - all', count($director_name_all));

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}
								
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.docx');
								//Microsoft Word End

								$header_content = $this->get_header_template("DRIW");

								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);

								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 30);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;

								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW - Resignation of Director" || $q[0]["document_name"] == "Ltr - Resignation of Director")
					{
						// $get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join transaction_resign_officer_reason on transaction_resign_officer_reason.transaction_client_officers_id = transaction_client_officers.id where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_resign_officer_reason.is_resign = 1");

						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name, transaction_resign_officer_reason.reason_selected from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join transaction_resign_officer_reason on transaction_resign_officer_reason.transaction_client_officers_id = transaction_client_officers.id where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.appoint_resign_flag = 'resign'");
						
						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();
							
							for($t = 0 ; $t < count($get_directors_info) ; $t++)
							{
								if($get_directors_info[$t]["reason_selected"] != NULL)
								{
									if($q[0]["document_name"] == "Ltr - Resignation of Director")
									{
										//Microsoft Word
										$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Ltr - Resignation of Director.docx");
										$document->setValue('Directors name - resigning', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - resigning", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Directors address - resigning', $this->transaction_word_model->getWordValue($transaction_master_id, "Directors address - resigning", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));
										$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"]));
										$document->setValue('Directors ID - resigning', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Directors ID - resigning", $company_code, $q[0]["firm_id"], $get_directors_info[$t]["id"], $q[0]["document_name"])));

										$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.docx');

										$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.docx');
										//End Microsoft Word

										$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
										$obj_pdf->SetCreator(PDF_CREATOR);
										$title = "Document";
										$obj_pdf->SetTitle($title);
										$obj_pdf->setPrintHeader(false);
										$obj_pdf->setPrintFooter(false);
										$obj_pdf->SetDefaultMonospacedFont('helvetica');
										$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
										$obj_pdf->SetAutoPageBreak(TRUE, 0);
										$obj_pdf->SetFont('helvetica', '', 10);
										$obj_pdf->setFontSubsetting(false);

										$obj_pdf->AddPage();
										$obj_pdf->setListIndentWidth(4);

										$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

										$content = $new_contents;
										$content = $this->end_of_resol_page_break($obj_pdf, $content);

										// $obj_pdf->writeHTML($content, true, false, false, false, '');

										// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf', 'F');

										// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf'))
						    // 			{
									 //        echo "File Doesn't Exist...";exit;
									 //    }

										// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf');

										$data['transaction_id'] = $transaction_master_id;
										$data['type'] = "trans"; 
										$data['client_id'] = $client_query[0]["id"];
										$data['firm_id'] = $q[0]["firm_id"];
										$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
										$data['triggered_by'] = 1;
										$data['document_date_checkbox'] = 1;
										$data['transaction_date'] = DATE("d/m/Y",now());
										$data['content'] = $content;
				                		$data['created_by']=$this->session->userdata('user_id');

				                		$this->save_incorporate_pdf($data);
									}
								}
							}

							if($q[0]["document_name"] == "DRIW - Resignation of Director")
							{
								$directors_name_and_ic = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name and IC", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info);
								//Microsoft Word
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Resignation of Director.docx");
								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('${_count_sing/plu s_(big_cap)}', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "count_sing/plu s", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info)));
								$document->setValue('${_count_sing/plu s_(small_cap)}', $this->transaction_word_model->getWordValue($transaction_master_id, "count_sing/plu s", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $get_directors_info));
								$document->setValue("Display title type for board of director", $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
								if(count($director_name_all) > 0)
								{
									$document->cloneRow('Directors name - all', count($director_name_all));

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}
								//End Microsoft Word

								$header_content = $this->get_header_template("DRIW");
								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);
								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);
								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+40, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 30);

								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Directors name and IC")
									{
										$new_contents_info = str_replace($replace_string, $resignation_director_name_ic_temp, $new_contents_info);

										$new_contents_info = $this->replace_verbs_plural($new_contents_info, count($get_directors_info));
									}
									
									$get_appt_director = $this->db->query("select transaction_client_officers.*, officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment='' AND transaction_client_officers.position = 1");

									if($get_appt_director->num_rows())
									{
										$get_appt_director = $get_appt_director->result_array();

										for($count = 0; $count < count($get_appt_director); $count++)
										{	
											$appt_director_name_ic = $this->encryption->decrypt($get_appt_director[$count]["name"]) . " (Identification No. " . $this->encryption->decrypt($get_appt_director[$count]["identification_no"]) . ")";

											if($count == 0)
											{
												$temp = $appt_director_name_ic;
											}
											elseif($count == count($get_appt_director) - 1)
											{
												$temp = $temp . " and " . $appt_director_name_ic;
											}
											else
											{
												$temp = $temp . ', ' . $appt_director_name_ic;
											}
										}

										if($string2 == "Appointment of Director")
										{
											$new_contents_info = str_replace('<td style="width: 100%; font-size: 10pt;" colspan="2">{{Appointment of Director}}</td>', '<td></td></tr><tr><td style="width: 5.23329%;"><span style="font-size: 10pt;">{{no}}</span></td><td style="width: 94.7667%;"><span style="font-size: 10pt;">That the appointment of ' . $temp . ' as Director of the Company be and is hereby accepted with effect from the date of her giving her consent.</span></td></tr><tr><td></td></tr>', $new_contents_info);
										}

										//Microsoft Word
										$document->setValue("APPTDIRECTOR", "");
		                 				$document->setValue("/APPTDIRECTOR", "");
		                 				$document->setValue('Appointment of director', $temp);
		                 				//End Microsoft Word
									}
									else
									{
										if($string2 == "Appointment of Director")
										{
											$new_contents_info = str_replace($replace_string, '', $new_contents_info);
										}
										//Microsoft Word
										$document->cloneBlock("APPTDIRECTOR", 0);
										//End Microsoft Word
									}
									
								}

								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, '', $q[0]["document_name"]);

								$content = $new_contents;
								$content = $this->write_list_number($content);
								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '',  $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

								//Microsoft Word
								$document->setValue("Directors name and IC", htmlspecialchars($directors_name_and_ic));

								$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
								//End Microsoft Word

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW-Appt of Auditor" || $q[0]["document_name"] == "EGM-Appt of Auditor" || $q[0]["document_name"] == "Auditor-Notice of EGM" || $q[0]["document_name"] == "Auditor-Minutes of EGM" || $q[0]["document_name"] == "DRIW - Resignation Of Auditor")
					{
						if($q[0]["document_name"] == "DRIW - Resignation Of Auditor")
						{
							$get_auditor_info = $this->db->query("select transaction_client_officers.*, officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 5 AND transaction_client_officers.appoint_resign_flag = 'resign'"); // AND transaction_client_officers.date_of_cessation !=''
						}
						else
						{
							$get_auditor_info = $this->db->query("select transaction_client_officers.*, officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_cessation='' AND transaction_client_officers.appoint_resign_flag='appoint' AND transaction_client_officers.position = 5");
						}

						if($get_auditor_info->num_rows())
						{
							$get_auditor_info = $get_auditor_info->result_array();

							//Microsoft Word
							if($q[0]["document_name"] == "EGM-Appt of Auditor")
							{
								if($q[0]["document_category_id"] == 1)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/EGM-Appt of Auditor.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/EGM-Appt of Auditor2.docx");
								}
							}
							if($q[0]["document_name"] == "DRIW-Appt of Auditor")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Appt of Auditor.docx");
							}
							if($q[0]["document_name"] == "DRIW - Resignation Of Auditor")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Resignation Of Auditor.docx");
							}
							//End Microsoft Word
							if(1 < count($get_auditor_info))
							{
								$count_get_auditor_info = count($get_auditor_info) - 1;
							}
							else
							{
								$count_get_auditor_info = count($get_auditor_info);
							}
							
							for($t = 0 ; $t < $count_get_auditor_info ; $t++)
							{
								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								$auditor_register_no = $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors ID - appointment", $company_code, $q[0]["firm_id"], $get_auditor_info[$t]["id"], $q[0]["document_name"]);

								$auditor_company_name = $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - appointment", $company_code, $q[0]["firm_id"], $get_auditor_info[$t]["id"], $q[0]["document_name"]);

								$get_resign_auditor_info = $this->db->query("select transaction_client_officers.*, officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag = 'resign' AND transaction_client_officers.position = 5");

								if($get_resign_auditor_info->num_rows())
								{
									$get_resign_auditor_info = $get_resign_auditor_info->result_array();

									$new_resign_auditor_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_resign_auditor_info[0]["id"], $q[0]["document_name"]);

									//Microsoft Word
									if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 1)
									{
										$document->setValue('Title_resignation_auditor', '<w:br/>RESIGNATION OF AUDITOR<w:br/>');
										$document->setValue('Resignation_auditor', 'RESOLVED THAT the cessation of ${Auditors name - resigning} (Registration No. ${Auditors ID - resigning}) as Auditor of the Company, to hold office until the conclusion of the next Annual General Meeting, and at a remuneration to be agreed between the Director and the Auditor be recommended for approval by shareholders. <w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p>');	
									}
									else if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 2)
									{
										$document->setValue('Title_resignation_auditor', '<w:br/>RESIGNATION OF AUDITOR<w:br/>');

										$document->setValue('Resignation_auditor', '<w:p w14:paraId="1AFF504D" w14:textId="77777777" w:rsidR="00DA5A8E" w:rsidRPr="00DE67DF" w:rsidRDefault="00DA5A8E" w:rsidP="00DA5A8E"><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/></w:rPr><w:t xml:space="preserve">THAT the resignation of </w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/></w:rPr><w:t xml:space="preserve">${Auditors name - resigning}</w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/></w:rPr><w:t xml:space="preserve"> as Auditor of the Company with immediate effect be and is hereby accepted</w:t></w:r></w:p>');

										$document->setValue('Resignation_auditor2', 'THAT the Secretary be instructed to issue notice of the meeting to all members of the Company forthwith.');
										$document->setValue('Change Of Auditor Title', "CHANGE OF AUDITORS");
										$document->setValue('Change Of Auditor', '<w:p w14:paraId="1AFF504D" w14:textId="77777777" w:rsidR="00DA5A8E" w:rsidRPr="00DE67DF" w:rsidRDefault="00DA5A8E" w:rsidP="00DA5A8E"><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">“THAT </w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:b/></w:rPr><w:t xml:space="preserve">${Auditors name - appointment}</w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">, Public Accountants and Chartered Accountants, Singapore, having consented to their appointment as auditors of the company, be and are hereby appointed as the Auditors of the company in place of Messrs</w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:b/></w:rPr><w:t xml:space="preserve"> ${Auditors name - resigning}</w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> until the conclusion of the next Annual General meeting at a fee to be agreed upon between the Directors and the Auditors.</w:t></w:r></w:p>');
									}

									if(($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 1) || $q[0]["document_name"] == "DRIW - Resignation Of Auditor")
									{
										$document->setValue('Auditors name - resigning', htmlspecialchars(trim($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"]))));
										$document->setValue('Auditors ID - resigning', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors ID - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"])));
									}

									if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 2)
									{
										$document->setValue('Auditors name - resigning', htmlspecialchars(trim($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"]))));
									}
									//End Microsoft Word
								}
								else
								{
									$new_hide_resign_auditor_contents = str_replace('<div class="resign_auditor">', '<div class="resign_auditor" style="display: none; margin-bottom: 0px;">', $new_contents_info);

									$new_resign_auditor_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_hide_resign_auditor_contents, $get_auditor[0]["id"], $q[0]["document_name"]);

									//Microsoft Word
									if($q[0]["document_name"] == "EGM-Appt of Auditor")
									{
										$document->setValue('Title_resignation_auditor', "");
										$document->setValue('Resignation_auditor', "");
										if($q[0]["document_category_id"] == 2)
										{
											$document->setValue('Resignation_auditor2', "");
										}
										$document->setValue('Change Of Auditor Title', "APPOINTMENT OF AUDITORS");
										$document->setValue('Change Of Auditor', '<w:p w14:paraId="1AFF504D" w14:textId="77777777" w:rsidR="00DA5A8E" w:rsidRPr="00DE67DF" w:rsidRDefault="00DA5A8E" w:rsidP="00DA5A8E"><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">“THAT </w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:b/></w:rPr><w:t xml:space="preserve">${Auditors name - appointment}</w:t></w:r><w:r w:rsidRPr="00DE67DF"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">, Public Accountants and Chartered Accountants of ${Auditors Company Venue}, be and are hereby appointed auditors of the Company, to hold office until the conclusion of the next general meeting at which accounts are laid before the Company at a remuneration to be fixed by the directors.”</w:t></w:r></w:p>');
									}
									//End Microsoft Word
								}

								//Microsoft Word
								if(($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 1) || $q[0]["document_name"] == "DRIW-Appt of Auditor")
								{
									$document->setValue('Auditors ID - appointment', htmlspecialchars($auditor_register_no));
								}

								if($q[0]["document_name"] == "EGM-Appt of Auditor" || $q[0]["document_name"] == "DRIW-Appt of Auditor")
								{
									$document->setValue('Auditors name - appointment', htmlspecialchars($auditor_company_name));
								}
								//End Microsoft Word
						   		for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Auditors ID - appointment")
									{
										$new_contents_info = str_replace($replace_string, $auditor_register_no, $new_contents_info);
									}
									elseif($string2 == "Auditors name - appointment")
									{
										$new_contents_info = str_replace($replace_string, $auditor_company_name, $new_contents_info);
									}
								}

								$content = $new_resign_auditor_contents;

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.pdf');

								//Microsoft Word
								if($q[0]["document_name"] == "DRIW-Appt of Auditor")
								{
									$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue("Auditors Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

									$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if(count($director_name_all) > 0)
									{
										for($g = 0; $g < 1; $g++)
					                	{
											$document->cloneRow('Directors name - all', count($director_name_all));
										}

										for($g = 0; $g < count($director_name_all); $g++)
					                	{
					                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
					                	}
									}
									else
									{
										$document->setValue('Directors name - all', '');
									}	

									$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.docx');
								}

								if($q[0]["document_name"] == "EGM-Appt of Auditor")
								{
									$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue("Auditors Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Auditors Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Chairman", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

									if($q[0]["document_category_id"] == 1)
									{
										$document->setValue("Auditors Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue("Auditors Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue("Auditors Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue("Auditors Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue("Auditors Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									}


									if($q[0]["document_category_id"] == 2)
									{
										$document->setValue("Auditors Company Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Company Venue", $company_code, $q[0]["firm_id"], $get_auditor_info[$t]["officer_id"], $q[0]["document_name"]));
									}

									$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if(count($director_name_all) > 0)
									{
										for($g = 0; $g < 1; $g++)
					                	{
											$document->cloneRow('Directors name - all', count($director_name_all));
										}

										for($g = 0; $g < count($director_name_all); $g++)
					                	{
					                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
					                	}
									}
									else
									{
										$document->setValue('Directors name - all', '');
									}	

									$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if(count($get_member_info) > 0)
									{
										$document->cloneRow('Members name - all', count($get_member_info));

										for($g = 0; $g < count($get_member_info); $g++)
					                	{
					                		if($get_member_info[$g]["name"] != null)
					                		{
					                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));

												// $one_member_name = htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"]));
					                			if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 2)
					                			{
					                				$document->setValue('Corp Rep of Name#'.($g+1), "");
					                			}
					                			else
					                			{
						                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
						                			$document->setValue('Title Identity Number#'.($g+1), "");
						                			$document->setValue('Corp Rep Name#'.($g+1), "");
						                			$document->setValue('Identity Number#'.($g+1), "");
						                		}
					                		}
					                		elseif($get_member_info[$g]["company_name"] != null)
					                		{
					                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

					                			$get_corp_rep_info = $get_corp_rep_info->result_array();

												if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 2)
					                			{
					                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
					                				$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
					                				$document->setValue('Corp Name#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
					                			}
					                			else
					                			{
					                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
						                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
						                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
						                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
						                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
						                		}
					                		}
					                		elseif($get_member_info[$g]["client_company_name"] != null)
					                		{
					                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

					                			$get_corp_rep_info = $get_corp_rep_info->result_array();

					                			if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 2)
					                			{
					                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
					                				$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])).")");
					                				$document->setValue('Corp Name#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
												}
					                			else
					                			{
						                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
						                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
						                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
						                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
						                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
						                		}
					                		}
					                	}
									}
									else
									{
										$document->setValue('Members name - all', '');
									}

									$director_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "get_director_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if($q[0]["document_name"] == "EGM-Appt of Auditor" && $q[0]["document_category_id"] == 2)
									{
										if(count($director_member_result) > 0)
										{
											$document->cloneRow('Director and Members name - all', count($director_member_result));

											for($g = 0; $g < count($director_member_result); $g++)
								            {
												if($director_member_result[$g]["name"] != '')
												{
													$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["name"])));
													$document->setValue('Corp Rep Director and members name#'.($g+1), "");
												}
												elseif($director_member_result[$g]["company_name"] != '')
					            				{
					            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($director_member_result[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($director_member_result[$g]["ms_client_company_name"]).'"');

					                				$get_corp_rep_info = $get_corp_rep_info->result_array();

													$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
													$document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
												}
					            				elseif($director_member_result[$g]["client_company_name"] != '')
					            				{
					            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($director_member_result[$g]["registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($director_member_result[$g]["ms_client_company_name"]).'"');

					                				$get_corp_rep_info = $get_corp_rep_info->result_array();

					                				$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
													$document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])).")");
												}
											}
										}
									
										$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

										if($transaction_agm_ar[0]["company_type"] == 2)
										{
											$document->cloneRow("INDIVIDUALBLOCK", 0);
					                		$document->setValue("CROPOTATEBLOCK", "");

											$cop_rep_value = $this->transaction_word_model->getWordValue($transaction_master_id, "high_share_coporate_rep", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
											$current_company_name = htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

											$document->setValue('MINUTESPOSITION', 'Corporate Representative of '.strtoupper($cop_rep_value[0]["name"]));
											$document->setValue('Corp Name', strtoupper($cop_rep_value[0]["name"]));
										}
										else if(count($get_member_info) == 1 && count($director_name_all) == 1)
										{
											$document->setValue('MINUTESPOSITION', 'Sole Member');
										}
										else
										{
											$document->cloneRow("CROPOTATEBLOCK", 0);
											$document->setValue("INDIVIDUALBLOCK", "");
											$document->setValue('MINUTESPOSITION', 'Chairman');
										}
									}

				            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.docx');
					            }

					            if($q[0]["document_name"] == "DRIW - Resignation Of Auditor")
								{
									$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue("Auditors Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

									if(count($director_name_all) > 0)
									{
										for($g = 0; $g < 1; $g++)
					                	{
											$document->cloneRow('Directors name - all', count($director_name_all));
										}

										for($g = 0; $g < count($director_name_all); $g++)
					                	{
					                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
					                	}
									}
									else
									{
										$document->setValue('Directors name - all', '');
									}

									$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_auditor_info[$t]["company_name"]))).'.docx');
								}
					            //Microsoft Word End

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_auditor_info[$t]["company_name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW - Change of Auditor")
					{
						//Microsoft Word
						if($q[0]["document_name"] == "DRIW - Change of Auditor")
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW - Change of Auditor.docx");
						}
						//End Microsoft Word

						$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
						$obj_pdf->SetCreator(PDF_CREATOR);
						$title = "Document";
						$obj_pdf->SetTitle($title);
						$obj_pdf->setPrintHeader(false);
						$obj_pdf->setPrintFooter(false);
						$obj_pdf->SetDefaultMonospacedFont('helvetica');
						$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
						$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
						$obj_pdf->SetFont('helvetica', '', 10);
						$obj_pdf->setFontSubsetting(false);
						$obj_pdf->AddPage(); 
 
						$get_appt_auditor_info = $this->db->query("select transaction_client_officers.*, officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag='appoint' AND transaction_client_officers.position = 5");

						$get_appt_auditor_info = $get_appt_auditor_info->result_array();

						$auditor_register_no = $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors ID - appointment", $company_code, $q[0]["firm_id"], $get_appt_auditor_info[0]["id"], $q[0]["document_name"]);

						$auditor_company_name = $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - appointment", $company_code, $q[0]["firm_id"], $get_appt_auditor_info[0]["id"], $q[0]["document_name"]);

						//Microsoft Word
						$document->setValue('Auditors ID - appointment', htmlspecialchars($auditor_register_no));

						$document->setValue('Auditors name - appointment', htmlspecialchars($auditor_company_name));
						//End Microsoft Word

						for($r = 0; $r < count($matches[0]); $r++)
						{
							$string1 = (str_replace('{{', '',$matches[0][$r]));
							$string2 = (str_replace('}}', '',$string1));
							
							$replace_string = $matches[0][$r];

							if($string2 == "Auditors ID - appointment")
							{
								$new_contents_info = str_replace($replace_string, $auditor_register_no, $new_contents_info);
							}
							elseif($string2 == "Auditors name - appointment")
							{
								$new_contents_info = str_replace($replace_string, $auditor_company_name, $new_contents_info);
							} 
						} 

						$get_resign_auditor_info = $this->db->query("select transaction_client_officers.*, officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag ='resign' AND transaction_client_officers.position = 5");

						if($get_resign_auditor_info->num_rows()) 
						{
							$get_resign_auditor_info = $get_resign_auditor_info->result_array();

							$new_resign_auditor_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_resign_auditor_info[0]["id"], $q[0]["document_name"]);

							$document->setValue('Auditors name - resigning', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"])));
							$document->setValue('Auditors ID - resigning', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Auditors ID - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"])));
						}

						$content = $new_resign_auditor_contents;

						// $obj_pdf->writeHTML($content, true, false, false, false, '');

						// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

						//Microsoft Word
						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue("Auditors Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

						function telegramPost($method="sendMessage",$data = array())
    {

        $bot            = "bot927742792:AAGG5Nu86zPfr_Z5Jt1DJxxW_eFDviG4ejE";
        // $bot            = "5042027616:AAG7GcqOYITZN-cunmKFb8gtFRIf0kYDfJs";
        $url            = "https://api.telegram.org/".$bot."/" . $method;
        // $fields_string  = http_build_query($data);
        try {
            $ch = curl_init();

            if ($ch === false) {
                throw new Exception('failed to initialize');
            }

            curl_setopt($ch, CURLOPT_URL, trim($url));
            curl_setopt($ch, CURLOPT_POST, count($data));
            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type:multipart/form-data']);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 0);
            curl_setopt($ch, CURLOPT_TIMEOUT, 0);
            
            $result = curl_exec($ch);
            if ($result === false) {
            }
            curl_close($ch);
            
            return $result;
        } catch (Exception $e) {
            echo trigger_error(sprintf(
                'Curl failed with error #%d: %s',
                $e->getCode(), $e->getMessage()),
                E_USER_ERROR);

        }

    }

    $datass = $this->db->query("select transaction_client_officers.*, officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.appoint_resign_flag = 'resign' AND transaction_client_officers.position = 5");

    telegramPost("sendMessage",array(
					"chat_id"=>"832739974",
					// "chat_id"=>"5333194213",
					// "chat_id"=>$chatID,
					"text"=>
					$auditor_register_no
					.' ---------' 
					.$auditor_company_name
					.' ---------'
					// .$this->transaction_word_model->getWordValue($transaction_master_id, "Auditors ID - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"])
					."select 
					transaction_client_officers.*, 
					officer_company.company_name 
					from transaction_client_officers 
					left join officer_company on 
					transaction_client_officers.officer_id = officer_company.id AND 
					transaction_client_officers.field_type = officer_company.field_type 

					where 
					transaction_client_officers.company_code='".$company_code."' AND 
					transaction_id='".$transaction_master_id."' AND 
					transaction_client_officers.date_of_cessation='' AND 
					transaction_client_officers.position = 5"
					// .$this->transaction_word_model->getWordValue($transaction_master_id, "Auditors name - resigning", $company_code, $q[0]["firm_id"], $get_resign_auditor_info[0]["id"], $q[0]["document_name"])
					.' ---------'
					.json_encode($datass->result(), JSON_PRETTY_PRINT)
					,
					"parse_mode"=>"html",
				));

						if(count($director_name_all) > 0)
						{
							for($g = 0; $g < 1; $g++)
		                	{
								$document->cloneRow('Directors name - all', count($director_name_all));
							}

							for($g = 0; $g < count($director_name_all); $g++)
		                	{
		                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
		                	}
						}
						else
						{
							$document->setValue('Directors name - all', '');
						}

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
		            	//Microsoft Word End

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "Notice of Incorporation")
					{
						//Microsoft Word
						if($q[0]["document_category_id"] == 2)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Notice of Incorporation.docx");
						}

						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('transaction_company_type', $this->transaction_word_model->getWordValue($transaction_master_id, "Transaction Company type", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('underline_effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "underline_effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
		            	//Microsoft Word End

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$get_transaction_change_fye_info[$t]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = "";
                		$data['created_by']=$this->session->userdata('user_id');

                		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "Online Filing to ACRA")
					{
						//Microsoft Word
						if($q[0]["document_category_id"] == 2)
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Online Filing to ACRA.docx");
						}

						$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						$document->setValue('firm_name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
						//echo json_encode($director_name_all);
						if(count($director_name_all) > 0)
						{
							for($g = 0; $g < 1; $g++)
		                	{
								$document->cloneRow('Directors name - all', count($director_name_all));
							}

							for($g = 0; $g < count($director_name_all); $g++)
		                	{
		                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
		                	}
						}
						else
						{
							$document->setValue('Directors name - all', '');
						}

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
		            	//Microsoft Word End

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$get_transaction_change_fye_info[$t]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = "";
                		$data['created_by']=$this->session->userdata('user_id');

                		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "DRIW-Change of FYE")
					{
						$get_transaction_change_fye_info = $this->db->query("SELECT * FROM transaction_change_fye WHERE transaction_id=". $transaction_master_id);

						if($get_transaction_change_fye_info->num_rows())
						{
							$get_transaction_change_fye_info = $get_transaction_change_fye_info->result_array();
							
							for($t = 0 ; $t < count($get_transaction_change_fye_info) ; $t++)
							{
								//Microsoft Word
								if($q[0]["document_category_id"] == 1)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Change of FYE.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Change of financial year.docx");
								}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"])));
								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									for($g = 0; $g < 1; $g++)
				                	{
										$document->cloneRow('Directors name - all', count($director_name_all));
									}

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}
				            	//Microsoft Word End

								$header_content = $this->get_header_template("DRIW");

								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);

								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 30);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								$old_year_end_content = "______________";

								if(!empty($get_transaction_change_fye_info[0]["old_year_end"]))
								{
									$old_year_end_content = $get_transaction_change_fye_info[0]["old_year_end"];
								}

								for($r = 0; $r < count($matches[0]); $r++)
								{
									
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Year end old")
									{
										$new_contents_info = str_replace($replace_string, $old_year_end_content, $new_contents_info);
									}
								}
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;

								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_change_fye_info[$t]["company_name"]).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_change_fye_info[$t]["company_name"]).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_change_fye_info[$t]["company_name"]).'.pdf');

								//Microsoft Word
								$document->setValue('Year end old', $old_year_end_content);

								$document->setValue('Year end new', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"]));

								$document->setValue('Year end new (No Year)', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new (No Year)", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"]));

								$document->setValue('Next Year end', $this->transaction_word_model->getWordValue($transaction_master_id, "Next Year end", $company_code, $q[0]["firm_id"], $get_transaction_change_fye_info[$t]["id"], $q[0]["document_name"]));

								$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
								//Microsoft Word End

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$get_transaction_change_fye_info[$t]["company_name"];
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW-Change Biz Activity")
					{
						$get_transaction_change_biz_activity_info = $this->db->query("SELECT * FROM transaction_change_biz_activity WHERE transaction_id=". $transaction_master_id);

						if($get_transaction_change_biz_activity_info->num_rows())
						{
							$get_transaction_change_biz_activity_info = $get_transaction_change_biz_activity_info->result_array();
							
							for($t = 0 ; $t < count($get_transaction_change_biz_activity_info) ; $t++)
							{
								//Microsoft Word
								if($q[0]["document_category_id"] == 1)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Change Biz Activity.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Change Business activity.docx");
								}
								
								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_transaction_change_biz_activity_info[$t]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_transaction_change_biz_activity_info[$t]["id"], $q[0]["document_name"]));
								$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], $get_transaction_change_biz_activity_info[$t]["id"], $q[0]["document_name"])));
								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $get_transaction_change_biz_activity_info[$t]["id"], $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									for($g = 0; $g < 1; $g++)
				                	{
										$document->cloneRow('Directors name - all', count($director_name_all));
									}

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}
				            	//Microsoft Word End

								$header_content = $this->get_header_template("DRIW");

								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);

								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 30);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								//Change in principal activities
								$change_in_principal_activities = '';
								$word_change_in_principal_activities = '';
								// if activity 1 is changed
								if(!empty($get_transaction_change_biz_activity_info[0]["activity1"]) && !($get_transaction_change_biz_activity_info[0]["activity1"] == $get_transaction_change_biz_activity_info[0]["old_activity1"])){
									$change_in_principal_activities .= "Primary Activity (1): " . $get_transaction_change_biz_activity_info[0]["old_activity1"];
									$word_change_in_principal_activities .= "Primary Activity (1): " . $get_transaction_change_biz_activity_info[0]["old_activity1"];

									$change_in_principal_activities.= ' to "' . $get_transaction_change_biz_activity_info[0]["activity1"] . '" <br>';
									$word_change_in_principal_activities.= ' to "' . $get_transaction_change_biz_activity_info[0]["activity1"] . '"';
								}

								// if activity 2 is removed 
								if($get_transaction_change_biz_activity_info[0]["remove_activity_2"]){
									if(!empty($get_transaction_change_biz_activity_info[0]["old_activity2"])){
										$change_in_principal_activities.= "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["old_activity2"] . " is removed.";
										$word_change_in_principal_activities.= "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["old_activity2"] . " is removed.";
									}
								}
								elseif(!empty($get_transaction_change_biz_activity_info[0]["activity2"])){
									if(!empty($get_transaction_change_biz_activity_info[0]["old_activity2"]) && !($get_transaction_change_biz_activity_info[0]["old_activity2"] == $get_transaction_change_biz_activity_info[0]["activity2"])){
										$change_in_principal_activities.= "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["old_activity2"] . ' to "' . $get_transaction_change_biz_activity_info[0]["activity2"] . '"';
										$word_change_in_principal_activities.= "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["old_activity2"] . ' to "' . $get_transaction_change_biz_activity_info[0]["activity2"] . '"';
									}
									else if(!($get_transaction_change_biz_activity_info[0]["old_activity2"] == $get_transaction_change_biz_activity_info[0]["activity2"])){
										$change_in_principal_activities.= "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["activity2"] . " is added.";
										$word_change_in_principal_activities.= "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["activity2"] . " is added.";
									}
								}
								//Change in principal activities end

								//Principal Activity 1 - new
								$principal_activity_one_new = '';

								if(!empty($get_transaction_change_biz_activity_info[0]["activity1"])){
									$principal_activity_one_new = 'Primary Activity (1): ' . $get_transaction_change_biz_activity_info[0]["activity1"];
								}
								elseif(!empty($get_transaction_change_biz_activity_info[0]["old_activity1"])){
									$principal_activity_one_new = 'Primary Activity (1): ' . $get_transaction_change_biz_activity_info[0]["old_activity1"];
								}else
								{	
									$principal_activity_one_new = '';
								}
								//Principal Activity 1 - new end

								//Principal Activity 2 - new
								$principal_activity_two_new = '';

								if(!empty($get_transaction_change_biz_activity_info[0]["activity2"])){
									$principal_activity_two_new = "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["activity2"];
									$document->setValue('HidePrincipalAct2', "");
									$document->setValue('/HidePrincipalAct2', "");
								}
								elseif(!$get_transaction_change_biz_activity_info[0]["remove_activity_2"] && !empty($get_transaction_change_biz_activity_info[0]["old_activity2"])){
									$principal_activity_two_new = "Secondary Activity (2): " . $get_transaction_change_biz_activity_info[0]["old_activity2"];
									$document->setValue('HidePrincipalAct2', "");
									$document->setValue('/HidePrincipalAct2', "");
								}else
								{	
									$principal_activity_two_new = '';
									$document->cloneBlock('HidePrincipalAct2', 0, true, true);
								}
								//Principal Activity 2 - new end

								//Microsoft Word
								$document->setValue('Change in principal activities', htmlspecialchars($word_change_in_principal_activities));
								$document->setValue('Principal Activity 1 - new', htmlspecialchars($principal_activity_one_new));
								$document->setValue('Principal Activity 2 - new', htmlspecialchars($principal_activity_two_new));
								//Microsoft Word End

								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Changes in principal activities")
									{
										$new_contents_info = str_replace($replace_string, $change_in_principal_activities, $new_contents_info);
									}
									elseif($string2 == "Principal activity 1 - new")
									{
										$new_contents_info = str_replace($replace_string, $principal_activity_one_new, $new_contents_info);
									}
									elseif($string2 == "Principal activity 2 - new")
									{
										$new_contents_info = str_replace($replace_string, $principal_activity_two_new, $new_contents_info);
									}
									
								}
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_transaction_change_biz_activity_info[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;

								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_change_biz_activity_info[$t]["company_name"]).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_change_biz_activity_info[$t]["company_name"]).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_change_biz_activity_info[$t]["company_name"]).'.pdf');

								//Microsoft Word
								$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
								//Microsoft Word End

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$get_transaction_change_biz_activity_info[$t]["company_name"];
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW-Issue Director Fee & EGM" || $q[0]["document_name"] == "Director Fee-Notice of EGM" || $q[0]["document_name"] == "Director Fee-Minutes of EGM" || $q[0]["document_name"] == "Director Fee-Attendance List")
					{
						//Microsoft Word
						if($q[0]["document_name"] == "DRIW-Issue Director Fee & EGM")
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Issue Director Fee & EGM.docx");
						}
						//Microsoft Word End

						$transaction_issue_director_fee = $this->db->query("SELECT transaction_issue_director_fee.*, client.company_name FROM transaction_issue_director_fee JOIN transaction_master ON transaction_master.id = ". $transaction_master_id ." JOIN client ON client.company_code = transaction_master.company_code WHERE transaction_issue_director_fee.transaction_id = ". $transaction_master_id ." AND client.deleted != 1");

						if($transaction_issue_director_fee->num_rows())
						{
							$transaction_issue_director_fee = $transaction_issue_director_fee->result_array();

							for($t = 0 ; $t < count($transaction_issue_director_fee) ; $t++)
							{	
								if(strpos($q[0]["document_name"], "DRIW") !== false)
								{
									$header_content = $this->get_header_template("DRIW");
								}
								elseif(strpos($q[0]["document_name"], "Attendance") !== false)
								{
									$header_content = $this->get_header_template("Attendance");
								}
								else
								{
									$header_content = $this->get_header_template("headerOnly");
								}

								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);

								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);

								if(strpos($q[0]["document_name"], "DRIW") !== false)
								{
									$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
									$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+40, PDF_MARGIN_RIGHT+3);
									$obj_pdf->SetAutoPageBreak(TRUE, 30);
								}
								elseif(strpos($q[0]["document_name"], "Minutes") !== false || $q[0]["document_name"] == "Director Fee-Notice of EGM")
								{	
									$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+22);
									$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP + 32, PDF_MARGIN_RIGHT);
									$obj_pdf->SetAutoPageBreak(TRUE, 20);
								}
								else
								{
									$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+22);
									$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP+40, PDF_MARGIN_RIGHT+3);
									$obj_pdf->SetAutoPageBreak(TRUE, 30);
								}

								$obj_pdf->setListIndentWidth(4);
								$obj_pdf->AddPage();

								$director_fee_list = $this->db->query("SELECT * FROM transaction_director_fee_list WHERE transaction_issue_director_fee_id=". $transaction_issue_director_fee[0]["id"] ." AND director_fee!=". 0.00);
								$director_fee_list_result = $director_fee_list->result_array();
								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Director Fee - table of director and fee")
									{	
										if($director_fee_list->num_rows())
										{
											$content = '<table style="width: 100%; border-collapse: collapse; font-size: 10pt;" border="0"><tbody><tr style="height: 17px;"><td style="width: 70%; height: 17px;"><span style="text-decoration: underline;"><strong>Director</strong></span></td><td style="width: 30%; height: 17px;"><span style="text-decoration: underline;"><strong>Amounts</strong></span></td></tr>';

											foreach($director_fee_list->result_array() as $row){
												// print_r(json_encode($row["director_fee"]));
												$currency_name = $this->db->query("SELECT currency FROM currency WHERE id='". $row["currency"] ."'");
												$currency_name = $currency_name->result_array()[0]["currency"];

												if(number_format($row["director_fee"],2) != 0.00)
												{
													$content .= '<tr style="height: 17px;">
																<td style="width: 70%;">'. $row["director_name"] .'</td>
																<td style="width: 30%;">'. $currency_name . ' ' . number_format($row["director_fee"],2) .'/-</td>
																</tr>';
												}
											}

											$content .= '</tr></tbody></table>';

										}

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Director Fee - declare of financial year end")
									{
										$content = !empty($transaction_issue_director_fee[0]["declare_of_fye"])?date('d F Y', strtotime(str_replace('/', '-', $transaction_issue_director_fee[0]["declare_of_fye"]))): '';

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Director Fee - resolution date")
									{
										$content = !empty($transaction_issue_director_fee[0]["resolution_date"])?date('d F Y', strtotime(str_replace('/', '-', $transaction_issue_director_fee[0]["resolution_date"]))): '';

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Director Fee - notice date")
									{
										$content = !empty($transaction_issue_director_fee[0]["notice_date"])?date('d F Y', strtotime(str_replace('/', '-', $transaction_issue_director_fee[0]["notice_date"]))): '';

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Director Fee - meeting date")
									{
										$content = !empty($transaction_issue_director_fee[0]["meeting_date"])?date('d F Y', strtotime(str_replace('/', '-', $transaction_issue_director_fee[0]["meeting_date"]))): '';

										if($content == '' && ($q[0]["document_name"] == "Director Fee-Notice of EGM" || $q[0]["document_name"] == "DRIW-Issue Director Fee & EGM"))
										{
											$content = '______________';
										}

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									
								}
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;
								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								// $obj_pdf->writeHTML($content, true, false, false, false, '');

								// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($this->encryption->decrypt($transaction_issue_director_fee[$t]["company_name"])).'.pdf', 'F');

								// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($this->encryption->decrypt($transaction_issue_director_fee[$t]["company_name"])).'.pdf'))
				    // 			{
							 //        echo "File Doesn't Exist...";exit;
							 //    }

								// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($this->encryption->decrypt($transaction_issue_director_fee[$t]["company_name"])).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($transaction_issue_director_fee[$t]["company_name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);

		                		//Microsoft Word
								if($q[0]["document_name"] == "DRIW-Issue Director Fee & EGM")
								{
									$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"])));
									$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));
									$document->setValue('Director Fee - declare of financial year end', !empty($transaction_issue_director_fee[0]["declare_of_fye"])?date('d F Y', strtotime(str_replace('/', '-', $transaction_issue_director_fee[0]["declare_of_fye"]))): '<w:t xml:space="preserve">                    </w:t>');
									$document->setValue('DISPLAY BOARD OF DIRECTOR - CONTENT', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display board of director - content", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"])));
									$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));
									$document->setValue("Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Time", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));
									$document->setValue("Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Meeting's Venue", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));
									$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));
									$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));
									$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));

									if($this->transaction_word_model->getWordValue($transaction_master_id, "Directors' Meeting Date", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]) != null)
									{
										$str_director_meeting_date = date('d F Y', strtotime(str_replace('/', '-', $this->transaction_word_model->getWordValue($transaction_master_id, "Directors' Meeting Date", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]))));
									}
									else
									{
										$str_director_meeting_date = '';
									}
									$document->setValue("Directors' Meeting Date", $str_director_meeting_date);
									$document->setValue("Chairman", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"])));
									$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"])));
									$document->setValue("Address - new", $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]));

									for($g = 0; $g < 4; $g++)
					                {
										$document->cloneRow('Director for Director Fee', count($director_fee_list_result));
									}

									if(count($director_fee_list_result) > 0)
									{
										for($g = 0; $g < count($director_fee_list_result); $g++)
					                	{
					                		$currency_name = $this->db->query("SELECT currency FROM currency WHERE id='". $director_fee_list_result[$g]["currency"] ."'");
											$currency_name = $currency_name->result_array()[0]["currency"];

											if(number_format($director_fee_list_result[$g]["director_fee"],2) != 0.00)
											{
					                			$document->setValue('Director for Director Fee#'.($g+1), htmlspecialchars($director_fee_list_result[$g]["director_name"]));
					                			$document->setValue('Currency for Director Fee#'.($g+1), $currency_name);
					                			$document->setValue('Director Fee#'.($g+1), number_format($director_fee_list_result[$g]["director_fee"],2));
					                		}
					                	}
									}
									else
									{
										$document->setValue('Director for Director Fee', '');
										$document->setValue('Currency for Director Fee', '');
										$document->setValue('Director Fee', '');
									}

									$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]);

									if(count($director_name_all) > 0)
									{
										for($g = 0; $g < 1; $g++)
					                	{
									 		$document->cloneRow('Directors name - all', count($director_name_all));
										}

										for($g = 0; $g < count($director_name_all); $g++)
					                	{
					                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
					                	}
									}
									else
									{
										$document->setValue('Directors name - all', '');
									}	

									$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], $transaction_issue_director_fee[$t]["id"], $q[0]["document_name"]);

									if(count($get_member_info) > 0)
									{
										$document->cloneRow('Members name - all', count($get_member_info));

										for($g = 0; $g < count($get_member_info); $g++)
					                	{
					                		if($get_member_info[$g]["name"] != null)
					                		{
					                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
					                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
					                			$document->setValue('Title Identity Number#'.($g+1), "");
					                			$document->setValue('Corp Rep Name#'.($g+1), "");
					                			$document->setValue('Identity Number#'.($g+1), "");
					                		}
					                		elseif($get_member_info[$g]["company_name"] != null)
					                		{
					                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

					                			$get_corp_rep_info = $get_corp_rep_info->result_array();

					                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
					                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
					                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
					                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
					                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
					                		}
					                		elseif($get_member_info[$g]["client_company_name"] != null)
					                		{
					                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

					                			$get_corp_rep_info = $get_corp_rep_info->result_array();

					                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
					                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
					                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
					                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
					                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
					                		}
					                	}
									}
									else
									{
										$document->setValue('Members name - all', '');
									}
									
				            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
								}
								//Microsoft Word End
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW-Incorp of subsidiary" || $q[0]["document_name"] == "Subsidiary-Cert of Appt Company Representative")
					{
						$get_transaction_incorp_subsidiary = $this->db->query("SELECT * FROM transaction_corporate_representative WHERE transaction_id=". $transaction_master_id);

						if($get_transaction_incorp_subsidiary->num_rows())
						{
							$get_transaction_incorp_subsidiary = $get_transaction_incorp_subsidiary->result_array();

							$currency_name = $this->db->query("SELECT currency FROM currency WHERE id='". $get_transaction_incorp_subsidiary[0]["currency"] ."'");
							$currency_name = $currency_name->result_array()[0]["currency"];
							
							for($t = 0 ; $t < count($get_transaction_incorp_subsidiary) ; $t++)
							{
								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Subsidiary - company name")
									{
										$content = $get_transaction_incorp_subsidiary[0]["subsidiary_name"];

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Subsidiary - company country")
									{
										$content = $get_transaction_incorp_subsidiary[0]["country_of_incorporation"];

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Subsidiary - currency of investment")
									{
										$content = $currency_name;

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Subsidiary - total investment capital")
									{
										$content = number_format($get_transaction_incorp_subsidiary[0]["total_investment_amount"], 2);

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Subsidiary - name of corporate representative")
									{
										$content = $get_transaction_incorp_subsidiary[0]["name_of_corp_rep"];

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Subsidiary - identification no. of corporate representative")
									{
										$content = $get_transaction_incorp_subsidiary[0]["identity_number"];

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Subsidiary - propose effective date")
									{
										$content = date('d F Y', strtotime($get_transaction_incorp_subsidiary[0]["propose_effective_date"]));

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
								}
				
								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_transaction_incorp_subsidiary[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;

								$obj_pdf->writeHTML($content, true, false, false, false, '');

								$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_incorp_subsidiary[$t]["subsidiary_name"]).'.pdf', 'F');

								if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_incorp_subsidiary[$t]["subsidiary_name"]).'.pdf'))
				    			{
							        echo "File Doesn't Exist...";exit;
							    }

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($get_transaction_incorp_subsidiary[$t]["subsidiary_name"]).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$get_transaction_incorp_subsidiary[$t]["subsidiary_name"];
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					elseif($q[0]["document_name"] == "DRIW - Appt of Co Sec" || $q[0]["document_name"] == "DRIW-Appt of Co Sec (Take Over)")
					{
						$get_directors_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment='' AND transaction_client_officers.position = 4");

						if($get_directors_info->num_rows())
						{
							$get_directors_info = $get_directors_info->result_array();
							
							for($t = 0 ; $t < count($get_directors_info) ; $t++)
							{
								$header_content = $this->get_header_template("DRIW");

								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);

								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 30);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);
								
								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Subsidiary - company name")
									{
										$content = $get_transaction_incorp_subsidiary[0]["subsidiary_name"];

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
								}

								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_directors_info[$t]["id"], $q[0]["document_name"]);

								$content = $new_contents;

								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								$obj_pdf->writeHTML($content, true, false, false, false, '');

								$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf', 'F');

								if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf'))
				    			{
							        echo "File Doesn't Exist...";exit;
							    }

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($this->encryption->decrypt($get_directors_info[$t]["name"]))).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$this->encryption->decrypt($get_directors_info[$t]["name"]);
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW-Dividends" || $q[0]["document_name"] == "Dividends-Notice Of EGM" || $q[0]["document_name"] == "Dividends-Minutes Of EGM" || $q[0]["document_name"] == "Dividends-Attendance List" || $q[0]["document_name"] == "Dividend voucher")
					{
						//Microsoft Word
						if($q[0]["document_name"] == "DRIW-Dividends")
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Dividends.docx");
						}
						//Microsoft Word End

						if($q[0]["document_name"] == "DRIW-Dividends")
						{
							$header_content = $this->get_header_template("DRIW");

							$pattern = "/{{[^}}]*}}/";
							$subject = $header_content;
							preg_match_all($pattern, $subject, $header_tag_matches);

							$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
							$obj_pdf->setPrintHeader(true);
							$obj_pdf->setPrintFooter(true);
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
							$obj_pdf->SetAutoPageBreak(TRUE, 30);
							// $obj_pdf->AddPage();
							$obj_pdf->setListIndentWidth(4);
						}else{
							$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setPrintHeader(false);
							$obj_pdf->setPrintFooter(false);
							$obj_pdf->SetDefaultMonospacedFont('helvetica');
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
							$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
							$obj_pdf->SetFont('helvetica', '', 10);
							$obj_pdf->setFontSubsetting(false);
						}

						$get_dividends_info = $this->db->query("SELECT * FROM transaction_issue_dividend WHERE transaction_id=". $transaction_master_id);
						$get_dividends_info = $get_dividends_info->result_array();

						$currency_name = $this->db->query("SELECT currency FROM currency WHERE id='". $get_dividends_info[0]["currency"] ."'");
						$currency_name = $currency_name->result_array()[0]["currency"];

						$nature_name = $this->db->query("SELECT nature_name FROM nature where id=". $get_dividends_info[0]["nature"]);
						$nature_name = $nature_name->result_array()[0]["nature_name"];

						if($q[0]["document_name"] == "Dividend voucher")
						{
							$get_dividend_info_individuals = $this->db->query("SELECT * FROM transaction_dividend_list WHERE transaction_issue_dividend_id=". $get_dividends_info[0]["id"]);
							$get_dividend_info_individuals = $get_dividend_info_individuals->result_array();

							//Microsoft Word
							$templateProcessor = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Dividend voucher.docx");

							$templateProcessor->cloneBlock('CLONEBLOCK', count($get_dividend_info_individuals));
							
							//End Microsoft Word

							foreach($get_dividend_info_individuals as $individual)
							{
								$template_content = $new_contents_info;
								
								$obj_pdf->AddPage();

								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Dividend - Nature (UPPERCASE)")
									{
										$content = strtoupper($nature_name);

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Nature (Lowercase)")
									{
										$content = $nature_name;

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Currency")
									{
										$content = $currency_name;

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Total dividend amount")
									{
										$content = number_format($get_dividends_info[0]["total_dividend_amount"], 2);

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Declare of financial year end")
									{
										$content = date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["declare_of_fye"])));

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Cut off date")
									{
										$content = date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["devidend_of_cut_off_date"])));

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Payment date")
									{
										$content = date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["devidend_payment_date"])));

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Amount of value per share"){
										$content = $get_dividends_info[0]["devidend_per_share"];

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Shareholder name"){
										$content = $individual["shareholder_name"];

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Shareholder address")
									{
										$individual_address = '';

										// get individual address
										if ($individual["field_type"] == "individual")
										{
											$individual_unit = '';
											$individual_building_name_1 = '';

											$individual_info = $this->db->query("SELECT * FROM officer WHERE id ='". $individual["officer_id"] . "'");
											$individual_info = $individual_info->result_array()[0];

											if($individual_info['address_type'] == "Local")
											{
												if($individual_info["unit_no1"] != "" || $individual_info["unit_no2"] != "")
												{
													$individual_unit = ' #'.$individual_info["unit_no1"] .' - '.$individual_info["unit_no2"];
												}
												else
												{
													$individual_unit = "";
												}

												if($individual_info["building_name1"] != "")
												{
													$individual_building_name_1 = $individual_info["building_name1"];
												}

												$individual_address = $individual_info["street_name1"].', <br/>'.$individual_unit.' '.$individual_building_name_1.', <br/> SINGAPORE '.$individual_info["postal_code1"];
											}
											else if($individual_info['address_type'] == "Foreign")
											{
												$individual_address = $individual_info["foreign_address1"].'<br/>'.$individual_info["foreign_address2"].'<br/>'.$individual_info["foreign_address3"];
											}
										}
										elseif($individual["field_type"] == "client")
										{
											$client_unit = '';
											$client_building_name_1 = '';

											$individual_info = $this->db->query("SELECT * FROM client WHERE id ='". $individual["officer_id"] . "' AND client.deleted != 1");
											$individual_info = $individual_info->result_array()[0];

											if($individual_info["unit_no1"] != "" || $individual_info["unit_no2"] != "")
											{
												$client_unit = ' #'.$individual_info["unit_no1"] .' - '.$individual_info["unit_no2"];
											}
											else
											{
												$client_unit = "";
											}

											if($individual_info["building_name"] != "")
											{
												$client_building_name_1 = $individual_info["building_name"];
											}

											$individual_address = $individual_info["street_name"].', <br/>'.$client_unit.' '.$client_building_name_1.', <br/> SINGAPORE '.$individual_info["postal_code"];
										}
										elseif($individual["field_type"] == "company")
										{
											$company_unit = '';
											$company_building_name_1 = '';

											$individual_info = $this->db->query("SELECT * FROM officer_company WHERE id ='". $individual["officer_id"] . "'");
											$individual_info = $individual_info->result_array()[0];

											if($individual_info['address_type'] == "Local")
											{
												if($individual_info["company_unit_no1"] != "" || $individual_info["company_unit_no2"] != "")
												{
													$company_unit = ' #'.$individual_info["company_unit_no1"] .' - '.$individual_info["company_unit_no2"];
												}
												else
												{
													$company_unit = "";
												}

												if($individual_info["company_building_name"] != "")
												{
													$company_building_name_1 = $individual_info["company_building_name"];
												}

												$individual_address = $individual_info["company_street_name"].', <br/>'.$company_unit.' '.$company_building_name_1.', <br/> SINGAPORE '.$individual_info["company_postal_code"];
											}
											else if($individual_info['address_type'] == "Foreign")
											{
												$individual_address = $individual_info["company_foreign_address1"].'<br/>'.$individual_info["company_foreign_address2"].'<br/>'.$individual_info["company_foreign_address3"];
											}
										}

										$content = $individual_address;

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Dividend no. (voucher)"){
										$content = $individual["payment_voucher_no"];

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Total of share (individual)"){
										$content = number_format($individual["number_of_share"], 2);

										$template_content = str_replace($replace_string, $content, $template_content);
									}
									elseif($string2 == "Dividend - Dividend paid (individual)"){
										$content = number_format($individual["devidend_paid"], 2);

										$template_content = str_replace($replace_string, $content, $template_content);
									}
								}

								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $template_content, $get_dividends_info[0]["id"], $q[0]["document_name"]);

								$obj_pdf->writeHTML($new_contents, true, false, false, false, '');

								$templateProcessor->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"])), 1);
								$templateProcessor->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]), 1);
								$templateProcessor->setValue('Dividend - Currency', $currency_name, 3);

								$templateProcessor->setValue('Dividend - Declare of financial year end', date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["declare_of_fye"]))), 1);
								$templateProcessor->setValue('Dividend - Cut off date', date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["devidend_of_cut_off_date"]))), 1);
								$templateProcessor->setValue('Dividend - Payment date', date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["devidend_payment_date"]))), 1);
								$templateProcessor->setValue('Dividend - Amount of value per share', $get_dividends_info[0]["devidend_per_share"], 1);
								$templateProcessor->setValue('Dividend - Shareholder name', htmlspecialchars($individual["shareholder_name"]), 1);
								$templateProcessor->setValue('Dividend - Shareholder address', $this->transaction_word_model->getShareholderAddress($transaction_master_id, "Dividend - Shareholder address", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"], $individual["field_type"], $individual["officer_id"]), 1);
								$templateProcessor->setValue('Dividend - Dividend no. (voucher)', htmlspecialchars($individual["payment_voucher_no"]), 1);
								$templateProcessor->setValue('Dividend - Total of share (individual)', number_format($individual["number_of_share"], 2), 1);
								$templateProcessor->setValue('Dividend - Dividend paid (individual)', number_format($individual["devidend_paid"], 2), 2);
								$templateProcessor->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"])));
							}

							$templateProcessor->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						}
						else
						{
							$obj_pdf->AddPage();

							for($r = 0; $r < count($matches[0]); $r++)
							{
								$string1 = (str_replace('{{', '',$matches[0][$r]));
								$string2 = (str_replace('}}', '',$string1));
								
								$replace_string = $matches[0][$r];

								if($string2 == "Dividend - Nature (UPPERCASE)")
								{
									$content = strtoupper($nature_name);

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Nature (UPPERCASE)", $content);
								}
								elseif($string2 == "Dividend - Nature (Lowercase)")
								{
									$content = $nature_name;

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Nature (Lowercase)", $content);
								}
								elseif($string2 == "Dividend - Currency")
								{
									$content = $currency_name;

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Currency", $content);
								}
								elseif($string2 == "Dividend - Total dividend amount")
								{
									$content = number_format($get_dividends_info[0]["total_dividend_amount"], 2);

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Total dividend amount", $content);
								}
								elseif($string2 == "Dividend - Declare of financial year end")
								{
									$content = date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["declare_of_fye"])));

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Declare of financial year end", $content);
								}
								elseif($string2 == "Dividend - Cut off date")
								{
									$content = date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["devidend_of_cut_off_date"])));

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Cut off date", $content);
								}
								elseif($string2 == "Dividend - Payment date")
								{
									$content = date('d F Y', strtotime(str_replace('/', '-', $get_dividends_info[0]["devidend_payment_date"])));

									$new_contents_info = str_replace($replace_string, $content, $new_contents_info);

									$document->setValue("Dividend - Payment date", $content);
								}
							}

							$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_dividends_info[0]["id"], $q[0]["document_name"]);

							$content = $new_contents;

							$content = $this->end_of_resol_page_break($obj_pdf, $content);

							$obj_pdf->writeHTML($content, true, false, false, false, '');

							//Microsoft Word
							if($q[0]["document_name"] == "DRIW-Dividends")
							{
								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue('DISPLAY BOARD OF DIRECTOR - CONTENT', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display board of director - content", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"])));
								$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Time", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Meeting's Venue", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Directors' Meeting Date", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));
								$document->setValue("Chairman", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"])));
								$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"])));
								$document->setValue("Address - new", $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]));

								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									for($g = 0; $g < 1; $g++)
				                	{
								 		$document->cloneRow('Directors name - all', count($director_name_all));
									}

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), $this->encryption->decrypt($director_name_all[$g]["name"]));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}	

								$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], $get_dividends_info[0]["id"], $q[0]["document_name"]);

								if(count($get_member_info) > 0)
								{
									$document->cloneRow('Members name - all', count($get_member_info));

									for($g = 0; $g < count($get_member_info); $g++)
				                	{
				                		if($get_member_info[$g]["name"] != null)
				                		{
				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
				                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
				                			$document->setValue('Title Identity Number#'.($g+1), "");
				                			$document->setValue('Corp Rep Name#'.($g+1), "");
				                			$document->setValue('Identity Number#'.($g+1), "");
				                		}
				                		elseif($get_member_info[$g]["company_name"] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
				                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
				                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
				                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
				                		}
				                		elseif($get_member_info[$g]["client_company_name"] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
				                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
				                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
				                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
				                		}
				                	}
								}
								else
								{
									$document->setValue('Members name - all', '');
								}
								
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
					        }
							//Microsoft Word End
	            		}

	     //        		$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
					}
					else if($q[0]["document_name"] == "03 Declaration" || $q[0]["document_name"] == "03 Declaration (Letter)")
					{
						$get_transaction_strike_off = $this->db->query("SELECT * FROM transaction_strike_off WHERE transaction_id=". $transaction_master_id);

						if($get_transaction_strike_off->num_rows())
						{
							$get_transaction_strike_off = $get_transaction_strike_off->result_array();

							for($t = 0 ; $t < count($get_transaction_strike_off) ; $t++)
							{
								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Strike Off";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);

								$get_directors = $this->db->query("select officer.* from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");
								$get_directors = $get_directors->result_array();

								foreach($get_directors as $director)
								{
									$obj_pdf->AddPage();
									$temp_template = $new_contents_info;

									for($r = 0; $r < count($matches[0]); $r++)
									{
										$string1 = (str_replace('{{', '',$matches[0][$r]));
										$string2 = (str_replace('}}', '',$string1));
										
										$replace_string = $matches[0][$r];

										if($string2 == "Strike off - Directors information")
										{	
											$content = '';
											$director_address = '';

											if($director['address_type'] == "Local")
											{
												if($director["unit_no1"] != "" || $director["unit_no2"] != "")
												{
													$client_unit = ' #'.$director["unit_no1"] .' - '.$director["unit_no2"];
												}
												else
												{
													$client_unit = "";
												}

												if($director["building_name1"] != "")
												{
													$members_building_name_1 = $director["building_name1"];
												}

												$director_address = $director["street_name1"].', '.$client_unit.' '.$members_building_name_1.', SINGAPORE '.$director["postal_code1"];
											}
											else if($director['address_type'] == "Foreign")
											{
												$director_address = $director["foreign_address1"].'<br/>'.$director["foreign_address2"].'<br/>'.$director["foreign_address3"];
											}

											$content .= $this->encryption->decrypt($director["name"]) . " (Identification No.: " . $this->encryption->decrypt($director["identification_no"]) . ") of " . $director_address;

											$temp_template = str_replace($replace_string, $content, $temp_template);
										}
										elseif($string2 == "Strike off - Reason for application")
										{
											$get_client_incorporation_date = $this->db->query("select incorporation_date from client where company_code='".$company_code."' AND client.deleted != 1");

											$get_client_incorporation_date = $get_client_incorporation_date->result_array();

											if($get_transaction_strike_off[0]["reason_for_application_id"] == 1){
												$content = 'The Company has not commenced business since <span class="myclass mceNonEditable">'. date('d F Y', strtotime(str_replace('/', '-', $get_client_incorporation_date[0]["incorporation_date"]))) .'</span> (date of incorporation).';
											}else{
												$content = "The Company has ceased business since ______________ and does not intend to do any business in the future.";
											}

											$temp_template = str_replace($replace_string, $content, $temp_template);
										}
										elseif($string2 == "Strike off - Director's name"){
											$content = $this->encryption->decrypt($director["name"]);

											$temp_template = str_replace($replace_string, $content, $temp_template);
										}
										elseif($string2 == "Strike off - Director's address"){
											$content = '';
											$director_address = '';

											if($director['address_type'] == "Local")
											{
												if($director["unit_no1"] != "" || $director["unit_no2"] != "")
												{
													$client_unit = ' #'.$director["unit_no1"] .' - '.$director["unit_no2"];
												}
												else
												{
													$client_unit = "";
												}

												if($director["building_name1"] != "")
												{
													$members_building_name_1 = $director["building_name1"];
												}

												$director_address = $director["street_name1"].',<br/>'.$client_unit.' '.$members_building_name_1.', <br/>SINGAPORE '.$director["postal_code1"];
											}
											else if($director['address_type'] == "Foreign")
											{
												$director_address = $director["foreign_address1"].'<br/>'.$director["foreign_address2"].'<br/>'.$director["foreign_address3"];
											}

											$content = $director_address;

											$temp_template = str_replace($replace_string, $content, $temp_template);
										}
									}

									$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $temp_template, $get_transaction_strike_off[$t]["id"], $q[0]["document_name"]);
									$content = $new_contents;
									$obj_pdf->writeHTML($content, true, false, false, false, '');
								}

								$company_name = $this->db->query("SELECT company_name FROM `client` WHERE company_code = '". $company_code ."' AND client.deleted != 1");
								$company_name = $company_name->result_array()[0]["company_name"];

								$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf', 'F');

								if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf'))
				    			{
							        echo "File Doesn't Exist...";exit;
							    }

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$company_name;
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "01 Letter of Authorisation" || $q[0]["document_name"] == "02 Letter to IRAS for Striking Off" || $q[0]["document_name"] == "02 DRIW-Strike Off" || $q[0]["document_name"] == "04 Strike-Off-Notice Of EGM" || $q[0]["document_name"] == "04 Strike-Off-Minutes Of EGM" || $q[0]["document_name"] == "04 Strike-Off-Attendance List")
					{
						if($q[0]["document_name"] == "01 Letter of Authorisation")
						{
							//Microsoft Word
							$PHPWord = new \PhpOffice\PhpWord\PhpWord();

							$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Letter of Authorisation (Strike Off).docx");

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

							$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

							$document->setValue('Firm Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

							$document->setValue('Firm UEN', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

							$document->setValue('Firm Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

							$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

							$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($director_name_all) > 0)
							{
								$document->cloneRow('Directors name - all', count($director_name_all));

								for($g = 0; $g < count($director_name_all); $g++)
			                	{
			                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
			                	}
							}
							else
							{
								$document->setValue('Directors name - all', '');
							}

							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Letter of Authorisation - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Letter of Authorisation - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							//Microsoft Word End
						}
						else
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Strike Off.docx");

							$get_transaction_strike_off = $this->db->query("SELECT * FROM transaction_strike_off WHERE transaction_id = ". $transaction_master_id);
							$get_transaction_strike_off = $get_transaction_strike_off->result_array();

							$director_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "get_director_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($director_member_result) > 0)
							{
								
								ini_set("pcre.backtrack_limit", "-1");
								$document->cloneBlock('cloneBlock', count($director_member_result), true, true);

								for($g = 0; $g < count($director_member_result); $g++)
					            {
					            	$document->setValue('Company current name#'.($g+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
					            	$document->setValue('UEN#'.($g+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
					            	if($get_transaction_strike_off[0]["reason_for_application_id"] == 1)
					            	{
					            		$document->setValue('ceased_date#'.($g+1), "date of incorporation");
					            	}
					            	else
					            	{
					            		$document->setValue('ceased_date#'.($g+1), $get_transaction_strike_off[0]["ceased_date"]);
					            	}

					            	if($director_member_result[$g]["name"] != '')
			            			{
			            				$document_person_name = $director_member_result[$g]["name"];
						            	$document->setValue('Name#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["name"])));
						            	$document->setValue('IdentificationNo#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["identification_no"])));
						            	$document->setValue('checkDirectorOrMember#'.($g+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "check_member_or_director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $this->encryption->decrypt($director_member_result[$g]["identification_no"]))));

						            	if($director_member_result[$g]["alternate_address"] == "1")
										{
											$director_unit_no1 = $director_member_result[$g]["unit_no3"];
											$director_unit_no2 = $director_member_result[$g]["unit_no4"];
											$director_street_name = $director_member_result[$g]["street_name2"];
											$director_building_name = $director_member_result[$g]["building_name2"];
											$director_postal_code = $director_member_result[$g]["postal_code2"];
										}
										else
										{
											$director_unit_no1 = $director_member_result[$g]["unit_no1"];
											$director_unit_no2 = $director_member_result[$g]["unit_no2"];
											$director_street_name = $director_member_result[$g]["street_name1"];
											$director_building_name = $director_member_result[$g]["building_name1"];
											$director_postal_code = $director_member_result[$g]["postal_code1"];
										}

										if($director_member_result[$g]['officer_address_type'] == "Local")
										{
											$company_address = array(
												'type' 			=> 'Local',
												'street_name1' 	=> $director_street_name,
												'unit_no1'		=> $director_unit_no1,
												'unit_no2'		=> $director_unit_no2,
												'building_name1'=> $director_building_name,
												'postal_code1'	=> $director_postal_code
											);

											$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
											$document->setValue('Address#'.($g+1), $address);
										}
										else if($director_member_result[$g]['officer_address_type'] == "Foreign")
										{
											$foreign_address1 = !empty($director_member_result[$g]["foreign_address1"])?$director_member_result[$g]["foreign_address1"]: '';
											$foreign_address2 = !empty($director_member_result[$g]["foreign_address2"])?$director_member_result[$g]["foreign_address2"]: '';
											$foreign_address3 = !empty($director_member_result[$g]["foreign_address3"])?$director_member_result[$g]["foreign_address3"]: '';

											$company_address = array(
												'type' 			=> "Foreign",
												'foreign_address1' => $foreign_address1,
												'foreign_address2' => $foreign_address2,
												'foreign_address3' => $foreign_address3
											);

											$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
											$document->setValue('Address#'.($g+1), $address);
										}
									}
									elseif($director_member_result[$g]["company_name"] != '')
		            				{
		            					$document_person_name = $director_member_result[$g]["company_name"];
		            					$document->setValue('Name#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["company_name"])));
		            					$document->setValue('IdentificationNo#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["register_no"])));
		            					$document->setValue('checkDirectorOrMember#'.($g+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "check_member_or_director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $this->encryption->decrypt($director_member_result[$g]["register_no"]))));

		            					if($director_member_result[$g]['officer_company_address_type'] == "Local")
										{
											$company_address = array(
												'type' 			=> 'Local',
												'street_name1' 	=> $director_member_result[$g]["company_street_name"],
												'unit_no1'		=> $director_member_result[$g]["company_unit_no1"],
												'unit_no2'		=> $director_member_result[$g]["company_unit_no2"],
												'building_name1'=> $director_member_result[$g]["company_building_name"],
												'postal_code1'	=> $director_member_result[$g]["company_postal_code"]
											);

											$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
											$document->setValue('Address#'.($g+1), $address);
										}
		            					else if($director_member_result[$g]['officer_company_address_type'] == "Foreign")
										{
											$foreign_address1 = !empty($director_member_result[$g]["company_foreign_address1"])?$director_member_result[$g]["company_foreign_address1"]: '';
											$foreign_address2 = !empty($director_member_result[$g]["company_foreign_address2"])?$director_member_result[$g]["company_foreign_address2"]: '';
											$foreign_address3 = !empty($director_member_result[$g]["company_foreign_address3"])?$director_member_result[$g]["company_foreign_address3"]: '';

											$company_address = array(
												'type' 			=> "Foreign",
												'foreign_address1' => $foreign_address1,
												'foreign_address2' => $foreign_address2,
												'foreign_address3' => $foreign_address3
											);

											$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
											$document->setValue('Address#'.($g+1), $address);
										}
		            				}
		            				elseif($director_member_result[$g]["client_company_name"] != '')
		            				{
		            					$document_person_name = $director_member_result[$g]["client_company_name"];
		            					$document->setValue('Name#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["client_company_name"])));
		            					$document->setValue('IdentificationNo#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["registration_no"])));
		            					$document->setValue('checkDirectorOrMember#'.($g+1), htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "check_member_or_director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"], $this->encryption->decrypt($director_member_result[$g]["registration_no"]))));

		            					$company_address = array(
											'type' 			=> 'Local',
											'street_name1' 	=> $director_member_result[$g]["client_street_name"],
											'unit_no1'		=> $director_member_result[$g]["client_unit_no1"],
											'unit_no2'		=> $director_member_result[$g]["client_unit_no2"],
											'building_name1'=> $director_member_result[$g]["client_building_name"],
											'postal_code1'	=> $director_member_result[$g]["client_postal_code"]
										);

										$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "big_cap");
										$document->setValue('Address#'.($g+1), $address);
		            				}
								}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
	            				$document->setValue('UEN', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
	            				if($get_transaction_strike_off[0]["agm_date"] == "")
	            				{
	            					$strike_off_agm_date = '&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;';
	            				}
	            				else
	            				{
	            					$strike_off_agm_date = $get_transaction_strike_off[0]["agm_date"];
	            				}
				            	$document->setValue("AGM date", $strike_off_agm_date);
				            	$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
				            	if($get_transaction_strike_off[0]["agm_time"] == "")
	            				{
	            					$strike_off_agm_time = '&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;';
	            				}
	            				else
	            				{
	            					$strike_off_agm_time = $get_transaction_strike_off[0]["agm_time"];
	            				}
				            	$document->setValue("AGM time", $strike_off_agm_time);
				            	$document->setValue("Strike Off AGM Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Strike Off AGM Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
				            	$document->setValue("Chairman", $this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

				            	$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
								if(count($director_name_all) > 0)
								{
									$document->cloneRow('Directors name - all', count($director_name_all));

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$one_director_name = htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"]));
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}

								$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
								if(count($get_member_info) > 0)
								{
									$document->cloneRow('Members name - all', count($get_member_info));

									for($g = 0; $g < count($get_member_info); $g++)
				                	{
				                		if($get_member_info[$g]["name"] != null)
				                		{
				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
				                			$one_member_name = htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"]));
				                			$document->setValue('Corp Rep of Name#'.($g+1), "");
				                		}
				                		elseif($get_member_info[$g]["company_name"] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
				                		}
				                		elseif($get_member_info[$g]["client_company_name"] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])).")");
											
				                		}
				                	}
								}
								else
								{
									$document->setValue('Members name - all', '');
									$document->setValue('Corp Rep of Name', "");
								}

								if(count($director_member_result) > 0)
								{
									$document->cloneRow('Director and Members name - all', count($director_member_result));

									for($g = 0; $g < count($director_member_result); $g++)
						            {
										if($director_member_result[$g]["name"] != '')
										{
											$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["name"])));
											$document->setValue('Corp Rep Director and members name#'.($g+1), "");
										}
										elseif($director_member_result[$g]["company_name"] != '')
			            				{
			            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($director_member_result[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($director_member_result[$g]["ms_client_company_name"]).'"');

			                				$get_corp_rep_info = $get_corp_rep_info->result_array();

											$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
											$document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
										}
			            				elseif($director_member_result[$g]["client_company_name"] != '')
			            				{
			            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($director_member_result[$g]["registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($director_member_result[$g]["ms_client_company_name"]).'"');

			                				$get_corp_rep_info = $get_corp_rep_info->result_array();

			                				$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
											$document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])).")");
										}
									}
								}
								else
								{
									$document->setValue('Director and Members name - all', "");
									$document->setValue('Corp Rep Director and members name', "");
								}
							}
							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/DRIW-Strike Off - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/DRIW-Strike Off - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');




							// $get_transaction_strike_off = $this->db->query("SELECT * FROM transaction_strike_off WHERE transaction_id=". $transaction_master_id);

							// if($get_transaction_strike_off->num_rows())
							// {
							// 	$get_transaction_strike_off = $get_transaction_strike_off->result_array();

							// 	for($t = 0 ; $t < count($get_transaction_strike_off) ; $t++)
							// 	{
							// 		$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							// 		$obj_pdf->SetCreator(PDF_CREATOR);
							// 		$title = "Strike Off";
							// 		$obj_pdf->SetTitle($title);
							// 		$obj_pdf->setPrintHeader(false);
							// 		$obj_pdf->setPrintFooter(false);
							// 		$obj_pdf->SetDefaultMonospacedFont('helvetica');
							// 		$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
							// 		$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
							// 		$obj_pdf->SetFont('helvetica', '', 10);
							// 		$obj_pdf->setFontSubsetting(false);

							// 		$get_directors = $this->db->query("select officer.* from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");
							// 		$get_directors = $get_directors->result_array();

							// 		foreach($get_directors as $director)
							// 		{
							// 			$obj_pdf->AddPage();
							// 			$temp_template = $new_contents_info;

							// 			for($r = 0; $r < count($matches[0]); $r++)
							// 			{
							// 				$string1 = (str_replace('{{', '',$matches[0][$r]));
							// 				$string2 = (str_replace('}}', '',$string1));
											
							// 				$replace_string = $matches[0][$r];

							// 				if($string2 == "Strike off - Directors information")
							// 				{	
							// 					$content = '';
							// 					$director_address = '';

							// 					if($director['address_type'] == "Local")
							// 					{
							// 						if($director["unit_no1"] != "" || $director["unit_no2"] != "")
							// 						{
							// 							$client_unit = ' #'.$director["unit_no1"] .' - '.$director["unit_no2"];
							// 						}
							// 						else
							// 						{
							// 							$client_unit = "";
							// 						}

							// 						if($director["building_name1"] != "")
							// 						{
							// 							$members_building_name_1 = $director["building_name1"];
							// 						}

							// 						$director_address = $director["street_name1"].', '.$client_unit.' '.$members_building_name_1.', SINGAPORE '.$director["postal_code1"];
							// 					}
							// 					else if($director['address_type'] == "Foreign")
							// 					{
							// 						$director_address = $director["foreign_address1"].'<br/>'.$director["foreign_address2"].'<br/>'.$director["foreign_address3"];
							// 					}

							// 					$content .= $this->encryption->decrypt($director["name"]) . " (Identification No.: " . $this->encryption->decrypt($director["identification_no"]) . ") of " . $director_address;

							// 					$temp_template = str_replace($replace_string, $content, $temp_template);
							// 				}
							// 				elseif($string2 == "Strike off - Reason for application")
							// 				{
							// 					$get_client_incorporation_date = $this->db->query("select incorporation_date from client where company_code='".$company_code."' AND client.deleted != 1");

							// 					$get_client_incorporation_date = $get_client_incorporation_date->result_array();

							// 					if($get_transaction_strike_off[0]["reason_for_application_id"] == 1){
							// 						$content = 'The Company has not commenced business since <span class="myclass mceNonEditable">'. date('d F Y', strtotime(str_replace('/', '-', $get_client_incorporation_date[0]["incorporation_date"]))) .'</span> (date of incorporation).';
							// 					}else{
							// 						$content = "The Company has ceased business since ______________ and does not intend to do any business in the future.";
							// 					}

							// 					$temp_template = str_replace($replace_string, $content, $temp_template);
							// 				}
							// 				elseif($string2 == "Strike off - Director's name"){
							// 					$content = $this->encryption->decrypt($director["name"]);

							// 					$temp_template = str_replace($replace_string, $content, $temp_template);
							// 				}
							// 				elseif($string2 == "Strike off - Director's address"){
							// 					$content = '';
							// 					$director_address = '';

							// 					if($director['address_type'] == "Local")
							// 					{
							// 						if($director["unit_no1"] != "" || $director["unit_no2"] != "")
							// 						{
							// 							$client_unit = ' #'.$director["unit_no1"] .' - '.$director["unit_no2"];
							// 						}
							// 						else
							// 						{
							// 							$client_unit = "";
							// 						}

							// 						if($director["building_name1"] != "")
							// 						{
							// 							$members_building_name_1 = $director["building_name1"];
							// 						}

							// 						$director_address = $director["street_name1"].',<br/>'.$client_unit.' '.$members_building_name_1.', <br/>SINGAPORE '.$director["postal_code1"];
							// 					}
							// 					else if($director['address_type'] == "Foreign")
							// 					{
							// 						$director_address = $director["foreign_address1"].'<br/>'.$director["foreign_address2"].'<br/>'.$director["foreign_address3"];
							// 					}

							// 					$content = $director_address;

							// 					$temp_template = str_replace($replace_string, $content, $temp_template);
							// 				}
							// 			}

							// 			$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $temp_template, $get_transaction_strike_off[$t]["id"], $q[0]["document_name"]);
							// 			$content = $new_contents;
							// 			$obj_pdf->writeHTML($content, true, false, false, false, '');
							// 		}

									// $company_name = $this->db->query("SELECT company_name FROM `client` WHERE company_code = '". $company_code ."' AND client.deleted != 1");
									// $company_name = $company_name->result_array()[0]["company_name"];

									// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf', 'F');

									// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf'))
					    // 			{
								 //        echo "File Doesn't Exist...";exit;
								 //    }

									// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf');
							// 	}
							// }
						}

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$company_name;
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = ""; //$content;
                		$data['created_by']=$this->session->userdata('user_id');

                		$this->save_incorporate_pdf($data);
					}
					elseif($q[0]["document_name"] == "Letter taking over of Secretarial Services")
					{
						$get_transaction_previous_secretarial = $this->db->query("SELECT * FROM transaction_previous_secretarial WHERE transaction_id=". $transaction_master_id);

						if($get_transaction_previous_secretarial->num_rows())
						{
							$get_transaction_previous_secretarial = $get_transaction_previous_secretarial->result_array();

							for($t = 0 ; $t < count($get_transaction_previous_secretarial) ; $t++)
							{
								$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Strike Off";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setPrintHeader(false);
								$obj_pdf->setPrintFooter(false);
								$obj_pdf->SetDefaultMonospacedFont('helvetica');
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
								$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
								$obj_pdf->SetFont('helvetica', '', 10);
								$obj_pdf->setFontSubsetting(false);
								$obj_pdf->AddPage();

								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Company Previous Name")
									{	
										$content = $get_transaction_previous_secretarial[0]["company_name"];

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Company Previous Address")
									{
										if($get_transaction_previous_secretarial[0]["unit_no1"] != "" || $get_transaction_previous_secretarial[0]["unit_no2"] != "")
										{
											$client_unit = ' #'.$get_transaction_previous_secretarial[0]["unit_no1"] .' - '.$get_transaction_previous_secretarial[0]["unit_no2"];
										}
										else
										{
											$client_unit = "";
										}

										if($get_transaction_previous_secretarial[0]["building_name"] != "")
										{
											$members_building_name_1 = $get_transaction_previous_secretarial[0]["building_name"];
										}

										$director_address = $get_transaction_previous_secretarial[0]["street_name"].',<br/>'.$client_unit.' '.$members_building_name_1.', <br/>SINGAPORE '.$get_transaction_previous_secretarial[0]["postal_code"];

										$new_contents_info = str_replace($replace_string, $director_address, $new_contents_info);
									}
								}

								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_transaction_previous_secretarial[0][$t]["id"], $q[0]["document_name"]);
								$content = $new_contents;

								$company_name = $this->db->query("select company_name from transaction_client where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");
								$company_name = $company_name->result_array()[0]["company_name"];

								$obj_pdf->writeHTML($content, true, false, false, false, '');

								$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf', 'F');

								if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf'))
				    			{
							        echo "File Doesn't Exist...";exit;
							    }

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$company_name;
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "DRIW - Resignation of Co Sec- Co (Take Over)")
					{
						$get_secretary_info = $this->db->query("select transaction_client_officers.*, officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 4");

						if($get_secretary_info->num_rows())
						{
							$get_secretary_info = $get_secretary_info->result_array();

							for($t = 0 ; $t < count($get_secretary_info) ; $t++)
							{
								$header_content = $this->get_header_template("DRIW");

								$pattern = "/{{[^}}]*}}/";
								$subject = $header_content;
								preg_match_all($pattern, $subject, $header_tag_matches);

								$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 30);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								for($r = 0; $r < count($matches[0]); $r++)
								{
									$string1 = (str_replace('{{', '',$matches[0][$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $matches[0][$r];

									if($string2 == "Secretarys name - resigning")
									{	
										$content = $this->encryption->decrypt($get_secretary_info[0]["name"]);

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
									elseif($string2 == "Company Previous Name")
									{
										$content = '________________________________';

										$get_transaction_previous_secretarial = $this->db->query("SELECT * FROM transaction_previous_secretarial WHERE transaction_id=". $transaction_master_id);

										if($get_transaction_previous_secretarial->num_rows())
										{
											$get_transaction_previous_secretarial = $get_transaction_previous_secretarial->result_array();

											$content = $get_transaction_previous_secretarial[0]["company_name"];
										}

										$new_contents_info = str_replace($replace_string, $content, $new_contents_info);
									}
								}

								$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, $get_secretary_info[0][$t]["id"], $q[0]["document_name"]);
								$content = $new_contents;

								$content = $this->end_of_resol_page_break($obj_pdf, $content);

								$company_name = $this->db->query("select company_name from transaction_client where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");
								$company_name = $company_name->result_array()[0]["company_name"];

								$obj_pdf->writeHTML($content, true, false, false, false, '');

								$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf', 'F');

								if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf'))
				    			{
							        echo "File Doesn't Exist...";exit;
							    }

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($company_name).'.pdf');

								$data['transaction_id'] = $transaction_master_id;
								$data['type'] = "trans"; 
								$data['client_id'] = $client_query[0]["id"];
								$data['firm_id'] = $q[0]["firm_id"];
								$data['document_name'] = $q[0]["document_name"].' - '.$company_name;
								$data['triggered_by'] = 1;
								$data['document_date_checkbox'] = 1;
								$data['transaction_date'] = DATE("d/m/Y",now());
								$data['content'] = $content;
		                		$data['created_by']=$this->session->userdata('user_id');

		                		$this->save_incorporate_pdf($data);
							}
						}
					}
					else if($q[0]["document_name"] == "Quotation for OMP grant application")
					{
						$query = $this->db->query("select firm.*, firm_email.email, firm_telephone.telephone, firm_fax.fax from firm 
										JOIN firm_email ON firm_email.firm_id = firm.id AND firm_email.primary_email = 1 
										JOIN firm_telephone ON firm_telephone.firm_id = firm.id AND firm_telephone.primary_telephone = 1 
										JOIN firm_fax ON firm_fax.firm_id = firm.id AND firm_fax.primary_fax = 1
										where firm.id = '".$this->session->userdata("firm_id")."'");

						$query = $query->result_array();

						$omp_grant_info = $this->db->query("SELECT transaction_master.*, transaction_omp_grant_info.*, transaction_omp_grant_info.created_at as transaction_omp_grant_info_created_at FROM `transaction_master` 
																LEFT JOIN transaction_omp_grant_info ON transaction_omp_grant_info.transaction_id = transaction_master.id 
																WHERE transaction_master.id =" . $transaction_master_id);

						$omp_grant_info = $omp_grant_info->result_array();

						$omp_grant_info[0]['client_name'] = $this->encryption->decrypt($omp_grant_info[0]['client_name']);

						//Microsoft Word
						$PHPWord = new \PhpOffice\PhpWord\PhpWord();

						$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Quotation for OMP grant application.docx");

						$document->setImageValue('CompanyLogo', "uploads/logo/". $query[0]["file_name"] ."");
						$document->setValue('firm_name', htmlspecialchars($query[0]["name"]));
						$document->setValue('UEN', $query[0]["registration_no"]);

						$firm_address = array(
							'type' 			=> 'Local',
							'street_name1' 	=> strtoupper($query[0]["street_name"]),
							'unit_no1'		=> $query[0]["unit_no1"],
							'unit_no2'		=> $query[0]["unit_no2"],
							'building_name1'=> strtoupper($query[0]["building_name"]),
							'postal_code1'	=> $query[0]["postal_code"]
						);

						$address1 = $this->transaction_word_model->write_address_local_foreign($firm_address, "comma", "big_cap");
						
						$document->setValue('firm_address', $address1);
						$document->setValue('firm_telephone', htmlspecialchars($query[0]["telephone"]));
						$document->setValue('firm_fax', htmlspecialchars($query[0]["fax"]));

						$document->setValue('date_of_quotation', $omp_grant_info[0]['date_of_quotation']);
						$document->setValue('attention_name', $omp_grant_info[0]['attention_name']);
						$document->setValue('attention_title', $omp_grant_info[0]['attention_title']);
						$document->setValue('company_name', $omp_grant_info[0]['client_name']);

						$company_address_arr = array(
							'type' 			=> 'Local',
							'street_name1' 	=> $omp_grant_info[0]["street_name"],
							'unit_no1'		=> $omp_grant_info[0]["unit_no1"],
							'unit_no2'		=> $omp_grant_info[0]["unit_no2"],
							'building_name1'=> $omp_grant_info[0]["building_name"],
							'postal_code1'	=> $omp_grant_info[0]["postal_code"]
						);

						$company_address = $this->transaction_word_model->write_omp_grant_company_address_local_foreign($company_address_arr, "letter", "big_cap");
						$document->setValue('company_address', $company_address);
						$document->setValue('grant_date', $omp_grant_info[0]['grant_date']);
						$document->setValue('quotation_ref', $omp_grant_info[0]['quotation_ref']);
						$document->setValue('cash_deposit_upfront', number_format($omp_grant_info[0]['cash_deposit'],2));
						$document->setValue('success_fees', $omp_grant_info[0]['success_fees']);

						$document->setValue('less_cash_deposit', number_format($omp_grant_info[0]['less_the_cash_deposit'],2));

						$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($omp_grant_info[0]['client_name'])).'.docx');

						$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($omp_grant_info[0]['client_name'])).'.docx');
						//End Microsoft Word

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$company_name;
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = "";
                		$data['created_by']=$this->session->userdata('user_id');

                		$this->save_incorporate_pdf($data);
					}
					elseif($q[0]["document_name"] == "Proposal")
					{
						$servicing_firm_arr = $this->db->query("SELECT DISTINCT transaction_service_proposal_service_info.servicing_firm FROM transaction_service_proposal_service_info 
							WHERE transaction_service_proposal_service_info.transaction_id =" . $transaction_master_id ." ORDER BY sequence");

						$servicing_firm_arr = $servicing_firm_arr->result_array();

						$client_proposal_info = $this->db->query("SELECT transaction_master.*, transaction_service_proposal_info.*, transaction_service_proposal_info.created_at as transaction_service_proposal_info_created_at, transaction_client_contact_info.name AS `contact_person` FROM `transaction_master` 
																LEFT JOIN transaction_service_proposal_info ON transaction_service_proposal_info.transaction_id = transaction_master.id 
																LEFT JOIN transaction_client_contact_info ON transaction_client_contact_info.transaction_id = transaction_master.id
																WHERE transaction_master.id =" . $transaction_master_id);

						$client_proposal_info = $client_proposal_info->result_array();

						$client_proposal_info[0]['client_name'] = $this->encryption->decrypt($client_proposal_info[0]['client_name']);
						$proposal_date = date('Y-m-d', strtotime($client_proposal_info[0]["proposal_date"]));

						for($sf = 0; $sf < count($servicing_firm_arr); $sf++)
						{
							if($servicing_firm_arr[$sf]["servicing_firm"] == 0)
							{
								$header_firm_id = $q[0]["firm_id"];
							}
							else
							{
								$header_firm_id = $servicing_firm_arr[$sf]["servicing_firm"];
							}

							$check_gst_status_query = $this->db->query("SELECT gst_firm.*, firm.jurisdiction_id, firm.gst_checkbox FROM gst_firm LEFT JOIN firm ON firm.id = gst_firm.firm_id WHERE gst_firm.register_date <= '". $proposal_date."' AND (gst_firm.deregister_date >= '". $proposal_date."' OR gst_firm.deregister_date IS NULL) AND gst_firm.firm_id = '".$header_firm_id."'");
							
							if($check_gst_status_query->num_rows() > 0)
							{
								$check_gst_status_array = $check_gst_status_query->result_array();
								$select_gst_rate = ", gst_category_info.rate";
								$left_join_gst = "LEFT JOIN our_service_gst ON our_service_gst.our_service_info_id = transaction_service_proposal_service_info.our_service_id and our_service_gst.jurisdiction_id = '".$check_gst_status_array[0]["jurisdiction_id"]."'
									LEFT JOIN gst_category_info ON gst_category_info.deleted = 0 AND gst_category_info.id = our_service_gst.category_id AND gst_category_info.start_date <= CURRENT_DATE() AND (gst_category_info.end_date >= CURRENT_DATE() OR gst_category_info.end_date IS NULL)";
								$got_gst = true;
							}
							else
							{
								$select_gst_rate = "";
								$left_join_gst = "";
								$got_gst = false;
							}

							$service_engage_info = $this->db->query("SELECT transaction_service_proposal_service_info.*, unit_pricing.unit_pricing_name, our_service_info.service_name, currency.currency".$select_gst_rate." FROM transaction_service_proposal_service_info
																	LEFT JOIN unit_pricing ON transaction_service_proposal_service_info.unit_pricing = unit_pricing.id
																	LEFT JOIN our_service_info ON our_service_info.id = transaction_service_proposal_service_info.our_service_id
																	LEFT JOIN currency ON currency.id = transaction_service_proposal_service_info.currency_id
																	".$left_join_gst." WHERE transaction_service_proposal_service_info.transaction_id =" . $transaction_master_id ." AND transaction_service_proposal_service_info.servicing_firm = ".$servicing_firm_arr[$sf]["servicing_firm"]."
																	ORDER BY sequence"); //, our_service_info.service_proposal_description

							$sub_service_engage_info = $this->db->query("SELECT transaction_service_proposal_sub_service_info.*, unit_pricing.unit_pricing_name, currency.currency".$select_gst_rate." FROM transaction_service_proposal_sub_service_info
																	LEFT JOIN unit_pricing ON transaction_service_proposal_sub_service_info.sub_unit_pricing = unit_pricing.id
																	LEFT JOIN currency ON currency.id = transaction_service_proposal_sub_service_info.sub_currency_id
																	LEFT JOIN transaction_service_proposal_service_info ON transaction_service_proposal_service_info.id = transaction_service_proposal_sub_service_info.service_info_id
																	".$left_join_gst."
																	WHERE transaction_service_proposal_sub_service_info.transaction_id =" . $transaction_master_id);

							if($service_engage_info->num_rows())
							{
								$service_engage_info_arr = $service_engage_info->result_array();
								$sub_service_engage_info = $sub_service_engage_info->result_array();

								$firm_info = $this->db->query("SELECT * FROM firm WHERE id = ".$header_firm_id);

								$firm_info = $firm_info->result_array();

								if($firm_info[0]['branch_name'] != null)
								{
									$service_firm_name = $firm_info[0]['name'].' ('.$firm_info[0]['branch_name'].')';
								}
								else
								{
									$service_firm_name = $firm_info[0]['name'];
								}

								if($printed_letterhead != "true")
								{
									$header_content = $this->get_header_template("Company Info Header", $header_firm_id, $got_gst);

									$pattern = "/{{[^}}]*}}/";
									$subject = $header_content;
									preg_match_all($pattern, $subject, $header_tag_matches);

									$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $header_firm_id, $header_content, null, $q[0]["document_name"]);
								}
								else
								{
									$header_content = "";
								}

								$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								$obj_pdf->SetCreator(PDF_CREATOR);
								$title = "Document";
								$obj_pdf->SetTitle($title);
								$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
								$obj_pdf->setPrintHeader(true);
								$obj_pdf->setPrintFooter(true);
								$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER + 10);
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+10, PDF_MARGIN_TOP + 15, PDF_MARGIN_RIGHT+3);
								$obj_pdf->SetAutoPageBreak(TRUE, 28);
								$obj_pdf->AddPage();
								$obj_pdf->setListIndentWidth(4);

								$document_content = $matches[0];
								$redeclare_contents_info = $new_contents_info;

								for($r = 0; $r < count($document_content); $r++)
								{
									$string1 = (str_replace('{{', '',$document_content[$r]));
									$string2 = (str_replace('}}', '',$string1));
									
									$replace_string = $document_content[$r];
									$temp_content = '';

									if($string2 == "proposal date")
									{
										$temp_content = $client_proposal_info[0]['proposal_date'];

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "client company name")
									{
										$temp_content = $client_proposal_info[0]['client_name'];

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "client address")
									{
										if($client_proposal_info[0]['street_name'] != "" && $client_proposal_info[0]['postal_code'] != "")
										{
											$address = array(
												'type' 			=> "Local",
												'street_name1' 	=> strtoupper($client_proposal_info[0]['street_name']),
												'unit_no1'		=> strtoupper($client_proposal_info[0]['unit_no1']),
												'unit_no2'		=> strtoupper($client_proposal_info[0]['unit_no2']),
												'building_name1'=> strtoupper($client_proposal_info[0]['building_name']),
												'postal_code1'	=> $client_proposal_info[0]['postal_code']
											);
											$temp_content = $this->write_address_local_foreign($address, "letter", "big_cap");
										}
										else
										{
											$temp_content = "";
										}

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Director Name")
									{
										if($client_proposal_info[0]['client_type_id'] == 1)	// Existing Client
										{
											$temp_content = "";
										}
										else
										{
											$temp_content = "";
										}

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Scope of Engagement and details")
									{
										if($service_engage_info->num_rows())
										{	
											for($se_count = 0; $se_count < count($service_engage_info_arr); $se_count++)
											{
												$se_descript = $service_engage_info_arr[$se_count]["service_proposal_description"];

												$title = '<p style="line-height: 1.5; text-align:justify; font-size: 10pt;"><span  nobr="true"><strong>' . $service_engage_info_arr[$se_count]["service_name"] . '<br/></strong>';

												$new_description = "";
												//print_r($service_engage_info_arr[$se_count]["service_proposal_description"]);
												// foreach(explode(PHP_EOL, $service_engage_info_arr[$se_count]["service_proposal_description"]) as $key => $line)
												// {
												// 	if(max(array_keys(explode(PHP_EOL, $service_engage_info_arr[$se_count]["service_proposal_description"]))) != $key)
												// 	{
												//     	$new_description = $new_description . '<span>' . trim($line, '"') . "</span><br />";
												//     }
												//     else
												//     {
												//     	$new_description = $new_description . '<span>' . trim($line, '"') . "</span>";
												//     }
												// }
												//$description = '<em>' . $new_description . '</em></span></p>';nl2br(
												$description = '<em>' . nl2br($service_engage_info_arr[$se_count]["service_proposal_description"]) . '</em></span></p>';

												$temp_content = $temp_content . $title . $description;
											}
										}

										$redeclare_contents_info = str_replace("<p>{{Scope of Engagement and details}}</p>", $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Firm Name")
									{
										$query = $this->db->query("select firm.* from firm where firm.id = '".$header_firm_id."'");

										$query = $query->result_array();

										$temp_content = $query[0]['name'];

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Firm phone number")
									{
										$query = $this->db->query("select firm.*, firm_telephone.telephone from firm left join firm_telephone on firm_telephone.firm_id = firm.id and firm_telephone.primary_telephone = 1 where firm.id = '".$header_firm_id."'");

										$query = $query->result_array();

										$temp_content = $query[0]['telephone'];

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Firm Email")
									{
										$query = $this->db->query("select firm.*, firm_email.email from firm left join firm_email on firm_email.firm_id = firm.id and firm_email.primary_email = 1 where firm.id = '".$header_firm_id."'");

										$query = $query->result_array();

										$temp_content = $query[0]['email'];

										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Company Director Name")
									{
										if($service_firm_name == "ACUMEN ALPHA ADVISORY PTE. LTD. (SBF CENTER)")
										{
											$temp_content = "George Yeo";
										}
										else
										{
											$temp_content = "Woelly William";
										}
										
										$redeclare_contents_info = str_replace($replace_string, $temp_content, $redeclare_contents_info);
									}
									elseif($string2 == "Table of Proposed Fees")
									{
										if (($pos = strpos($redeclare_contents_info, '<strong class="proposed_fees" style="font-size: 10pt;">')) !== FALSE) { 

											$proposal_content = substr($redeclare_contents_info, 0, $pos); 

											$obj_pdf->writeHTML($proposal_content, true, false, false, false, '');

											while($obj_pdf->getY() > 200)//170
											{
												$obj_pdf->AddPage();
												//$obj_pdf->writeHTML('<p></p>', true, false, false, false, '');
											};
											
											if (($table_pos = strpos($redeclare_contents_info, '<span style="font-size: 8pt;">{{Table of Proposed Fees}}</span>')) !== FALSE)
											{
												$proposed_title = substr($redeclare_contents_info, $pos, $table_pos - $pos);
												$obj_pdf->writeHTML($proposed_title, true, false, false, false, '');
											} 
											
											// set table header
											$obj_pdf->SetLineStyle(array('width' => 0.1, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(68,114,196)));
											$obj_pdf->SetFillColor(68,114,196);
											$obj_pdf->SetTextColor(255,255,255);
											$obj_pdf->SetFont('helvetica', 'B', 8);

											$obj_pdf->MultiCell(95, 7, 'Scope of Engagement', 1, 'C', 1, 0);
											$obj_pdf->MultiCell(30, 7, 'Currency', 1, 'C', 1, 0);
											$obj_pdf->MultiCell(40, 7, 'Proposed Fees', 1, 'C', 1, 1);

											// set table the rest tr td
											$obj_pdf->SetFillColor(255,255,255);
											$obj_pdf->SetTextColor(0,0,0);
											$obj_pdf->SetFont('helvetica', '', 8);

											if($service_engage_info->num_rows())
											{
												for($se_count = 0; $se_count < count($service_engage_info_arr); $se_count++)
												{
													while($obj_pdf->getY() > 260)
													{
														$obj_pdf->writeHTML('<p></p>', true, false, false, false, '');
													};

													$dont_have_sub_service = true;
													for($sub_se_count = 0; $sub_se_count < count($sub_service_engage_info); $sub_se_count++)
													{
														if($service_engage_info_arr[$se_count]['id'] == $sub_service_engage_info[$sub_se_count]['service_info_id'])
														{
															$line_height = 8;
															$width = 95;
															$text = ($sub_service_engage_info[$sub_se_count]['our_service_name']);
															$height = (ceil(($obj_pdf->GetStringWidth($text) / $width)) * $line_height);//(ceil(($obj_pdf->GetStringWidth($text) / $width))/2 * $line_height);
															if($got_gst)
															{
																$total_with_gst = (1 + ($sub_service_engage_info[$sub_se_count]["rate"] / 100)) * $sub_service_engage_info[$sub_se_count]["sub_fee"];
																$gst_wording = " w/GST";
															}
															else
															{
																$total_with_gst = $sub_service_engage_info[$sub_se_count]["sub_fee"];
																$gst_wording = "";
															}

															$obj_pdf->MultiCell(95, $height, $sub_service_engage_info[$sub_se_count]['our_service_name'] . "\n", 'TB', 'L', 1, 0);
															$obj_pdf->MultiCell(30, $height, $sub_service_engage_info[$sub_se_count]["currency"] . "\n", 'TB', 'C', 1, 0);
															$obj_pdf->MultiCell(40, $height, number_format($total_with_gst, 2) .$gst_wording. "\nPER " . strtoupper($sub_service_engage_info[$sub_se_count]["unit_pricing_name"]), 'TB', 'R', 1, 1);

															$dont_have_sub_service = false;
														}
													}

													if($dont_have_sub_service)
													{
														if($got_gst)
														{
															$total_with_gst = (1 + ($service_engage_info_arr[$se_count]["rate"] / 100)) * $service_engage_info_arr[$se_count]["fee"];
															$gst_wording = " w/GST";
														}
														else
														{
															$total_with_gst = $service_engage_info_arr[$se_count]["fee"];
															$gst_wording = "";
														}

														$obj_pdf->MultiCell(95, 8, $service_engage_info_arr[$se_count]['service_name'] . "\n", 'TB', 'L', 1, 0);
														$obj_pdf->MultiCell(30, 8, $service_engage_info_arr[$se_count]["currency"] . "\n", 'TB', 'C', 1, 0);
														$obj_pdf->MultiCell(40, 8, number_format($total_with_gst, 2) .$gst_wording. "\nPER " . strtoupper($service_engage_info_arr[$se_count]["unit_pricing_name"]), 'TB', 'R', 1, 1);
													}
												}
											}

											$redeclare_contents_info = substr($redeclare_contents_info, $table_pos + strlen('<span style="font-size: 8pt;">{{Table of Proposed Fees}}</span>'));//line-height: 1.5; 
										}

										$obj_pdf->SetLineStyle(array('width' => 0.1, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0,0,0)));
									}
								}

								$redeclare_contents_info = str_replace('class="check_new_page"', 'nobr="true"', $redeclare_contents_info);	// replace static text paragraph to make sure text is displayed in block together.
								//echo json_encode($new_contents_info);
								$content = $redeclare_contents_info;

								if (($pos = strpos($content, '<p class="sincerely_start" style="font-size: 10pt;">')) !== FALSE) //class="conclusion_start"
								{ 
									$top_content = substr($content, 0, $pos - 1); 

									$obj_pdf->writeHTML($top_content, true, false, false, false, '');
									
									// echo $obj_pdf->getY();
									$obj_pdf->SetAutoPageBreak(TRUE, 10);
									if($obj_pdf->getY() > 190)
									{
										$obj_pdf->AddPage();
									}

									$content = substr($content, $pos);
								}

								$obj_pdf->writeHTML($content, true, false, false, false, '');

								// if($service_firm_name == "ACUMEN ALPHA ADVISORY PTE. LTD. (SBF CENTER)")
								// {
								// 	$obj_pdf->setY($obj_pdf->getY() - 50);
								// 	$obj_pdf->writeHTML('<img src="img/george_signature_chop.png" width="150" height="120" />', true, false, false, false, '');
								// }
								// else
								// {
								// 	$obj_pdf->setY($obj_pdf->getY() - 45);
								// 	$obj_pdf->writeHTML('<img src="img/woelly_signature.png" width="167" height="100" />', true, false, false, false, '');
								// }

								$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($client_proposal_info[0]['client_name']).' ('.$service_firm_name.').pdf', 'F');

								if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($client_proposal_info[0]['client_name']).' ('.$service_firm_name.').pdf'))
				    			{
							        echo "File Doesn't Exist...";exit;
							    }

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$this->myUrlEncode($client_proposal_info[0]['client_name']).' ('.$service_firm_name.').pdf');
							}

							$data['transaction_id'] = $transaction_master_id;
							$data['type'] = "trans"; 
							$data['client_id'] = $client_query[0]["id"];
							$data['firm_id'] = $q[0]["firm_id"];
							$data['document_name'] = $q[0]["document_name"].' - '.$client_proposal_info[0]['client_name'];
							$data['triggered_by'] = 1;
							$data['document_date_checkbox'] = 1;
							$data['transaction_date'] = DATE("d/m/Y",now());
							$data['content'] = $content;
		            		$data['created_by']=$this->session->userdata('user_id');

		            		$client_query[0]["company_name"] = $client_proposal_info[0]['client_name'];

		            		$this->save_incorporate_pdf($data);
						}
					}
					elseif($q[0]["document_name"] == "Audit Engagement" || $q[0]["document_name"] == "Engagement letter - Corporate Tax" || $q[0]["document_name"] == "Engagement - Compilation" || $q[0]["document_name"] == "ML Quarterly Statements" || $q[0]["document_name"] == "PMFT Audit" || $q[0]["document_name"] == "Secretarial Services Agreement")
					{	
						$client_engagement_info = $this->db->query("SELECT *, client.registration_no FROM 
																	`transaction_engagement_letter_info` 
																	LEFT JOIN transaction_master ON transaction_master.id = transaction_engagement_letter_info.transaction_master_id
																	LEFT JOIN transaction_service_proposal_info ON transaction_service_proposal_info.transaction_id = transaction_master.id 
																	LEFT JOIN transaction_engagement_letter_additional_info ON transaction_engagement_letter_additional_info.transaction_id = transaction_engagement_letter_info.transaction_id
																	LEFT JOIN client ON client.company_code = transaction_master.company_code
																	WHERE transaction_engagement_letter_info.transaction_id = " . $transaction_master_id . " AND transaction_engagement_letter_info.deleted=0");

						if($client_engagement_info->num_rows() > 0)
						{
							$client_engagement_info = $client_engagement_info->result_array();
							if($this->encryption->decrypt($client_engagement_info[0]['registration_no']) != null)
							{
								$client_engagement_info[0]['registration_no'] = $this->encryption->decrypt($client_engagement_info[0]['registration_no']);
							}
							$client_engagement_info[0]['client_name'] = $this->encryption->decrypt($client_engagement_info[0]['client_name']);
						}
						else
						{
							$client_engagement_info = $this->db->query("SELECT client.*, client.company_name AS `client_name`, transaction_engagement_letter_additional_info.uen, transaction_engagement_letter_additional_info.fye_date, transaction_engagement_letter_additional_info.director_signing, transaction_engagement_letter_additional_info.engagement_letter_date FROM transaction_master 
																		LEFT JOIN client ON client.company_code = transaction_master.company_code AND client.deleted != 1
																		LEFT JOIN transaction_engagement_letter_additional_info ON transaction_engagement_letter_additional_info.transaction_id = transaction_master.id
																		WHERE transaction_master.id = " . $transaction_master_id);

							$client_engagement_info = $client_engagement_info->result_array();
							$client_engagement_info[0]['registration_no'] = $this->encryption->decrypt($client_engagement_info[0]['registration_no']);
							$client_engagement_info[0]['client_name'] = $this->encryption->decrypt($client_engagement_info[0]['client_name']);
						}
						//print_r($client_engagement_info);
						if(count($client_engagement_info) > 0)
						{
							$engagement_letter_date = date('Y-m-d', strtotime($client_engagement_info[0]["engagement_letter_date"]));
							// calculate fee depend on document type.
							if($q[0]["document_name"] == "Engagement - Compilation")
							{
								$engagement_letter_list_id = 1;
							}
							elseif($q[0]["document_name"] == "Engagement letter - Corporate Tax")
							{
								$engagement_letter_list_id = 2;
							}
							elseif($q[0]["document_name"] == "Audit Engagement")
							{
								$engagement_letter_list_id = 3;
							}
							elseif($q[0]["document_name"] == "ML Quarterly Statements")
							{
								$engagement_letter_list_id = 4;
							}
							elseif($q[0]["document_name"] == "PMFT Audit")
							{
								$engagement_letter_list_id = 5;
							}
							elseif($q[0]["document_name"] == "Secretarial Services Agreement")
							{
								$engagement_letter_list_id = 6;
							}

							$service_info_list = $this->db->query("SELECT transaction_engagement_letter_service_info.*, currency.currency, unit_pricing.unit_pricing_name, firm.name, firm.branch_name FROM transaction_engagement_letter_service_info 
																	LEFT JOIN currency ON currency.id = transaction_engagement_letter_service_info.currency_id 
																	LEFT JOIN firm ON firm.id = transaction_engagement_letter_service_info.servicing_firm
																	LEFT JOIN unit_pricing ON transaction_engagement_letter_service_info.unit_pricing = unit_pricing.id
																	WHERE transaction_engagement_letter_service_info.transaction_id =" . $transaction_master_id . " AND transaction_engagement_letter_service_info.engagement_letter_list_id=" . $engagement_letter_list_id);

							$service_info_list = $service_info_list->result_array();

							//----------------------check gst------------------------------------------
							if($service_info_list[0]["servicing_firm"] == 0)
							{
								$header_firm_id = $q[0]["firm_id"];
							}
							else
							{
								$header_firm_id = $service_info_list[0]["servicing_firm"];
							}

							$check_gst_status_query = $this->db->query("SELECT gst_firm.*, firm.jurisdiction_id, firm.gst_checkbox FROM gst_firm LEFT JOIN firm ON firm.id = gst_firm.firm_id WHERE gst_firm.register_date <= CURRENT_DATE() AND (gst_firm.deregister_date >= CURRENT_DATE() OR gst_firm.deregister_date IS NULL) AND gst_firm.firm_id = '".$header_firm_id."'");
							
							if($check_gst_status_query->num_rows() > 0)
							{
								$check_gst_status_array = $check_gst_status_query->result_array();
								$gst_rate = $this->db->query("SELECT gst_category_info.rate FROM transaction_engagement_letter_service_info
									LEFT JOIN our_service_info ON our_service_info.engagement_letter_list_id = transaction_engagement_letter_service_info.engagement_letter_list_id 
									LEFT JOIN our_service_gst ON our_service_gst.our_service_info_id = our_service_info.id and our_service_gst.jurisdiction_id = '".$check_gst_status_array[0]["jurisdiction_id"]."'
									LEFT JOIN gst_category_info ON gst_category_info.deleted = 0 AND gst_category_info.id = our_service_gst.category_id AND gst_category_info.start_date <= CURRENT_DATE() AND (gst_category_info.end_date >= CURRENT_DATE() OR gst_category_info.end_date IS NULL)");
								$gst_rate_array = $gst_rate->result_array();
								$got_gst = true;
							}
							else
							{
								$gst_rate_array = "";
								$got_gst = false;
							}
							//-----------------------------------------------------------------------------
							
							// display or not for header
							if($service_info_list[0]["servicing_firm"] != 0)
							{
								if($printed_letterhead != "true")
								{
									$header_content = $this->get_header_template("Company Info Header", $service_info_list[0]["servicing_firm"], $got_gst);

									$pattern = "/{{[^}}]*}}/";
									$subject = $header_content;
									preg_match_all($pattern, $subject, $header_tag_matches);

									$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);
								}
								else
								{
									$header_content = '';
								}
							}
							else
							{
								$header_content = '';
							}
							
							if($printed_letterhead != "true")
							{
								if($q[0]["document_name"] == "Secretarial Services Agreement")
								{
									$obj_pdf = new ENGAGEMENT_PDF_WITH_NORMAL_FOOTER(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								}
								else
								{
									$obj_pdf = new ENGAGEMENT_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
								}
							}
							else
							{
								$obj_pdf = new ENGAGEMENT_PDF_With_PREPrinter(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							}

							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Engagement";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));

							$obj_pdf->setPrintHeader(true);
							$obj_pdf->setPrintFooter(true);

							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER + 10);

							// set margins
							if($q[0]["document_name"] == "Audit Engagement")
							{
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+20, PDF_MARGIN_TOP + 15, PDF_MARGIN_RIGHT);
							}
							else if($q[0]["document_name"] == "Secretarial Services Agreement")
							{
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+10, PDF_MARGIN_TOP + 18, PDF_MARGIN_RIGHT+3);
							}
							else
							{
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+10, PDF_MARGIN_TOP + 15, PDF_MARGIN_RIGHT+3);
							}
							
							$obj_pdf->SetAutoPageBreak(TRUE, 22);
							$obj_pdf->AddPage();
							//$obj_pdf->setListIndentWidth(4);

							if($service_info_list[0]['branch_name'] != null)
							{
								$service_firm_name = $service_info_list[0]['name'].' ('.$service_info_list[0]['branch_name'].')';
							}
							else
							{
								$service_firm_name = $service_info_list[0]['name'];
							}

							for($r = 0; $r < count($matches[0]); $r++)
							{
								$string1 = (str_replace('{{', '',$matches[0][$r]));
								$string2 = (str_replace('}}', '',$string1));
								
								$replace_string = $matches[0][$r];
								$temp_content = "______________";

								if($string2 == "FYE Date")
								{	
									if(!empty($client_engagement_info[0]['fye_date']))
									{
										$temp_content = date('d F Y', strtotime(str_replace('/', '-', $client_engagement_info[0]['fye_date'])));
									}

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}

								if($string2 == "client company name")
								{
									if(!empty($client_engagement_info[0]['client_name']))
									{
										$temp_content = $client_engagement_info[0]['client_name'];
									}

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "client address")
								{
									$company_address = array(
										'type' 			=> 'Local',
										'street_name1' 	=> strtoupper(strtolower($client_engagement_info[0]['street_name'])),
										'unit_no1'		=> strtoupper(strtolower($client_engagement_info[0]["unit_no1"])),
										'unit_no2'		=> strtoupper(strtolower($client_engagement_info[0]["unit_no2"])),
										'building_name1'=> strtoupper(strtolower($client_engagement_info[0]["building_name"])),
										'postal_code1'	=> strtoupper(strtolower($client_engagement_info[0]["postal_code"]))
									);

									$temp_content = $this->write_address_local_foreign($company_address, "letter", "big_cap");

									if(empty($temp_content))
									{
										$temp_content = "______________________________________________________________";
									}

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "client company uen")
								{	
									if(!empty($client_engagement_info[0]['registration_no']))
									{
										if($q[0]["document_name"] == "Engagement letter - Corporate Tax")
										{
											$temp_content = $client_engagement_info[0]['registration_no'];
										}
										else
										{
											$temp_content = "(UEN: " . $client_engagement_info[0]['registration_no'] . ")";
										}
									}
									else
									{
										$temp_content = '';
									}

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "Total Engagement Fees")
								{
									$total_engagement_fee = 0;

									if(count($service_info_list) > 0)
									{
										for($b = 0; $b < count($service_info_list); $b++)
										{
											if($got_gst)
											{
												$total_with_gst = (1 + ($gst_rate_array[0]["rate"] / 100)) * ($total_engagement_fee + $service_info_list[$b]["fee"]);
												$temp_content = number_format($total_with_gst, 2);
												$gst_wording = " (w/GST)";
												$new_contents_info = str_replace($replace_string, $service_info_list[$b]["currency"] . $temp_content . $gst_wording, $new_contents_info);
											}
											else
											{
												$total_engagement_fee = $total_engagement_fee + $service_info_list[$b]["fee"];
												$temp_content 	   = number_format($total_engagement_fee, 2);
												$new_contents_info = str_replace($replace_string, $service_info_list[$b]["currency"] . $temp_content, $new_contents_info);
											}
										}
									}
									else
									{
										$temp_content 	   = "______________";
										$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
									}
								}
								elseif($string2 == "Director Name")
								{
									if($service_firm_name == "ACUMEN ALPHA ADVISORY PTE. LTD. (SBF CENTER)")
									{
										$temp_content = "";
									}
									else
									{
										$temp_content = $client_engagement_info[0]['director_signing'];
									}

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "Engagement Letter Date")
								{
									$temp_content = $client_engagement_info[0]['engagement_letter_date'];

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "servicing firm name")
								{
									$temp_content = $service_info_list[0]['name'];

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "Company Director Name")
								{
									if($service_firm_name == "ACUMEN ALPHA ADVISORY PTE. LTD. (SBF CENTER)")
									{
										$temp_content = "George Yeo";
									}
									else
									{
										$temp_content = "Woelly William";
									}
									

									$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);
								}
								elseif($string2 == "ML Fee" || $string2 == "PMFT Fee" || $string2 == "Secretarial Fee")
								{
									if($service_info_list[0]["fee"] > 0)
									{
										$temp_content = $service_info_list[0]["currency"] . number_format($service_info_list[0]["fee"], 2) . " per " .strtolower($service_info_list[0]["unit_pricing_name"]);

										$new_contents_info = str_replace($replace_string, $temp_content, $new_contents_info);

									}
									else
									{
										if(strpos($new_contents_info, '<p class="our_fee" style="text-align: justify;">') !== false)
				                		{
				                			$new_contents_info = str_replace('<p class="our_fee" style="text-align: justify;">', '<p class="our_fee" style="text-align: justify; display: none;">;', $new_contents_info);
				                		}
				                		elseif(strpos($new_contents_info, '<table class="check_new_page" id="our_fee_table" style="border-collapse: collapse; width: 100%; height: 28px;" border="0">') !== false)
				                		{
				                			$new_contents_info = str_replace('<table class="check_new_page" id="our_fee_table" style="border-collapse: collapse; width: 100%; height: 28px;" border="0">', '<table class="check_new_page" id="our_fee_table" style="border-collapse: collapse; width: 100%; height: 28px;  display: none;" border="0">', $new_contents_info);
				                		}
				                	}
								}
							}

							$tagvs = array('p' => array(1 => array('h' => 0.0001, 'n' => 1)), 'ul' => array(0 => array('h' => 0.0001, 'n' => 1)));
							$obj_pdf->setHtmlVSpace($tagvs);

							if($q[0]["document_name"] == "Audit Engagement" && $client_engagement_info[0]['client_name'] == "TOONG CHAI PRESBYTERIAN CHURCH")
							{
								
								$new_contents_info = str_replace("The Board of Directors", "Members of the Council", $new_contents_info);
								$new_contents_info = str_replace("statement of changes in equity", "statement of changes in accumulated funds", $new_contents_info);
								$new_contents_info = str_replace("audit engagement by means of this letter", "audit engagement pursuant to Charities Act (Cap. 37)", $new_contents_info);
								$new_contents_info = str_replace("provisions of the Companies Act, Chapter 50 (the Act)", "provisions of the Charities Act (the Act)", $new_contents_info);
								$new_contents_info = str_replace("NOT APPLICABLE", "", $new_contents_info);
								$new_contents_info = str_replace("Director", "Designation:", $new_contents_info);
							}

							$content = $new_contents_info;

							$content = str_replace('class="check_new_page"', 'nobr="true"', $content);	// replace static text paragraph to make sure text is displayed in block together.

							$obj_pdf->writeHTML($content, true, 0, true, true);

							// company signature
							// if($service_firm_name == "ACUMEN BIZCORP PTE. LTD.")
							// {
							// 	$img_tag = 'img/Signature - ABC.png';

							// 	$obj_pdf->setY($obj_pdf->getY() - 45);
								
							// 	$obj_pdf->Image($img_tag, '', '', 50, 30, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// elseif($service_firm_name == "ACUMEN ASSOCIATES LLP")
							// {
							// 	$img_tag = 'img/Signature - AA LLP.png';

							// 	if($q[0]["document_name"] == "PMFT Audit" || $q[0]["document_name"] == "ML Quarterly Statements")
							// 	{
							// 		$obj_pdf->setY($obj_pdf->getY() - 45);
							// 	}
							// 	else
							// 	{
							// 		$obj_pdf->setY($obj_pdf->getY() - 40);
							// 	}
							// 	$obj_pdf->Image($img_tag, '', '', 80, 30, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// elseif($service_firm_name == "SYA PAC")
							// {
							// 	$img_tag = 'img/Signature - SYA.png';

							// 	$obj_pdf->setY($obj_pdf->getY() - 48);
								
							// 	$obj_pdf->Image($img_tag, '', '', 45, 40, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// elseif($service_firm_name == "ACUMEN ASSURANCE")
							// {
							// 	$img_tag = 'img/Signature - AA.png';

							// 	$obj_pdf->setY($obj_pdf->getY() - 45);
								
							// 	$obj_pdf->Image($img_tag, '', '', 80, 30, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// elseif($service_firm_name == "SIMPEX CONSULTING (S) PTE. LTD.")
							// {
							// 	$img_tag = 'img/Signature - Simpex.png';

							// 	$obj_pdf->setY($obj_pdf->getY() - 48);

							// 	$obj_pdf->Image($img_tag, '', '', 45, 35, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// elseif($service_firm_name == "ACUMEN ALPHA ADVISORY PTE. LTD. (SBF CENTER)")
							// {
							// 	$img_tag = 'img/george_signature_chop.png';

							// 	$obj_pdf->setY($obj_pdf->getY() - 48);
								
							// 	$obj_pdf->Image($img_tag, '', '', 45, 38, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// elseif($service_firm_name == "ACUMEN ALPHA ADVISORY PTE. LTD. (NOVELTY BIZCENTRE)")
							// {
							// 	$img_tag = 'img/Woelly_AAA_Signature.png';

							// 	if($q[0]["document_name"] == "PMFT Audit" || $q[0]["document_name"] == "ML Quarterly Statements")
							// 	{
							// 		$obj_pdf->setY($obj_pdf->getY() - 55);
							// 	}
							// 	else
							// 	{
							// 		$obj_pdf->setY($obj_pdf->getY() - 48);
							// 	}
								
							// 	$obj_pdf->Image($img_tag, '', '', 63, 38, '', '', 'T', false, 1000, '', false, false, 1, false, false, false);
							// }
							// else
							// {
								$img_tag = '';
							//}

							$string_client_name = $this->myUrlEncode($client_engagement_info[0]['client_name']);
							$obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$string_client_name.'.pdf', 'F');

							if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$string_client_name.'.pdf'))
			    			{
						        echo "File Doesn't Exist...";exit;
						    }

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.$string_client_name.'.pdf');
							
							$data['transaction_id'] = $transaction_master_id;
							$data['type'] = "trans"; 
							$data['client_id'] = $client_query[0]["id"];
							$data['firm_id'] = $q[0]["firm_id"];
							$data['document_name'] = $q[0]["document_name"].' - '.$service_info_list[0]['name'];
							$data['triggered_by'] = 1;
							$data['document_date_checkbox'] = 1;
							$data['transaction_date'] = DATE("d/m/Y",now());
							$data['content'] = $content;
		            		$data['created_by']=$this->session->userdata('user_id');

		            		$this->save_incorporate_pdf($data);

		            		if($q[0]["document_name"] == "ML Quarterly Statements")
							{
								//Microsoft Word
								$PHPWord = new \PhpOffice\PhpWord\PhpWord();

								$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/ML Quarterly Statements.docx");

								if($printed_letterhead != "true")
								{
									$query = $this->db->query("select firm.*, firm_email.email, firm_telephone.telephone, firm_fax.fax from firm 
											JOIN firm_email ON firm_email.firm_id = firm.id AND firm_email.primary_email = 1 
											JOIN firm_telephone ON firm_telephone.firm_id = firm.id AND firm_telephone.primary_telephone = 1 
											JOIN firm_fax ON firm_fax.firm_id = firm.id AND firm_fax.primary_fax = 1
											where firm.id = '".$service_info_list[0]["servicing_firm"]."'");

									$query = $query->result_array();
									$document->setImageValue('CompanyLogo', "uploads/logo/". $query[0]["file_name"] ."");
									$document->setValue('firm_name', $query[0]["name"]);
									$document->setValue('UEN', "(UEN:".$query[0]["registration_no"].")");

									$firm_address = array(
										'type' 			=> 'Local',
										'street_name1' 	=> $query[0]["street_name"],
										'unit_no1'		=> $query[0]["unit_no1"],
										'unit_no2'		=> $query[0]["unit_no2"],
										'building_name1'=> $query[0]["building_name"],
										'postal_code1'	=> $query[0]["postal_code"]
									);

									$address = $this->write_address_local_foreign($firm_address, "comma", "small_cap");

									$document->setValue('firm_address', $address);
									$document->setValue('firm_telephone', "Tel: ".$query[0]["telephone"]);
									$document->setValue('firm_fax', "| Fax: ".$query[0]["fax"]);
									$document->setValue('firm_email', "| Email: ".$query[0]["email"]);
								}
								else
								{
									$document->setValue('CompanyLogo:100:50', "");
									$document->setValue('firm_name', "");
									$document->setValue('UEN', "");
									$document->setValue('firm_address', "");
									$document->setValue('firm_telephone', "");
									$document->setValue('firm_fax', "");
									$document->setValue('firm_email', "");
								}

								$document->setValue('Company current name', htmlspecialchars($client_engagement_info[0]['client_name']));
								$document->setValue('ML Fee', $service_info_list[0]["currency"].number_format($service_info_list[0]["fee"], 2)." per ".strtolower($service_info_list[0]["unit_pricing_name"]));

								$company_address = array(
									'type' 			=> 'Local',
									'street_name1' 	=> ucwords(strtolower($client_engagement_info[0]['street_name'])),
									'unit_no1'		=> ucwords(strtolower($client_engagement_info[0]["unit_no1"])),
									'unit_no2'		=> ucwords(strtolower($client_engagement_info[0]["unit_no2"])),
									'building_name1'=> ucwords(strtolower($client_engagement_info[0]["building_name"])),
									'postal_code1'	=> ucwords(strtolower($client_engagement_info[0]["postal_code"]))
								);

								$address = $this->transaction_word_model->write_address_local_foreign($company_address, "letter", "small_cap");

								$document->setValue('Address', $address);
								//Microsoft Word End
							}
						}
					}
					else
					{
						if($q[0]["document_name"] == "Letter of Authorisation")
						{
							//Microsoft Word
							$PHPWord = new \PhpOffice\PhpWord\PhpWord();

							$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Letter of Authorisation.docx");

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));

							$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));

							$document->setValue('Firm Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Name", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"])));

							$document->setValue('Firm Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));

							$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $q[0]["firm_id"], $get_member_info[$t]["id"], $q[0]["document_name"]));

							$director_signature_result = $this->db->query("select director_signature_1, director_signature_2 from transaction_client_signing_info where company_code='".$company_code."'");
							if ($director_signature_result->num_rows() == 0) 
							{
								$director_signature_result = $this->db->query("select director_signature_1, director_signature_2 from client_signing_info where company_code='".$company_code."'");
							}

							if ($director_signature_result->num_rows() > 0) 
							{
			                	$director_signature_result = $director_signature_result->result_array();

			                	if($director_signature_result[0]["director_signature_2"] != "0")
			                	{
			                		$document->cloneRow('director_signature', 2);
			                	}

			                	if($director_signature_result[0]["director_signature_1"] != "0")
			                	{
				                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_1"]."'");

				                	if ($client_officer->num_rows() == 0) 
									{
										$client_officer = $this->db->query("select * from client_officers where id='".$director_signature_result[0]["director_signature_1"]."'");
									}

			                		$client_officer = $client_officer->result_array();

			                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

			                		$officer_result = $officer_result->result_array();

			                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

			                		if($director_signature_result[0]["director_signature_2"] != "0")
				                	{
					                	$document->setValue('director_signature#1', htmlspecialchars($name));
					                }
					                else
					                {
					                	$document->setValue('director_signature', htmlspecialchars($name));
					                }
			                	}
			                	else
			                	{
			                		$document->setValue('director_signature', "");
			                	}

			                	if($director_signature_result[0]["director_signature_2"] != "0")
			                	{
				                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_2"]."'");

				                	if ($client_officer->num_rows() == 0) 
									{
										$client_officer = $this->db->query("select * from client_officers where id='".$director_signature_result[0]["director_signature_2"]."'");
									}

			                		$client_officer = $client_officer->result_array();

			                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

			                		$officer_result = $officer_result->result_array();

			                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

				                	$document->setValue('director_signature#2', htmlspecialchars($name));
			                	}
			                }

							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Letter of Authorisation - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/Letter of Authorisation - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							//Microsoft Word End

							$director_signature_result = $this->db->query("select director_signature_1, director_signature_2 from transaction_client_signing_info where company_code='".$company_code."'");

							if ($director_signature_result->num_rows() > 0) 
							{
			                	$director_signature_result = $director_signature_result->result_array();

			                	if($director_signature_result[0]["director_signature_1"] != "0")
			                	{
				                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_1"]."'");

			                		$client_officer = $client_officer->result_array();

			                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

			                		$officer_result = $officer_result->result_array();

			                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

				                	$new_contents_info = str_replace('<span class="myclass mceNonEditable">{{Director Signature 1}}</span>', $name, $new_contents_info);
			                	}
			                	else
			                	{
			                		$new_contents_info = str_replace('<div class="director_signature_1">', '<div class="director_signature_1" style="display: none">', $new_contents_info);
			                	}

			                	if($director_signature_result[0]["director_signature_2"] != "0")
			                	{
				                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_result[0]["director_signature_2"]."'");

			                		$client_officer = $client_officer->result_array();

			                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

			                		$officer_result = $officer_result->result_array();

			                		$name = $this->encryption->decrypt($officer_result[0]["name"]);

				                	$new_contents_info = str_replace('<span class="myclass mceNonEditable">{{Director Signature 2}}</span>', $name, $new_contents_info);
			                	}
			                	else
			                	{
			                		$new_contents_info = str_replace('<div class="director_signature_2">', '<div class="director_signature_2" style="display: none">', $new_contents_info);
			                	}
			                }
						}

						if($q[0]["document_name"] == "DRIW-Allotment of Shares" || $q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "DRIW-Change of Reg Ofis")
						{
							$header_content = $this->get_header_template("DRIW");

							$pattern = "/{{[^}}]*}}/";
							$subject = $header_content;
							preg_match_all($pattern, $subject, $header_tag_matches);

							$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
							$obj_pdf->setPrintHeader(true);
							$obj_pdf->setPrintFooter(true);
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+30, PDF_MARGIN_RIGHT+3);
							$obj_pdf->SetAutoPageBreak(TRUE, 30);
							$obj_pdf->setListIndentWidth(4);

							if($q[0]["document_name"] == "AGM & AR - DRIW")
							{
								$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+40, PDF_MARGIN_RIGHT+3);
							}

							//Microsoft Word
							if($q[0]["document_name"] == "DRIW-Change of Reg Ofis")
							{
								if($q[0]["document_category_id"] == 1)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/DRIW-Change of Reg Ofis.docx");
								}
								else if($q[0]["document_category_id"] == 2)
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Change of address.docx");
								}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Address - new', $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('DISPLAY TITLE TYPE FOR BOARD OF DIRECTOR', $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if(count($director_name_all) > 0)
								{
									$document->cloneRow('Directors name - all', count($director_name_all));

									for($g = 0; $g < count($director_name_all); $g++)
				                	{
				                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
				                	}
								}
								else
								{
									$document->setValue('Directors name - all', '');
								}
								
			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							}
							//Microsoft Word End
						}
						elseif($q[0]["document_name"] == "Proxy form" || $q[0]["document_name"] == "AGM Voting")
						{
							$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($get_member_info) > 0)
							{
								for($g = 0; $g < count($get_member_info); $g++)
			                	{	
			                		if($q[0]["document_name"] == "Proxy form")
									{
			                			$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Proxy form.docx");
			                		}
			                		elseif($q[0]["document_name"] == "AGM Voting")
				                 	{
				                 		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM Voting.docx");
				                 	}

			                		$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

									if($get_member_info[$g]["name"] != null)
			                		{
			                			$document_name = htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"]));
			                		}
			                		elseif($get_member_info[$g]["company_name"] != null)
			                 		{
			                 			$document_name = htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"]));
			                 		}
			                 		elseif($get_member_info[$g]["client_company_name"] != null)
			                 		{
			                 			$document_name = htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"]));
			                 		}

									if($q[0]["document_name"] == "Proxy form")
									{
										$document->setValue("Address - new", $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

				                 		$document->setValue('Members name', $document_name);
				                 	}
				                 	elseif($q[0]["document_name"] == "AGM Voting")
				                 	{
				                 		$number_of_agenda = 0;
				                 		$directors_name_all_retire = '';
				                 		$boolean_audited_fs = false;
				                 		$boolean_auditor_name = false;
				                 		$boolean_retire_director = false;

				                 		$transaction_agm_ar = $this->db->query('select transaction_agm_ar.*, transaction_agm_ar_reappoint_auditor.reappoint_auditor_name from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id left join transaction_agm_ar_reappoint_auditor on transaction_agm_ar_reappoint_auditor.transaction_agm_ar_id = transaction_agm_ar.id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

										$transaction_agm_ar = $transaction_agm_ar->result_array();

										$get_directors_retirement = $this->db->query('select transaction_agm_ar_director_retire.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id left join transaction_agm_ar_director_retire on transaction_agm_ar_director_retire.transaction_agm_ar_id = transaction_agm_ar.id and transaction_agm_ar_director_retire.director_retiring_checkbox = 1 where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

		                				$get_directors_retirement = $get_directors_retirement->result_array();

		                			
		        //         				if($transaction_agm_ar[0]['audited_fs'] == 1)
										// {
										// 	$number_of_agenda += 1;
										// 	$boolean_audited_fs = true;
										// }
										if($transaction_agm_ar[0]['reappoint_auditor_name'] != null)
										{
											$auditor_name = htmlspecialchars(strtoupper($transaction_agm_ar[0]['reappoint_auditor_name']));
											$number_of_agenda += 1;
											$boolean_auditor_name = true;
										}
										if(count($get_directors_retirement) > 0 && !is_null($get_directors_retirement[0]["director_retire_name"]))
					                	{
						                	for($x = 0; $x < count($get_directors_retirement); $x++)
											{	
												if($x == 0)
												{
													$directors_name_all_retire = $get_directors_retirement[$x]["director_retire_name"];
												}
												else if($x == count($get_directors_retirement) - 1)
												{
													$directors_name_all_retire = $directors_name_all_retire . ' and ' . $get_directors_retirement[$x]["director_retire_name"];
												}
												else
												{	
													$directors_name_all_retire = $directors_name_all_retire . ', ' . $get_directors_retirement[$x]["director_retire_name"];
												}
												$number_of_agenda += 1;
											}
											
											$boolean_retire_director = true;
										}

										if($number_of_agenda > 0)
										{
											$no = 1;
											$document->cloneRow('resolutions', $number_of_agenda);
											for($j = 0; $j < $number_of_agenda; $j++)
											{
												$no = $no + 1;
												$document->setValue('no#'.($j+1), $no);
												// if($boolean_audited_fs == true)
												// {
				        //         					$document->setValue('resolutions#'.($j+1), 'To receive and adopt the Audited Financial Statements for the year ended ${Year end new} and the Reports of the Directors and the Auditors thereon.');
				        //         					$boolean_audited_fs = false;
												// }
												// else 
												if($boolean_retire_director == true)
												{
													$document->setValue('resolutions#'.($j+1), 'To re-elect '.$get_directors_retirement[$j]["director_retire_name"].', who is retiring of the Constitution of the Company.');

													if(count($get_directors_retirement) == ($no - 1))
													{
														$boolean_retire_director = false;
													}
												}
												else if($boolean_auditor_name == true)
												{
													if($transaction_agm_ar[0]['reappoint_auditor_name'] == null)
													{
														$auditor_name = "&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;";
													}
													elseif($auditor_name == "0")
													{
														$auditor_name = "&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;";
													}
													$document->setValue('resolutions#'.($j+1), 'To re-appoint '.$auditor_name.' as Auditors of the Company and to authorise the Directors to fix their remuneration.');
													$boolean_auditor_name = false;
												}
											}
										}
										else
										{
											$document->setValue('no', "");
											$document->setValue('resolutions', '');
										}

										$document->setValue('Year end new', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue('un/audited', $this->transaction_word_model->getWordValue($transaction_master_id, "un/audited", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
				                 		$document->setValue("AGM Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue("AGM date", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
										$document->setValue("AGM time", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
				                 	}

				                 	if($q[0]["document_name"] == "Proxy form")
									{
										$document_number = "05.";
									}
									elseif($q[0]["document_name"] == "AGM Voting")
				                 	{
				                 		$document_number = "06.";
				                 	}

			                 		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($document_name)).'.docx');

									$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($document_name)).'.docx');
			                	}
								
								

								

								// $document->cloneRow('Members name - all', count($get_member_info));

								// for($g = 0; $g < count($get_member_info); $g++)
			     //            	{
			     //            		if($get_member_info[$g]["name"] != null)
			     //            		{
			     //            			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
			     //            			$document->setValue('Title Corp Rep Name#'.($g+1), "");
			     //            			$document->setValue('Title Identity Number#'.($g+1), "");
			     //            			$document->setValue('Corp Rep Name#'.($g+1), "");
			     //            			$document->setValue('Identity Number#'.($g+1), "");
			     //            		}
			     //            		elseif($get_member_info[$g]["company_name"] != null)
			     //            		{
			     //            			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			     //            			$get_corp_rep_info = $get_corp_rep_info->result_array();

			     //            			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
			     //            			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			     //            			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			     //            			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			     //            			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			     //            		}
			     //            		elseif($get_member_info[$g]["client_company_name"] != null)
			     //            		{
			     //            			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			     //            			$get_corp_rep_info = $get_corp_rep_info->result_array();

			     //            			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
			     //            			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			     //            			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			     //            			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			     //            			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			     //            		}
			     //            	}
							}
							else
							{
								$document->setValue('Members name', '');
							}
						}
						elseif($q[0]["document_name"] == "Allotment-Attendance List" || $q[0]["document_name"] == "Allotment-Shorter notice of EGM" || $q[0]["document_name"] == "AGM & AR - Attendance List" || $q[0]["document_name"] == "Shorter notice of AGM")
						{
							if( $q[0]["document_name"] == "Allotment-Shorter notice of EGM" || $q[0]["document_name"] == "Shorter notice of AGM")
							{
								//Microsoft Word
								if($q[0]["document_name"] == "Allotment-Shorter notice of EGM")
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Shorter notice of EGM.docx");
									$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								}
								else if($q[0]["document_name"] == "Shorter notice of AGM")
								{
									$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Shorter notice of AGM.docx");
									$document->setValue("Underline AGM Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline AGM Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Underline AGM date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline AGM date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Underline AGM time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline AGM time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Resolution Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Resolution Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								
								$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if(count($get_member_info) > 0)
								{
									$document->cloneRow('Members name - all', count($get_member_info));

									for($g = 0; $g < count($get_member_info); $g++)
				                	{
				                		if($get_member_info[$g]["name"] != null)
				                		{
				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
				                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
				                			$document->setValue('Title Identity Number#'.($g+1), "");
				                			$document->setValue('Corp Rep Name#'.($g+1), "");
				                			$document->setValue('Identity Number#'.($g+1), "");
				                		}
				                		elseif($get_member_info[$g]["company_name"] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
				                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
				                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
				                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
				                		}
				                		elseif($get_member_info[$g]["client_company_name"] != null)
				                		{
				                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

				                			$get_corp_rep_info = $get_corp_rep_info->result_array();

				                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
				                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
				                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
				                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
				                		}
				                	}
								}
								else
								{
									$document->setValue('Members name - all', '');
								}

								//Microsoft Word

			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
					            //Microsoft Word End
							}
							$template_type = '';

							if(strpos($q[0]["document_name"], "Attendance") !== false)
							{
								$header_content = $this->get_header_template("Attendance");
							}
							elseif(strpos($q[0]["document_name"], "Shorter notice"))
							{
								$header_content = $this->get_header_template("headerOnly");
								$header_title = '
								<p style="text-align: center;"><span style="font-size: 10pt;"><strong>AGREEMENT BY MEMBER TO SHORTER NOTICE FOR<br /></strong><strong>AN EXTRAORDINARY GENERAL MEETING</strong></span></p>
								<p style="text-align: justify;">&nbsp;</p>';

								$header_content = $header_content . $header_title;
							}

							$member_name_result = $this->db->query('select member_shares.*, z.company_name as tr_client_company_name, sum(member_shares.number_of_share) as number_of_share, sum(member_shares.amount_share) as amount_share, sum(member_shares.no_of_share_paid) as no_of_share_paid, sum(member_shares.amount_paid) as amount_paid, officer.identification_no, officer.name, officer_company.register_no, officer_company.company_name, share_capital.id as share_capital_id, share_capital.class_id, share_capital.other_class, share_capital.currency_id, class.sharetype, currencies.currency, y.registration_no as client_registration_no, y.company_name as client_company_name from member_shares left join officer on member_shares.officer_id = officer.id and member_shares.field_type = officer.field_type left join officer_company on member_shares.officer_id = officer_company.id and member_shares.field_type = officer_company.field_type left join client as y on y.id = member_shares.officer_id and member_shares.field_type = "client" and y.deleted <> 1 left join client_member_share_capital as share_capital on member_shares.client_member_share_capital_id = share_capital.id left join sharetype as class on class.id = share_capital.class_id left join currency as currencies on currencies.id = share_capital.currency_id left join client as z on z.company_code = member_shares.company_code AND z.deleted <> 1 where member_shares.company_code="'.$company_code.'" GROUP BY member_shares.field_type, member_shares.officer_id,member_shares.client_member_share_capital_id HAVING sum(member_shares.number_of_share) != 0');
		                	//officer_company.company_corporate_representative, 
		                	$member_name_result = $member_name_result->result_array();

		                	$num_of_members = count($member_name_result);

							$pattern = "/{{[^}}]*}}/";
							$subject = $header_content;
							preg_match_all($pattern, $subject, $header_tag_matches);

							$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));
							$obj_pdf->setPrintHeader(true);
							$obj_pdf->setPrintFooter(true);
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+22);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP+40, PDF_MARGIN_RIGHT+3);
							// echo $num_of_members;
							if($num_of_members < 5)
							{
								$obj_pdf->SetAutoPageBreak(TRUE, 10);
							}else
							{
								$obj_pdf->SetAutoPageBreak(TRUE, 35);
							}

							$obj_pdf->setListIndentWidth(4);
							$obj_pdf->AddPage();
						}
						elseif($q[0]["document_name"] == "Allotment-Authority to EGM")
						{	
			            	//Microsoft Word
			            	if($q[0]["document_category_id"] == 1)
			            	{
			            		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/EGM - Authority to Allot Issue Shares.docx");
							}
			            	else if($q[0]["document_category_id"] == 2)
			            	{
			            		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Increase of share.docx");
							}

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue('DISPLAY BOARD OF DIRECTOR - CONTENT', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display board of director - content", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Chairman", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Address - new", $this->transaction_word_model->getWordValue($transaction_master_id, "Address - new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

							$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($director_name_all) > 0)
							{
								for($g = 0; $g < 1; $g++)
			                	{
									$document->cloneRow('Directors name - all', count($director_name_all));
									if($q[0]["document_category_id"] == 1)
			            			{
										$document->cloneRow('Directors names - all', count($director_name_all));
									}
								}

								for($g = 0; $g < count($director_name_all); $g++)
			                	{
			                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
			                		$document->setValue('Directors names - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
			                	}
							}
							else
							{
								$document->setValue('Directors name - all', '');
								$document->setValue('Directors names - all', '');
							}	

							$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($get_member_info) > 0)
							{
								$document->cloneRow('Members name - all', count($get_member_info));
								if($q[0]["document_category_id"] == 2)
			            		{
			            			$document->cloneRow('Members names - all', count($get_member_info));
			            		}

								for($g = 0; $g < count($get_member_info); $g++)
			                	{
			                		if($get_member_info[$g]["name"] != null)
			                		{
			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
			                			$document->setValue('Members names - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Title Identity Number#'.($g+1), "");
			                			$document->setValue('Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Identity Number#'.($g+1), "");
			                		}
			                		elseif($get_member_info[$g]["company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
			                			$document->setValue('Members names - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			                		}
			                		elseif($get_member_info[$g]["client_company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
			                			$document->setValue('Members names - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			                		}
			                	}
							}
							else
							{
								$document->setValue('Members name - all', '');
							}

		            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
				            //Microsoft Word End

							$header_content = $this->get_header_template("DRIW");

							$pattern = "/{{[^}}]*}}/";
							$subject = $header_content;
							preg_match_all($pattern, $subject, $header_tag_matches);

							$header_content = $this->replaceToggle($transaction_master_id, $header_tag_matches[0], $company_code, $q[0]["firm_id"], $header_content, null, $q[0]["document_name"]);

							$obj_pdf = new DRIW_PDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setHeaderData($ln='', $lw=0, $ht='', $hs=$header_content, $tc=array(0,0,0), $lc=array(0,0,0));

							$obj_pdf->setPrintHeader(true);
							$obj_pdf->setPrintFooter(true);
							$obj_pdf->SetHeaderMargin(PDF_MARGIN_HEADER+20);
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT+2, PDF_MARGIN_TOP+35, PDF_MARGIN_RIGHT+3);
							$obj_pdf->SetAutoPageBreak(TRUE, 30);

							$obj_pdf->AddPage();
						}
						else
						{
							$obj_pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
							$obj_pdf->SetCreator(PDF_CREATOR);
							$title = "Document";
							$obj_pdf->SetTitle($title);
							$obj_pdf->setPrintHeader(false);
							$obj_pdf->setPrintFooter(false);
							$obj_pdf->SetDefaultMonospacedFont('helvetica');
							$obj_pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
							$obj_pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
							$obj_pdf->SetFont('helvetica', '', 10);
							$obj_pdf->setFontSubsetting(false);

							$obj_pdf->AddPage();
						}

						// if($q[0]["document_name"] == "AGM & AR - Annual Return")
						// {
						// 	$obj_pdf->setListIndentWidth(4);
						// }

						//$obj_pdf->AddPage();

						if($q[0]["document_name"] == "filing XBRL" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)") //$q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - Notice for AGM" || $q[0]["document_name"] == "AGM & AR - Minutes of AGM" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)" || $q[0]["document_name"] == "AGM & AR - Minutes of AGM" ||
						{
							//Microsoft Word
							if($q[0]["document_name"] == "AGM & AR - DRIW")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM & AR - DRIW.docx");
							}
							else if($q[0]["document_name"] == "AGM & AR - DRIW (Dormant)")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM & AR - DRIW (Dormant).docx");
							}
							else if($q[0]["document_name"] == "filing XBRL")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/filing XBRL.docx");
							}
							else if($q[0]["document_name"] == "AGM - DRIW")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM - DRIW.docx");
							}
							else if($q[0]["document_name"] == "AGM - DRIW (Dormant)")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM - DRIW (Dormant).docx");
							}
							//Microsoft Word End

							$directors_name = "";
							$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

							$get_directors = $get_directors->result_array();

							if(count($get_directors) > 0)
							{
			                	for($j = 0; $j < count($get_directors); $j++)
								{
									if($j == 0)
									{
										$directors_name = $this->encryption->decrypt($get_directors[$j]["name"]);
									}
									elseif($j == (count($get_directors)-1))
									{
										$directors_name = $directors_name." and ".$this->encryption->decrypt($get_directors[$j]["name"]);
									}
									else
									{
										$directors_name = $directors_name.", ".$this->encryption->decrypt($get_directors[$j]["name"]);
									}
								}
							}

							if(strpos($new_contents_info, '<span class="continuous_director"><span class="myclass mceNonEditable">{{Directors name - all}}</span></span>') !== false)
		                	{
								$new_contents_info = str_replace('<span class="continuous_director"><span class="myclass mceNonEditable">{{Directors name - all}}</span></span>', $directors_name, $new_contents_info);
							}

		                	$exemption_template = '';
		                	$retire_paragraph	= '';
		                	$notice_agm_block = '';
		                	$minutes_agm_block = '';
		                	$dr_agm_block = '';
		                	//AGM - DIRW
							$total_salary = 0;
							$total_cpf = 0;
							$total_director_fees = 0;
							$total_number = 0;

		                	$transaction_agm_ar = $this->db->query('select transaction_agm_ar.*, transaction_agm_ar_reappoint_auditor.reappoint_auditor_name from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id left join transaction_agm_ar_reappoint_auditor on transaction_agm_ar_reappoint_auditor.transaction_agm_ar_id = transaction_agm_ar.id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

							$transaction_agm_ar = $transaction_agm_ar->result_array();

							// for AGM - DRIW (fee paragraph)
		                	$get_directors_fee = $this->db->query('select transaction_agm_ar_director_fee.*, currency.currency as currency_name from transaction_agm_ar_director_fee left join
		                		transaction_agm_ar on transaction_agm_ar.id = transaction_agm_ar_director_fee.transaction_agm_ar_id left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id left join currency on currency.id = transaction_agm_ar_director_fee.currency_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

		                	$get_directors_fee = $get_directors_fee->result_array();

							//Microsoft Word
							if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
							{
								if($transaction_agm_ar[0]['audited_fs'] == 1)
								{
									$document->setValue("NOTICEAGMFINANCIALSTATEMENTAUDITEDCONTENTBLOCK", 'To receive, consider and if thought fit adopt the ${un/audited} Statement of Accounts for the${Year end new} together with the reports of the Directors and Auditors thereon.');
								}
								else
								{
									$document->setValue("NOTICEAGMFINANCIALSTATEMENTAUDITEDCONTENTBLOCK", 'To receive and adopt the Director${sing/plur for director(small_cap)} Statement, ${un/audited} accounts and Financial Statement for the${Year end new}.');
								}

								if($transaction_agm_ar[0]['small_company'] == 2 || $transaction_agm_ar[0]['audited_fs'] == 1)
								{
									//$document->setValue("EXEMPTAUDITREQUIREBLOCK", '');
									$dr_agm_block = '';
								}
								else
								{
									$notice_agm_block = $notice_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="3313A61B" w14:textId="694F2D6F" w:rsidR="000A72D4" w:rsidRPr="00D97B48" w:rsidRDefault="008923A5" w:rsidP="00D97B48"><w:pPr><w:pStyle w:val="MediumGrid1-Accent21"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr><w:autoSpaceDE w:val="0"/><w:autoSpaceDN w:val="0"/><w:adjustRightInd w:val="0"/><w:spacing w:after="0" w:line="240" w:lineRule="auto"/><w:ind w:left="420" w:hanging="420"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="000A72D4"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>To exempt the company is a small company exempt from audit for its financial year not exceeding revenue/assets of $10 million and/or 50 employees for the period and in the manner stated in Section 205C of the Companies Act.</w:t></w:r><w:bookmarkStart w:id="0" w:name="_GoBack"/><w:bookmarkEnd w:id="0"/></w:p>';

									$dr_agm_block = $dr_agm_block.'<w:p w14:paraId="4AD710E2" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="3BDD5D1E" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="364A1706" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="001420B8" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="001420B8"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>EXEMPT FROM AUDIT REQUIREMENTS</w:t></w:r></w:p><w:p w14:paraId="536213D3" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="00FE1459" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="749F6CE7" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="008416C0" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="008416C0"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>RESOLVED -</w:t></w:r></w:p><w:p w14:paraId="2321BF4C" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="008416C0" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="60B4974E" w14:textId="0C52D943" w:rsidR="001420B8" w:rsidRPr="00E24EBA" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00E24EBA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>THAT as at the ${Year end new}</w:t></w:r><w:r w:rsidRPr="00E24EBA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">, the company is a small company exempt from audit for its financial year beginning on or after 1 July 2015 since it meets the requirements of not exceeding revenue/assets of $10 million and/or 50 employees for the period and in the manner stated in section 205C of the Companies Act. </w:t></w:r></w:p><w:p w14:paraId="0B1D7D3B" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="00E24EBA" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="0559F783" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="00E24EBA" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00E24EBA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>THAT no notice has been received from any member under Section 205</w:t></w:r><w:proofErr w:type="gramStart"/><w:r w:rsidRPr="00E24EBA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>B(</w:t></w:r><w:proofErr w:type="gramEnd"/><w:r w:rsidRPr="00E24EBA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>6) requiring the company to obtain an audit of its accounts in relation to the year.</w:t></w:r></w:p><w:p w14:paraId="6778FD1B" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="00E24EBA" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="2792EE92" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="00E24EBA" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00E24EBA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>THAT the accounting and other records required to be kept by the company in accordance with Section 199 of the Companies Act have been so kept.</w:t></w:r></w:p>';

									$minutes_agm_block = $minutes_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="25334A17" w14:textId="52C9FB85" w:rsidR="001537CC" w:rsidRPr="002E24DA" w:rsidRDefault="001537CC" w:rsidP="002E24DA"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="22"/></w:numPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>EXEMPT FROM AUDIT REQUIREMENTS</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">IT WAS RESOLVED THAT as at the${Year end new}, the company is a small company exempt from audit for its financial year beginning on or after 1 July 2015 since it meets the requirements of not exceeding revenue/assets of $10 million and/or 50 employees for the period and in the manner stated in section 205C of the Companies Act.</w:t></w:r></w:p><w:p w14:paraId="35DC04FB" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="54B7D225" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>IT WAS RESOLVED THAT no notice has been received from any member under Section 205B(6) requiring the company to obtain an audit of its accounts in relation to the year.</w:t></w:r></w:p><w:p w14:paraId="2B05C1CA" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="16E82EE3" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>IT WAS RESOLVED THAT the accounting and other records required to be kept by the company in accordance with Section 199 of the Companies Act have been so kept.</w:t></w:r></w:p>';
								}

								if(count($get_directors_fee) > 0)
								{
									$notice_agm_block = $notice_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="3313A61B" w14:textId="694F2D6F" w:rsidR="000A72D4" w:rsidRPr="00D97B48" w:rsidRDefault="008923A5" w:rsidP="00D97B48"><w:pPr><w:pStyle w:val="MediumGrid1-Accent21"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr><w:autoSpaceDE w:val="0"/><w:autoSpaceDN w:val="0"/><w:adjustRightInd w:val="0"/><w:spacing w:after="0" w:line="240" w:lineRule="auto"/><w:ind w:left="420" w:hanging="420"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="000A72D4"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>To disclose of Director${sing/plur for director(small_cap)} remunerations and fees.</w:t></w:r><w:bookmarkStart w:id="0" w:name="_GoBack"/><w:bookmarkEnd w:id="0"/></w:p>';

									for($g = 0; $g < count($get_directors_fee); $g++)
				                	{
										$total_salary += $get_directors_fee[$g]["salary"];
										$total_cpf += $get_directors_fee[$g]["cpf"];
										$total_director_fees += $get_directors_fee[$g]["director_fee"];
										$total_number += $get_directors_fee[$g]["total_director_fee"];
				                	}

				                	if($total_director_fees > 0)
				                	{
										$header_fee = '<w:tc><w:tcPr><w:tcW w:w="265" w:type="dxa"/></w:tcPr><w:p w14:paraId="723515FD" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="3234E17C" w14:textId="5FEBE0B6" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>FEES</w:t></w:r></w:p></w:tc>';
										$fee_currency = '<w:tc><w:tcPr><w:tcW w:w="265" w:type="dxa"/></w:tcPr><w:p w14:paraId="39665690" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="71A416C2" w14:textId="2C8BE0AF" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc>';
										$s_fee = '<w:tc><w:tcPr><w:tcW w:w="265" w:type="dxa"/></w:tcPr><w:p w14:paraId="72F5D3A3" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="7FB5FA63" w14:textId="4CA5FB80" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr><w:t>${fees}</w:t></w:r></w:p></w:tc>';
										$total_fees = '<w:tc><w:tcPr><w:tcW w:w="265" w:type="dxa"/></w:tcPr><w:p w14:paraId="7CAD1E54" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="480B2264" w14:textId="62956B61" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr><w:t>${total fees}</w:t></w:r></w:p></w:tc>';
									}
									else
									{
										$header_fee = '';
										$fee_currency = '';
										$s_fee = '';
										$total_fees = '';
									}

									$minutes_agm_block = $minutes_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="25334A17" w14:textId="52C9FB85" w:rsidR="001537CC" w:rsidRPr="002E24DA" w:rsidRDefault="001537CC" w:rsidP="002E24DA"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="22"/></w:numPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="008416C0"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>DIRECTORS’ REMUNERATIONS AND FEES</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">IT WAS RESOLVED THAT the total fees paid/ payable to the following Director for the financial year ended 30 September 2019 be and are hereby approved.</w:t></w:r></w:p><w:p w14:paraId="35DC04FB" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:tbl><w:tblPr><w:tblW w:w="8762" w:type="dxa"/><w:tblInd w:w="284" w:type="dxa"/><w:tblLook w:val="01E0" w:firstRow="1" w:lastRow="1" w:firstColumn="1" w:lastColumn="1" w:noHBand="0" w:noVBand="0"/></w:tblPr><w:tblGrid><w:gridCol w:w="3015"/><w:gridCol w:w="1279"/><w:gridCol w:w="258"/><w:gridCol w:w="1279"/><w:gridCol w:w="265"/><w:gridCol w:w="1279"/><w:gridCol w:w="317"/><w:gridCol w:w="1279"/></w:tblGrid><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="13831D63" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3015" w:type="dxa"/></w:tcPr><w:p w14:paraId="3A9E9E52" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="003A59DD"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">Name</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="722C78C4" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="003A59DD"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>Salary</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="2F21F443" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="44A467F6" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>CPF</w:t></w:r></w:p></w:tc>'.$header_fee.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="3271D801" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="79999201" w14:textId="73878E7A" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="003A59DD"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>Total</w:t></w:r></w:p></w:tc></w:tr><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="5C97BC24" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3015" w:type="dxa"/></w:tcPr><w:p w14:paraId="280B1D88" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="4D78B795" w14:textId="6942270C" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="2B27AC6B" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="2C0E3DD1" w14:textId="38799D14" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc>'.$fee_currency.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="2C913599" w14:textId="77777777" w:rsidR="003C7346" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="2613B1C6" w14:textId="1F822727" w:rsidR="003C7346" w:rsidRPr="00E25F27" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc></w:tr><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="2F7143DD" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3015" w:type="dxa"/></w:tcPr><w:p w14:paraId="4419884B" w14:textId="47931772" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidR="00E867E7"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${Director Name}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="228E8F92" w14:textId="6EF64741" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${salary}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="5226A436" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="2F769318" w14:textId="704879FA" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${cpf}</w:t></w:r></w:p></w:tc>'.$s_fee.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="02E9B2FF" w14:textId="77777777" w:rsidR="003C7346" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="5BC4FED6" w14:textId="05057779" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr><w:t>${total}</w:t></w:r></w:p></w:tc></w:tr><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="5490F32D" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3015" w:type="dxa"/></w:tcPr><w:p w14:paraId="466B91AC" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="27C05053" w14:textId="5AD522B3" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${total salary}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="17D635A7" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="0FD515AC" w14:textId="7B0F808E" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">${total cpf}</w:t></w:r></w:p></w:tc>'.$total_fees.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="0DDF2696" w14:textId="77777777" w:rsidR="003C7346" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="18717B39" w14:textId="5BA8ADD5" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr><w:t>${total number}</w:t></w:r></w:p></w:tc></w:tr></w:tbl>';

									$dr_agm_block = $dr_agm_block.'<w:p w14:paraId="4AD710E2" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="3BDD5D1E" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="364A1706" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="001420B8" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="001420B8"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>DIRECTORS’ REMUNERATIONS AND FEES</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">RESOLVED THAT the total fees paid/ payable to the following Director for the financial year ended 30 September 2019 be and are hereby approved.</w:t></w:r></w:p><w:p w14:paraId="35DC04FB" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:tbl><w:tblPr><w:tblW w:w="9188" w:type="dxa"/><w:tblInd w:w="-142" w:type="dxa"/><w:tblLook w:val="01E0" w:firstRow="1" w:lastRow="1" w:firstColumn="1" w:lastColumn="1" w:noHBand="0" w:noVBand="0"/></w:tblPr><w:tblGrid><w:gridCol w:w="3250"/><w:gridCol w:w="1279"/><w:gridCol w:w="254"/><w:gridCol w:w="1279"/><w:gridCol w:w="261"/><w:gridCol w:w="1279"/><w:gridCol w:w="307"/><w:gridCol w:w="1279"/></w:tblGrid><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="13831D63" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3250" w:type="dxa"/></w:tcPr><w:p w14:paraId="0978DE36" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="003A59DD"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>Name</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="722C78C4" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="003A59DD"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>Salary</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="2F21F443" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="44A467F6" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>CPF</w:t></w:r></w:p></w:tc>'.$header_fee.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="3271D801" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="79999201" w14:textId="73878E7A" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="003A59DD"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>Total</w:t></w:r></w:p></w:tc></w:tr><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="5C97BC24" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3015" w:type="dxa"/></w:tcPr><w:p w14:paraId="280B1D88" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="4D78B795" w14:textId="6942270C" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="2B27AC6B" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="2C0E3DD1" w14:textId="38799D14" w:rsidR="003C7346" w:rsidRPr="00010D44" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc>'.$fee_currency.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="2C913599" w14:textId="77777777" w:rsidR="003C7346" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="2613B1C6" w14:textId="1F822727" w:rsidR="003C7346" w:rsidRPr="00E25F27" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="center"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${currency}</w:t></w:r></w:p></w:tc></w:tr><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="2F7143DD" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3250" w:type="dxa"/></w:tcPr><w:p w14:paraId="130F4D2E" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${Director Name}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="228E8F92" w14:textId="6EF64741" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${dr_salary}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="5226A436" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="2F769318" w14:textId="704879FA" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${cpf}</w:t></w:r></w:p></w:tc>'.$s_fee.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="02E9B2FF" w14:textId="77777777" w:rsidR="003C7346" w:rsidRDefault="003C7346" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/></w:tcPr><w:p w14:paraId="5BC4FED6" w14:textId="05057779" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="00E867E7" w:rsidP="007E20E3"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr><w:t>${total}</w:t></w:r></w:p></w:tc></w:tr><w:tr w:rsidR="00E867E7" w:rsidRPr="003A59DD" w14:paraId="5490F32D" w14:textId="77777777" w:rsidTr="00E867E7"><w:tc><w:tcPr><w:tcW w:w="3015" w:type="dxa"/></w:tcPr><w:p w14:paraId="466B91AC" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="27C05053" w14:textId="5AD522B3" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${total salary}</w:t></w:r></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="258" w:type="dxa"/></w:tcPr><w:p w14:paraId="17D635A7" w14:textId="77777777" w:rsidR="003C7346" w:rsidRPr="003A59DD" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="0FD515AC" w14:textId="7B0F808E" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">${total cpf}</w:t></w:r></w:p></w:tc>'.$total_fees.'<w:tc><w:tcPr><w:tcW w:w="317" w:type="dxa"/></w:tcPr><w:p w14:paraId="0DDF2696" w14:textId="77777777" w:rsidR="003C7346" w:rsidRDefault="003C7346" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr></w:p></w:tc><w:tc><w:tcPr><w:tcW w:w="1279" w:type="dxa"/><w:tcBorders><w:top w:val="single" w:sz="4" w:space="0" w:color="auto"/><w:bottom w:val="double" w:sz="4" w:space="0" w:color="auto"/></w:tcBorders></w:tcPr><w:p w14:paraId="18717B39" w14:textId="5BA8ADD5" w:rsidR="003C7346" w:rsidRDefault="00E867E7" w:rsidP="003C7346"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1440"/></w:tabs><w:ind w:right="72"/><w:jc w:val="right"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:lang w:eastAsia="zh-CN"/></w:rPr><w:t>${total number}</w:t></w:r></w:p></w:tc></w:tr></w:tbl>';
								}
							}
							//Microsoft Word End

							if($transaction_agm_ar[0]['small_company'] == 2 || $transaction_agm_ar[0]['audited_fs'] == 1)
							{
								if(strpos($new_contents_info, '{{exemption_small_company}}') !== false)
		                		{
		                			$new_contents_info = str_replace('{{exemption_small_company}}', '', $new_contents_info);
		                		}
		                		//Microsoft Word
		                		if($q[0]["document_name"] == "AGM & AR - DRIW")
								{
			                		$document->setValue("EXEMPTSMALLCOMPANYCONTENTBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="0" w:lineRule="auto"/></w:pPr></w:p>');
			                	}
		                		//Microsoft Word End
			                	
		                		if($transaction_agm_ar[0]['solvency_status'] == 2)
								{
									if(strpos($new_contents_info, '<p class="solvent">') !== false)
			                		{
			                			$new_contents_info = str_replace('<p class="solvent">', '<p class="solvent" style="display: none">', $new_contents_info);
			                		}
			                		//Microsoft Word
			                		if($q[0]["document_name"] == "AGM & AR - DRIW")
									{
					                	$document->setValue("SOLVENCYCONTENTBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="0" w:lineRule="auto"/></w:pPr></w:p>');
					                }
				                	//Microsoft Word End
			                	}
			                	else
			                	{
			                		//Microsoft Word
			                		if($q[0]["document_name"] == "AGM & AR - DRIW")
									{
				                		$document->setValue("SOLVENCYCONTENTBLOCK", '<w:br/></w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">DECLARATION OF SOLVENCY BY DIRECTOR${s(big_cap)}</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:br/><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>RESOLVED that the Director${sing/plur for director(small_cap)} Statement, in respect of the ability of the Company to meet its liabilities as and when they fall due be and is hereby approved and that the ${number of director} Director be and ${is/are} hereby authorised to sign the said Director${sing/plur for director(small_cap)} Statement for and on behalf of the Company.</w:t></w:r></w:p>');
				                	}
			                		//Microsoft Word End
			                	}
		                	}
		                	else
		                	{
		                		$exemption_template = '<span style="text-align: justify; font-size: 10pt;"><strong>EXEMPTION FROM AUDIT REQUIREMENTS FOR THE FINANCIAL YEAR ENDED <span style="text-transform: uppercase;"><span class="myclass mceNonEditable">{{Year end new}}</span></span></strong></span></p><p class="small_company" style="text-align: justify;"><span style="text-align: justify; font-size: 10pt;">NOTED that the Company satisfies the criteria of an exempt private company as defined under the Companies Act, Cap. 50 (the &ldquo;Act&rdquo;) and pursuant to the provisions of Section 205C of the Act, is exempted from audit requirements in respect of the profit and loss accounts and balance sheet for the financial year ended <span class="myclass mceNonEditable">{{Year end new}}</span>.</span></p><p class="small_company" style="text-align: justify;">';

								if(strpos($new_contents_info, '{{exemption_small_company}}') !== false)
		                		{
		                			$new_contents_info = str_replace('{{exemption_small_company}}', $exemption_template, $new_contents_info);
		                		}
		                		//Microsoft Word
		                		if($q[0]["document_name"] == "AGM & AR - DRIW")
								{
									if($transaction_agm_ar[0]['small_company'] == 2 || $transaction_agm_ar[0]['audited_fs'] == 1)
									{
										//$document->setValue("EXEMPTSMALLCOMPANYBLOCK", '');
				                		$document->setValue("EXEMPTSMALLCOMPANYCONTENTBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="0" w:lineRule="auto"/></w:pPr></w:p>');
				                	}
				                	else
				                	{
			                			$document->setValue("EXEMPTSMALLCOMPANYCONTENTBLOCK", '<w:br/></w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">EXEMPTION FROM AUDIT REQUIREMENTS FOR THE FINANCIAL YEAR ENDED ${Year end new(big_cap)}</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>NOTED that the Company satisfies the criteria of a small company as defined under the Companies Act, Cap. 50 (the “Act”) and pursuant to the provisions of Section 205C of the Act, is exempted from audit requirements in respect of the financial statements for the financial year ended${Year end new}.</w:t></w:r></w:p>');
				                	}
				                	$document->setValue("SOLVENCYCONTENTBLOCK", '<w:br/></w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">DECLARATION OF SOLVENCY BY DIRECTOR${s(big_cap)}</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:br/><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>RESOLVED that the Director${sing/plur for director(small_cap)} Statement, in respect of the ability of the Company to meet its liabilities as and when they fall due be and is hereby approved and that the ${number of director} Director be and ${is/are} hereby authorised to sign the said Director${sing/plur for director(small_cap)} Statement for and on behalf of the Company.</w:t></w:r></w:p>');
				                }
			                	//Microsoft Word End
		                	}

		                	// for AGM & AR - DRIW (retirement paragraph)
		                	$get_directors_retirement = $this->db->query('select transaction_agm_ar_director_retire.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id left join transaction_agm_ar_director_retire on transaction_agm_ar_director_retire.transaction_agm_ar_id = transaction_agm_ar.id and transaction_agm_ar_director_retire.director_retiring_checkbox = 1 where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

		                	$get_directors_retirement = $get_directors_retirement->result_array();

		                	$directors_name_all_retire = '';

		                	if(count($get_directors_retirement) > 0 && !is_null($get_directors_retirement[0]["director_retire_name"]))
		                	{
			                	for($x = 0; $x < count($get_directors_retirement); $x++)
								{	
									if($x == 0)
									{
										$directors_name_all_retire = $get_directors_retirement[$x]["director_retire_name"];
									}
									else if($x == count($get_directors_retirement) - 1)
									{
										$directors_name_all_retire = $directors_name_all_retire . ' and ' . $get_directors_retirement[$x]["director_retire_name"];
									}
									else
									{	
										$directors_name_all_retire = $directors_name_all_retire . ', ' . $get_directors_retirement[$x]["director_retire_name"];
									}
								}

								$retire_paragraph = '</p><p class="directors"><span style="text-align: justify; font-size: 10pt;"><strong>RETIREMENT AND RE-ELECTION OF DIRECTOR{_sing/plu s_} PURSUANT TO REGULATION OF THE COMPANY&rsquo;S CONSTITUTION</strong></span></p><p class="directors"><span style="text-align: justify; font-size: 10pt;">RESOLVED that <span class="continuous_director"><span class="myclass mceNonEditable">'. $directors_name_all_retire. '</span></span> shall retire from office and be eligible for re-election pursuant to Regulation of the Company&#039;s Constitution.</span>';
								
								if($q[0]["document_name"] == "AGM & AR - Notice for AGM")
								{
									$new_contents_info = str_replace('<tr class="retirement">', '<tr><td style="width: 4.98107%;">&nbsp;</td><td style="width: 95.0189%;">&nbsp;</td></tr><tr class="retirement">', $new_contents_info);

									$new_contents_info = str_replace('{{Director Retirement}}', $directors_name_all_retire, $new_contents_info);

									$new_contents_info = $this->write_list_number($new_contents_info);
								}
								elseif($q[0]["document_name"] == "AGM & AR - Minutes of AGM")
								{
									$new_contents_info = str_replace('{{Director Retirement}}', $directors_name_all_retire, $new_contents_info);
								}
								else
								{
									$new_contents_info = str_replace('<span class="retire_para">{{retirement paragraph}}</span>', $retire_paragraph, $new_contents_info);
								}

								$new_contents_info = $this->replace_verbs_plural($new_contents_info, count($get_directors_retirement));

								//Microsoft Word
								if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
								{
									$notice_agm_block = $notice_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="3313A61B" w14:textId="694F2D6F" w:rsidR="000A72D4" w:rsidRPr="00D97B48" w:rsidRDefault="008923A5" w:rsidP="00D97B48"><w:pPr><w:pStyle w:val="MediumGrid1-Accent21"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr><w:autoSpaceDE w:val="0"/><w:autoSpaceDN w:val="0"/><w:adjustRightInd w:val="0"/><w:spacing w:after="0" w:line="240" w:lineRule="auto"/><w:ind w:left="420" w:hanging="420"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="000A72D4"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>To re-elect the Directo${_sing/plu s_(small_cap)} retiring under the provisions of the Company’s Constitution.</w:t></w:r><w:bookmarkStart w:id="0" w:name="_GoBack"/><w:bookmarkEnd w:id="0"/></w:p>';

									$minutes_agm_block = $minutes_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="25334A17" w14:textId="52C9FB85" w:rsidR="001537CC" w:rsidRPr="002E24DA" w:rsidRDefault="001537CC" w:rsidP="002E24DA"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="22"/></w:numPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="008416C0"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>RE-ELECTION OF DIRECTORS</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="007A5C42"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>IT WAS RESOLVED THAT in accordance with the Company’s Constitution,</w:t></w:r><w:r w:rsidRPr="007A5C42"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidR="002E24DA" w:rsidRPr="002E24DA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${Director Retirement}</w:t></w:r><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> retire from the Board and being eligible, offer for re-election, be and is hereby re-elected.</w:t></w:r></w:p>';

									$dr_agm_block = $dr_agm_block.'<w:p w14:paraId="4AD710E2" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="3BDD5D1E" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="364A1706" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="001420B8" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="001420B8"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>RE-ELECTION OF DIRECTORS</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="007A5C42"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>RESOLVED THAT in accordance with the Company’s Constitution,</w:t></w:r><w:r w:rsidRPr="007A5C42"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidR="002E24DA" w:rsidRPr="002E24DA"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:bCs/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>${Director Retirement}</w:t></w:r><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> retire from the Board and being eligible, offer for re-election.</w:t></w:r></w:p>';

									$document->setValue("Director Retirement", htmlspecialchars($directors_name_all_retire));
								}

								if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)")
								{
				                	$document->setValue("RETIRECONTENTBLOCK", '</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">RETIREMENT AND RE-ELECTION OF DIRECTO${_sing/plu s_(big_cap)} PURSUANT TO THE COMPANY’S CONSTITUTION</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:br/><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>RESOLVED THAT ${Director Retirement} shall retire from office and be eligible for re-election pursuant to the Company’s Constitution.</w:t></w:r></w:p>');

				                	$document->setValue("NOTICERETIREBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="3313A61B" w14:textId="694F2D6F" w:rsidR="000A72D4" w:rsidRPr="00D97B48" w:rsidRDefault="008923A5" w:rsidP="00D97B48"><w:pPr><w:pStyle w:val="MediumGrid1-Accent21"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr><w:autoSpaceDE w:val="0"/><w:autoSpaceDN w:val="0"/><w:adjustRightInd w:val="0"/><w:spacing w:after="0" w:line="240" w:lineRule="auto"/><w:ind w:left="567" w:hanging="567"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r w:rsidRPr="000A72D4"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>To re-elect ${Director Retirement} the Directo${_sing/plu s_(small_cap)} retiring pursuant to the Company’s Constitution.</w:t></w:r><w:bookmarkStart w:id="0" w:name="_GoBack"/><w:bookmarkEnd w:id="0"/></w:p>');

				                	$document->setValue("MINUTESRETIRECONTENTBLOCK", '<w:br/></w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">RE-ELECTION OF DIRECTO${_sing/plu s_(big_cap)}</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:br/><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>RESOLVED that ${Director Retirement} the Directo${_sing/plu s_(small_cap)} retiring pursuant to the Company’s Constitution, be and are hereby re-elected as Directo${_sing/plu s_(small_cap)} of the Company.</w:t></w:r></w:p>');
			                		$document->setValue("Director Retirement", htmlspecialchars($directors_name_all_retire));
			                	}
			                	//Microsoft Word End
							}
							else
							{
								if($q[0]["document_name"] == "AGM & AR - Notice for AGM")
								{
									// Do not modify this.
									$new_contents_info = str_replace('<tr class="retirement">', '<tr class="retirement" style="display:none">', $new_contents_info);
									$new_contents_info = str_replace('<td style="width: 4.98107%;"><span style="font-size: 10pt;">{{no}}</span></td>', '<td style="width: 4.98107%;"><span style="font-size: 10pt;"></span></td>', $new_contents_info);

									$new_contents_info = $this->write_list_number($new_contents_info);
								}
								elseif($q[0]["document_name"] == "AGM & AR - Minutes of AGM")
								{
									$new_contents_info = str_replace('<p class="retirement">', '<p class="retirement" style="display:none;">', $new_contents_info);
								}
								else
								{
									$new_contents_info = str_replace('<span class="retire_para">{{retirement paragraph}}</span>', '', $new_contents_info);
								}
								//Microsoft Word
								if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)")
								{
					                $document->setValue("RETIRECONTENTBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="0" w:lineRule="auto"/></w:pPr></w:p>');
					                $document->setValue("NOTICERETIREBLOCK", '');
				                	$document->setValue("MINUTESRETIRECONTENTBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="0" w:lineRule="auto"/></w:pPr></w:p>');
				                }
			                	//Microsoft Word End
							}

							//Microsoft Word
							if($transaction_agm_ar[0]['reappoint_auditor_name'] != null)
		                	{
				                if($transaction_agm_ar[0]['reappoint_auditor_name'] == "0")
				                {
				                	$transaction_agm_ar[0]['reappoint_auditor_name'] = "                                      ";
				                }

				                if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
								{
									$notice_agm_block = $notice_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="3313A61B" w14:textId="694F2D6F" w:rsidR="000A72D4" w:rsidRPr="00D97B48" w:rsidRDefault="008923A5" w:rsidP="00D97B48"><w:pPr><w:pStyle w:val="MediumGrid1-Accent21"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr><w:autoSpaceDE w:val="0"/><w:autoSpaceDN w:val="0"/><w:adjustRightInd w:val="0"/><w:spacing w:after="0" w:line="240" w:lineRule="auto"/><w:ind w:left="420" w:hanging="420"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="000A72D4"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>To re-appoint Auditors and to authorize the Directors to fix their remuneration.</w:t></w:r><w:bookmarkStart w:id="0" w:name="_GoBack"/><w:bookmarkEnd w:id="0"/></w:p>';

									$minutes_agm_block = $minutes_agm_block.'<w:p><w:pPr><w:spacing w:after="0" w:line="240" w:lineRule="auto"/></w:pPr></w:p><w:p w14:paraId="25334A17" w14:textId="52C9FB85" w:rsidR="001537CC" w:rsidRPr="002E24DA" w:rsidRDefault="001537CC" w:rsidP="002E24DA"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="22"/></w:numPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="008416C0"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>AUDITORS</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:ind w:left="360"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">IT WAS RESOLVED THAT '.htmlspecialchars(strtoupper($transaction_agm_ar[0]['reappoint_auditor_name'])).', Public Accountants and Chartered Accountants and are hereby re-appointed Auditors of the Company until the next Annual General Meeting at a fee to be agreed between the Directors and the Auditors.</w:t></w:r></w:p>';

									$dr_agm_block = $dr_agm_block.'<w:p w14:paraId="4AD710E2" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="3BDD5D1E" w14:textId="77777777" w:rsidR="001420B8" w:rsidRDefault="001420B8" w:rsidP="00E56618"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="364A1706" w14:textId="77777777" w:rsidR="001420B8" w:rsidRPr="001420B8" w:rsidRDefault="001420B8" w:rsidP="001420B8"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr></w:pPr><w:r w:rsidRPr="001420B8"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/><w:u w:val="single"/></w:rPr><w:t>AUDITORS</w:t></w:r></w:p><w:p w14:paraId="1929DA04" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="008416C0" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="759D7D47" w14:textId="77777777" w:rsidR="003E2DB9" w:rsidRPr="00A21509" w:rsidRDefault="003E2DB9" w:rsidP="003E2DB9"><w:pPr><w:tabs><w:tab w:val="left" w:pos="1800"/></w:tabs><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="00A21509"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">RESOLVED THAT '.htmlspecialchars(strtoupper($transaction_agm_ar[0]['reappoint_auditor_name'])).', Public Accountants and Chartered Accountants and are hereby re-appointed Auditors of the Company until the next Annual General Meeting at a fee to be agreed between the Directors and the Auditors.</w:t></w:r></w:p>';
								}

				                $document->setValue("APPOINTAUDITORBLOCK", '</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">APPOINTMENT OF AUDITOR</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:br/><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>RESOLVED that '.htmlspecialchars(strtoupper($transaction_agm_ar[0]['reappoint_auditor_name'])).' be and are hereby appointed Auditor of the Company for the ensuing year and that their remuneration be fixed at such rate as may be agreed upon by the Director and the Auditor.</w:t></w:r></w:p>');

				                $document->setValue("NOTICEAPPTAUDITORBLOCK", '<w:p w14:paraId="3313A61B" w14:textId="694F2D6F" w:rsidR="000A72D4" w:rsidRPr="00D97B48" w:rsidRDefault="008923A5" w:rsidP="00D97B48"><w:pPr><w:pStyle w:val="MediumGrid1-Accent21"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr><w:autoSpaceDE w:val="0"/><w:autoSpaceDN w:val="0"/><w:adjustRightInd w:val="0"/><w:spacing w:after="0" w:line="240" w:lineRule="auto"/><w:ind w:left="567" w:hanging="567"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r w:rsidRPr="000A72D4"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>To appoint '.htmlspecialchars(strtoupper($transaction_agm_ar[0]['reappoint_auditor_name'])).' as the Auditors of the Company for the ensuing year.</w:t></w:r><w:bookmarkStart w:id="0" w:name="_GoBack"/><w:bookmarkEnd w:id="0"/></w:p>');

				                $document->setValue("MINUTESAPPTAUDITORBLOCK", '</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t xml:space="preserve">APPOINTMENT OF AUDITORS</w:t></w:r><w:r><w:t><w:p><w:pPr></w:pPr></w:p><w:br/><w:p><w:pPr><w:spacing w:after="0" w:line="220" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="20"/><w:szCs w:val="20"/></w:rPr><w:t>RESOLVED that '.htmlspecialchars(strtoupper($transaction_agm_ar[0]['reappoint_auditor_name'])).' be and are hereby appointed Auditors of the Company for the ensuing year and that their remuneration be fixed at such rate as may be agreed upon by the Directors and the Auditors.</w:t></w:r></w:p>');

				                if($q[0]["document_name"] == "filing XBRL")
								{
									$document->setValue("Auditor name", htmlspecialchars($transaction_agm_ar[0]['reappoint_auditor_name']));
								}
		                	}
		                	else
		                	{
				                $document->setValue("APPOINTAUDITORBLOCK", '<w:p><w:pPr><w:spacing w:after="0" w:line="0" w:lineRule="auto"/></w:pPr></w:p>');
				                $document->setValue("NOTICEAPPTAUDITORBLOCK", '');
				                $document->setValue("MINUTESAPPTAUDITORBLOCK", '');
		                	}


		                	if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
							{
								if($notice_agm_block != '')
								{
									$document->setValue("NOTICEAGMBLOCK", $notice_agm_block);
								}
								else
								{
									$document->setValue("NOTICEAGMBLOCK", '');
								}
								if($minutes_agm_block != '')
								{
									$document->setValue("MINUTESAGMBLOCK", $minutes_agm_block);
								}
								else
								{
									$document->setValue("MINUTESAGMBLOCK", '');
								}
								if($dr_agm_block != '')
								{
									$document->setValue("EXEMPTAUDITREQUIREBLOCK", $dr_agm_block);
								}
								else
								{
								
									$document->setValue("EXEMPTAUDITREQUIREBLOCK", '');
								}
								$document->setValue("Director Retirement", htmlspecialchars($directors_name_all_retire));
							}
		                	
		                	//Microsoft Word End

							$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

							$get_directors = $get_directors->result_array();

							if(2 > count($get_directors))
							{
								if(strpos($new_contents_info, '<span class="many_director">s</span>') !== false)
			                	{
			                		$new_contents_info = str_replace('<span class="many_director">s</span>', '<span class="many_director" style="display: none">s</span>', $new_contents_info);
			                		//Microsoft Word
			                		if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
									{
			                			$document->setValue('s(small_cap)', "");
			                			$document->setValue('sing/plur for director(small_cap)', "'s");
			                		}
			                		//Microsoft Word End
			                	}

			                	if(strpos($new_contents_info, '<span class="many_director">S</span>') !== false)
			                	{
			                		$new_contents_info = str_replace('<span class="many_director">S</span>', '<span class="many_director" style="display: none">S</span>', $new_contents_info);
			                		//Microsoft Word
			                		if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
									{
			                			$document->setValue('s(big_cap)', "");
			                			$document->setValue('sing/plur for director(big_cap)', "'S");
			                		}
			                		//Microsoft Word End
			                	}

			                	if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
								{
				                	$document->setValue('s(small_cap)', "");
			                		$document->setValue('sing/plur for director(small_cap)', "'s");
				                	$document->setValue('s(big_cap)', "");
			                		$document->setValue('sing/plur for director(big_cap)', "'S");
				                }
			                }
			                else
			                {
			                	if(strpos($new_contents_info, '<span class="single_director">SOLE</span>') !== false)
			                	{
			                		$new_contents_info = str_replace('<span class="single_director">SOLE</span>', '<span class="single_director" style="display: none">SOLE</span>', $new_contents_info);
			                	}
			                	//Microsoft Word
			                	if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
								{
				                	$document->setValue('s(small_cap)', "s");
				                	$document->setValue('sing/plur for director(small_cap)', "s'");
				                	$document->setValue('s(big_cap)', "S");
				                	$document->setValue('sing/plur for director(big_cap)', "S'");
				                }
			                	//Microsoft Word End
			                }

			                if(strpos($new_contents_info, '<span class="myclass mceNonEditable">{{number of director}}</span>') !== false)
		                	{
		                		$new_contents_info = str_replace('<span class="myclass mceNonEditable">{{number of director}}</span>', $this->convert_number_to_word_model->convert_number_to_words(count($get_directors)), $new_contents_info);
		                	}
		                	//Microsoft Word
		                	if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
							{
								if(count($get_directors) > 1)
								{
		                			$document->setValue('number of director', $this->convert_number_to_word_model->convert_number_to_words(count($get_directors)));
								}
								else
								{
									$document->setValue('number of director', "sole");
								}
		                	}
		                	//Microsoft Word End

							//Microsoft Word
							if($q[0]["document_name"] == "AGM & AR - DRIW" || $q[0]["document_name"] == "AGM & AR - DRIW (Dormant)" || $q[0]["document_name"] == "filing XBRL" || $q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
							{
								$one_director_name = '';
								$one_member_name = '';
								$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
								$director_member_result = $this->transaction_word_model->getWordValue($transaction_master_id, "get_director_member_result", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if($q[0]["document_name"] == "filing XBRL")
								{
									$document->setValue("Firm Name",  htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
									$document->setValue("Firm Address", $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									$document->setValue("Auditor name", htmlspecialchars($transaction_agm_ar[0]['reappoint_auditor_name']));
								}
								else if($q[0]["document_name"] != "filing XBRL" && ($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)"))
								{
									//----AGM-DRIW-----
									if(count($get_directors_fee) > 0)
									{
										$document->setValue('currency', htmlspecialchars($get_directors_fee[0]["currency_name"]));
										$document->cloneRow('salary', count($get_directors_fee));
										$document->cloneRow('dr_salary', count($get_directors_fee));
										for($g = 0; $g < count($get_directors_fee); $g++)
					                	{
					                		$document->setValue('Director Name#'.($g+1), htmlspecialchars($get_directors_fee[$g]["director_fee_name"]));
					                		if($get_directors_fee[$g]["salary"] == 0.00)
					                		{
					                			$document->setValue('salary#'.($g+1), "-");
					                			$document->setValue('dr_salary#'.($g+1), "-");
					                		}
					                		else
					                		{
					                			$document->setValue('salary#'.($g+1), number_format(round($get_directors_fee[$g]["salary"])));
					                			$document->setValue('dr_salary#'.($g+1), number_format(round($get_directors_fee[$g]["salary"])));
					                		}
					                		if($get_directors_fee[$g]["cpf"] == 0.00)
					                		{
					                			$document->setValue('cpf#'.($g+1), "-");
					                		}
					                		else
					                		{
					                			$document->setValue('cpf#'.($g+1), number_format(round($get_directors_fee[$g]["cpf"])));
					                		}
					                		if((float)$total_director_fees > 0)
						                	{
						                		if($get_directors_fee[$g]["director_fee"] == 0.00)
						                		{
						                			$document->setValue('fees#'.($g+1), "-");
						                		}
						                		else
						                		{
						                			$document->setValue('fees#'.($g+1), number_format(round($get_directors_fee[$g]["director_fee"])));
						                		}
						                	}
						                	if($get_directors_fee[$g]["total_director_fee"] == 0.00)
					                		{
					                			$document->setValue('total#'.($g+1), "-");
					                		}
					                		else
					                		{
					                			$document->setValue('total#'.($g+1), number_format(round($get_directors_fee[$g]["total_director_fee"])));
					                		}
					                	}

					                	$document->setValue('total salary', number_format(round($total_salary)));
					                	$document->setValue('total cpf', number_format(round($total_cpf)));
					                	if((float)$total_director_fees > 0)
					                	{
					                		$document->setValue('total fees', number_format(round($total_director_fees)));
					                	}
					                	$document->setValue('total number', number_format(round($total_number)));
					                }
									//----AGM-DRIW-----

									if(count($director_name_all) > 0)
									{
										$document->cloneRow('Directors name - all', count($director_name_all));

										for($g = 0; $g < count($director_name_all); $g++)
					                	{
					                		$one_director_name = htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"]));
					                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
					                	}
									}
									else
									{
										$document->setValue('Directors name - all', '');
									}

									if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
									{
										if(count($director_member_result) > 0)
										{
											$document->cloneRow('Director and Members name - all', count($director_member_result));

											for($g = 0; $g < count($director_member_result); $g++)
								            {
												if($director_member_result[$g]["name"] != '')
												{
													$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["name"])));
													$document->setValue('Corp Rep Director and members name#'.($g+1), "");
												}
												elseif($director_member_result[$g]["company_name"] != '')
					            				{
					            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($director_member_result[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($director_member_result[$g]["ms_client_company_name"]).'"');

					                				$get_corp_rep_info = $get_corp_rep_info->result_array();

													$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
													$document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["company_name"])).")");
												}
					            				elseif($director_member_result[$g]["client_company_name"] != '')
					            				{
					            					$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($director_member_result[$g]["registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($director_member_result[$g]["ms_client_company_name"]).'"');

					                				$get_corp_rep_info = $get_corp_rep_info->result_array();

					                				$document->setValue('Director and Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
													$document->setValue('Corp Rep Director and members name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($director_member_result[$g]["client_company_name"])).")");
												}
											}
										}
									}

									$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
									if(count($get_member_info) > 0)
									{
										$document->cloneRow('Members name - all', count($get_member_info));

										for($g = 0; $g < count($get_member_info); $g++)
					                	{
					                		if($get_member_info[$g]["name"] != null)
					                		{
					                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
					                			$one_member_name = htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"]));
					                			if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
					                			{
					                				$document->setValue('Corp Rep of Name#'.($g+1), "");
					                			}
					                			else
					                			{
						                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
						                			$document->setValue('Title Identity Number#'.($g+1), "");
						                			$document->setValue('Corp Rep Name#'.($g+1), "");
						                			$document->setValue('Identity Number#'.($g+1), "");
						                		}
					                		}
					                		elseif($get_member_info[$g]["company_name"] != null)
					                		{
					                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

					                			$get_corp_rep_info = $get_corp_rep_info->result_array();

					                			if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
					                			{
					                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
					                				$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
					                			}
					                			else
					                			{
					                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
						                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
						                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
						                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
						                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
						                		}
					                		}
					                		elseif($get_member_info[$g]["client_company_name"] != null)
					                		{
					                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

					                			$get_corp_rep_info = $get_corp_rep_info->result_array();

					                			if($q[0]["document_name"] == "AGM - DRIW" || $q[0]["document_name"] == "AGM - DRIW (Dormant)")
					                			{
					                				$document->setValue('Members name - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
					                				$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])).")");
												}
					                			else
					                			{
						                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
						                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
						                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
						                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
						                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
						                		}
					                		}
					                	}
									}
									else
									{
										$document->setValue('Members name - all', '');
										$document->setValue('Corp Rep of Name', "");
									}
								}

								$chairman_name = $this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

								if(count($get_member_info) == 1 && count($director_name_all) == 1 && ($one_director_name == $one_member_name))
								{
									$document->setValue('MINUTESCONTENT', 'We, the undersigned, being all the ${member_word} hereby confirm that the Annual General Meeting of the Company ${pass_reso}');
									$document->setValue('member_word', "sole Member");
									$document->setValue('CONSENTNOTICEBLOCK', 'I, the undersigned, sole member of the Company, hereby consent, pursuant to Section 177(3)(b) of the Companies Act Cap. 50, on ${AGM date} notwithstanding that less than the requisite period of the notice of the meeting has been given.');
									$document->setValue('pass_reso', 'to pass the following resolution by written mean:-');
									//$document->setValue('title minutes', 'MINUTES BY SOLE MEMBERS RESOLUTION BY WRITTEN MEANS PURSUANT TO SECTION 184G OF THE COMPANIES ACT, CAP. 50 AND ARTICLE 90 OF THE CONSTITUTION OF THE COMPANY.');
									$document->setValue('title minutes', 'MINUTES BY SOLE MEMBER RESOLUTION BY WRITTEN MEANS PURSUANT TO SECTION 184G OF THE COMPANIES ACT, CAP. 50 AND REGULATION OF THE CONSTITUTION OF THE COMPANY.');
									$document->setValue('MINUTESPOSITION', 'Sole Member');
									$document->setValue('LISTOFCONSENT', '');
								}
								else if($transaction_agm_ar[0]["company_type"] == 2 && $transaction_agm_ar[0]["activity_status"] == 1)
								{
									$cop_rep_value = $this->transaction_word_model->getWordValue($transaction_master_id, "high_share_coporate_rep", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
									$current_company_name = htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
									//print_r($cop_rep_value);
									$document->setValue('title minutes', 'MINUTES BY REPRESENTATIVE OF HOLDING COMPANY RELATING TO PROCEEDINGS OF SUBSIDIARY COMPANY UNDER SECTION 179(6) OF THE COMPANIES ACT, CAP. 50.');
									$document->setValue('CONSENTNOTICEBLOCK', '<w:p w14:paraId="43EABBF5" w14:textId="77777777" w:rsidR="00331292" w:rsidRPr="004F513F" w:rsidRDefault="00331292" w:rsidP="00331292"><w:pPr><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>I, </w:t></w:r><w:r w:rsidR="002462A3" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.strtoupper($cop_rep_value[0]["name_of_corp_rep"]).'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">, the undersigned, being the duly Authorized Corporate Representative of </w:t></w:r><w:r w:rsidR="00AC33A0" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.strtoupper($cop_rep_value[0]["name"]).'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">, the holding Company beneficially entitled to the whole of the issued shares of </w:t></w:r><w:r w:rsidR="00AC33A0" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.$current_company_name.'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> and in attendance at the Annual General meeting of the company held on ${AGM date} at ${AGM time} hereby agreed: </w:t></w:r></w:p>');
									$document->setValue('MINUTESCONTENT', '<w:p w14:paraId="30D81828" w14:textId="77777777" w:rsidR="00746262" w:rsidRPr="0000721A" w:rsidRDefault="00746262" w:rsidP="00746262"><w:pPr><w:pStyle w:val="BodyText"/><w:ind w:rightChars="1" w:right="2"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">I, </w:t></w:r><w:r w:rsidR="002462A3" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.strtoupper($cop_rep_value[0]["name_of_corp_rep"]).'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">, the Corporate Representative of </w:t></w:r><w:r w:rsidR="00AC33A0" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.strtoupper($cop_rep_value[0]["name"]).'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>,  the holding Company  beneficially entitled to the whole of the issued shares of </w:t></w:r><w:r w:rsidR="00AC33A0" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> '.$current_company_name.'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> pursuant to Section 179(6) of the Companies Act, Cap. 50, hereby confirm that the Annual General Meeting of </w:t></w:r><w:r w:rsidR="00AC33A0" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.$current_company_name.'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> was deemed to be held on ${AGM date} and that the resolution required by the said Act or by the Company Constitution </w:t></w:r><w:r w:rsidR="00AC33A0" w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t>'.$current_company_name.'</w:t></w:r><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:b w:val="0"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve"> to be passed at the Annual General Meeting have been deemed to be passed as ordinary resolutions:-</w:t></w:r></w:p>');
									//$document->setValue('MINUTESPOSITION', 'Corporate Representative of '.strtoupper($cop_rep_value[0]["name"]));
									$corp_company_name = $this->transaction_word_model->getWordValue($transaction_master_id, "MINUTESPOSITION", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);
									$document->setValue('MINUTESPOSITION', 'Corporate Representative of '.strtoupper($corp_company_name));
									$document->setValue('LISTOFCONSENT', '<w:p w14:paraId="3E9AC746" w14:textId="77777777" w:rsidR="00331292" w:rsidRPr="004F513F" w:rsidRDefault="00331292" w:rsidP="00331292"><w:pPr><w:ind w:left="288" w:hanging="288"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">a)  to accept shorter notice of the said meeting than the period of notice prescribed by Section 177 (2) of the Companies Act, Cap. 50 and / or the Company’s Constitution; and</w:t></w:r></w:p><w:p w14:paraId="52DB8B0A" w14:textId="77777777" w:rsidR="00331292" w:rsidRPr="004F513F" w:rsidRDefault="00331292" w:rsidP="00331292"><w:pPr><w:ind w:left="288" w:hanging="288"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr></w:p><w:p w14:paraId="4B71EAD4" w14:textId="77777777" w:rsidR="00331292" w:rsidRPr="004F513F" w:rsidRDefault="00331292" w:rsidP="00331292"><w:pPr><w:ind w:left="288" w:hanging="288"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr></w:pPr><w:r w:rsidRPr="004F513F"><w:rPr><w:rFonts w:ascii="Arial" w:hAnsi="Arial" w:cs="Arial"/><w:sz w:val="21"/><w:szCs w:val="21"/></w:rPr><w:t xml:space="preserve">b)  waive the requirement and entitlement under Section 203 of the Companies Act, Cap. 50 to receive a copy of the audited financial statements for the year ended${Year end new} not less than 14 days of the date of the Annual General Meeting.</w:t></w:r></w:p>');
								}
								else
								{
									$document->setValue('MINUTESCONTENT', 'We, the undersigned, being all the ${member_word} hereby confirm that the Annual General Meeting of the Company ${pass_reso}');
									$document->setValue('member_word', "Members");
									$document->setValue('CONSENTNOTICEBLOCK', 'I/ We, the undersigned, being shareholders of the Company, hereby consent, pursuant to Section 177(3)(b) of the Companies Act Cap. 50, to the holding of the Annual General Meeting on ${AGM date} to the transaction of the business as detailed in the Notice convening the said Meeting, notwithstanding that less than the full prescribed Notice has been given.');
									$document->setValue('pass_reso', 'was deemed to be held on ${AGM date} at ${AGM time} and that the following resolutions were duly passed :-');
									$document->setValue('title minutes', 'MINUTES OF THE ANNUAL GENERAL MEETING HELD AT ${AGM Meeting Venue}');
									$document->setValue('MINUTESPOSITION', 'Chairman');
									$document->setValue('LISTOFCONSENT', '');
								}

								$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Year end new(big_cap)', $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new(big_cap)", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('Year end new', " " . $this->transaction_word_model->getWordValue($transaction_master_id, "Year end new", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('un/audited(big_cap)', $this->transaction_word_model->getWordValue($transaction_master_id, "un/audited(big_cap)", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('un/audited', $this->transaction_word_model->getWordValue($transaction_master_id, "un/audited", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("AGM Meeting Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("AGM Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("AGM date", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("AGM time", $this->transaction_word_model->getWordValue($transaction_master_id, "AGM time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

								$document->setValue("Underline AGM Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline AGM Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Underline AGM date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline AGM date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Underline AGM time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline AGM time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

								$document->setValue("Resolution Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Resolution Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('${_sing/plu s_(big_cap)}', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "sing/plu s", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue('${_sing/plu s_(small_cap)}', $this->transaction_word_model->getWordValue($transaction_master_id, "sing/plu s", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue('${is/are}', $this->transaction_word_model->getWordValue($transaction_master_id, "is/are", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
								$document->setValue("Display title type for board of director", $this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

								$document->setValue("Chairman", htmlspecialchars($chairman_name));
								$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("Director Signature 1's identification no", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1's identification no", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("tick full set", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "tick full set", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("tick highlight", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "tick highlight", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								$document->setValue("tick filing", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "tick filing", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
								// ${tick full set}
								// ${tick highlight}
								// ${tick filing}
								if($q[0]["document_name"] == "filing XBRL")
								{
									$document_number = "04.";
								}
								elseif($q[0]["document_name"] == "AGM - DRIW")
								{
									$document_number = "01.";
								}
								elseif($q[0]["document_name"] == "AGM - DRIW (Dormant)")
								{
									$document_number = "01.";
								}

			            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

								$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
					        }
					  //       elseif($q[0]["document_name"] == "AGM & AR - DRIW (Dormant)")
							// {
							// 	$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							// 	$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							// }
							//Microsoft Word End
						}

						$new_contents = $this->replaceToggle($transaction_master_id, $matches[0], $company_code, $q[0]["firm_id"], $new_contents_info, null, $q[0]["document_name"]);

						$content = $new_contents;

						// if($q[0]["document_name"] == "AGM & AR - Annual Return (Audit)")
						// {
						// 	//Microsoft Word
						// 	$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM & AR - Annual Return (Audit).docx");
						// 	//Microsoft Word End

						// 	$transaction_agm_ar = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

						// 	$transaction_agm_ar = $transaction_agm_ar->result_array();

						// 	if($transaction_agm_ar[0]['solvency_status'] == 2)
						// 	{
						// 		$document->replaceBlock("SOLVENTBLOCK", "");
		    //             	}
		    //             	else
		    //             	{
		    //             		$document->setValue("SOLVENTBLOCK", "");
		    //             		$document->setValue("/SOLVENTBLOCK", "");
		    //             	}
						// 	// for AGM & AR - Annual Return (EPC)
	     //        			$temp_content = '';

	     //        			if($transaction_agm_ar[0]["epc_status_id"] == 1)	// for yes
						// 	{
						// 		$temp_content = 'for the entire financial year concerned, the company had been an exempt private company at all relevant times as defined under Section 4(1) of the Companies Act by virtue of its being a private company of which no beneficial interest in its shares is held, directly or indirectly, by any corporation and having not more than 20 members;';
						// 	}
						// 	elseif($transaction_agm_ar[0]["epc_status_id"] == 2) 	// for no
						// 	{
						// 		$temp_content = 'the company is a private company and the number of its member is not more than 50 (counting joint holders of shares as one person and not counting any person in the employment of the company or of its subsidiary or any person who while previously in the employment of the company or of its subsidiary was and thereafter has continued to be a member of the company;';
						// 	}
						// 	elseif($transaction_agm_ar[0]["epc_status_id"] == 0)
						// 	{
						// 		$temp_content = "EPC IS NOT SELECTED.";
						// 	}

						// 	$document->setValue("AGM &amp; AR - EPC", $temp_content);

						// 	//Microsoft Word
						// 	$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						// 	$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						// 	$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						// 	$document->setValue("Director Signature 1's identification no", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1's identification no", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
						// 	$document->setValue("have been registered / have not been registered / have not taken place", $this->transaction_word_model->getWordValue($transaction_master_id, "have been registered / have not been registered / have not taken place", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						// 	$document->setValue("the last annual return / the incorporation of the company", $this->transaction_word_model->getWordValue($transaction_master_id, "the last annual return / the incorporation of the company", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						// 	$document->setValue("a duly audited / an unaudited profit", $this->transaction_word_model->getWordValue($transaction_master_id, "a duly audited / an unaudited profit", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
						// 	$document->setValue("annual general meeting / by way of a resolution", $this->transaction_word_model->getWordValue($transaction_master_id, "annual general meeting / by way of a resolution", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

						// 	$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

						// 	$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						// 	//Microsoft Word End
						// }

						if($q[0]["document_name"] == "AR document")//$q[0]["document_name"] == "AGM & AR - Annual Return" || 
						{
							//Microsoft Word
							if($q[0]["document_name"] == "AGM & AR - Annual Return")
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AGM & AR - Annual Return.docx");
							}
							else
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/AR document.docx");
							}
							//Microsoft Word End

							$transaction_agm_ar = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

							$transaction_agm_ar = $transaction_agm_ar->result_array();

		                	if($transaction_agm_ar[0]['solvency_status'] == 2)
							{
								if(strpos($content, '<li class="is_solvent"') !== false)
		                		{
		                			$content = str_replace('<li class="is_solvent" style="text-align: justify;">', '<li class="is_solvent" style="text-align: justify; display: none">', $content);
		                		}
		                		$document->replaceBlock("SOLVENTBLOCK", "");
		                	}
		                	else
		                	{
		                		$document->setValue("SOLVENTBLOCK", "");
		                		$document->setValue("/SOLVENTBLOCK", "");
		                	}

		                	if($transaction_agm_ar[0]['activity_status'] == 1)
							{
								if(strpos($content, '<li class="is_dormant"') !== false)
		                		{
		                			$content = str_replace('<li class="is_dormant" style="text-align: justify;">', '<li class="is_dormant" style="text-align: justify; display: none">', $content);
		                		}
		                		$document->replaceBlock("DORMANTBLOCK", "");
		                	}
		                	else
		                	{
		                		$document->setValue("DORMANTBLOCK", "");
		                		$document->setValue("/DORMANTBLOCK", "");
		                	}

		                	// for AGM & AR - Annual Return (EPC)
	            			$temp_content = '';

	            			if($transaction_agm_ar[0]["epc_status_id"] == 1)	// for yes
							{
								$temp_content = 'for the entire financial year concerned, the company had been an exempt private company at all relevant times as defined under Section 4(1) of the Companies Act by virtue of its being a private company of which no beneficial interest in its shares is held, directly or indirectly, by any corporation and having not more than 20 members;';
							}
							elseif($transaction_agm_ar[0]["epc_status_id"] == 2) 	// for no
							{
								$temp_content = 'the company is a private company and the number of its member is not more than 50 (counting joint holders of shares as one person and not counting any person in the employment of the company or of its subsidiary or any person who while previously in the employment of the company or of its subsidiary was and thereafter has continued to be a member of the company;';
							}
							elseif($transaction_agm_ar[0]["epc_status_id"] == 0)
							{
								$temp_content = "EPC IS NOT SELECTED.";
							}

							$document->setValue("AGM &amp; AR - EPC", $temp_content);

							if(strpos($content, '<span class="myclass mceNonEditable">{{AGM &amp; AR - EPC}}</span>') !== false)
	                		{
								$content = str_replace('<span class="myclass mceNonEditable">{{AGM &amp; AR - EPC}}</span>', $temp_content, $content);
	                		}
	                		//Microsoft Word
							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Director Signature 1's identification no", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1's identification no", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("have been registered / have not been registered / have not taken place", $this->transaction_word_model->getWordValue($transaction_master_id, "have been registered / have not been registered / have not taken place", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("the last annual return / the incorporation of the company", $this->transaction_word_model->getWordValue($transaction_master_id, "the last annual return / the incorporation of the company", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("a duly audited / an unaudited profit", $this->transaction_word_model->getWordValue($transaction_master_id, "a duly audited / an unaudited profit", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("annual general meeting / by way of a resolution", $this->transaction_word_model->getWordValue($transaction_master_id, "annual general meeting / by way of a resolution", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("from the date of incorporation / since the end of the previous financial year", $this->transaction_word_model->getWordValue($transaction_master_id, "from the date of incorporation / since the end of the previous financial year", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("not / exempt", $this->transaction_word_model->getWordValue($transaction_master_id, "not / exempt", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("not / considered", $this->transaction_word_model->getWordValue($transaction_master_id, "not / considered", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("where the register of controllers is kept", $this->transaction_word_model->getWordValue($transaction_master_id, "where the register of controllers is kept", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("where the register of nominee directors is kept", $this->transaction_word_model->getWordValue($transaction_master_id, "where the register of nominee directors is kept", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							
							if($transaction_agm_ar[0]['company_type'] != 2 && $transaction_agm_ar[0]['company_type'] != 5)
							{
		                		$document->cloneBlock('FORPRIVATECO', 0, true, true);
		                		$document->setValue("DELETEFORPRIVATECO", "");
		                		$document->setValue("/DELETEFORPRIVATECO", "");
		                	}
		                	else
		                	{
		                		$document->cloneBlock('DELETEFORPRIVATECO', 0, true, true);
		                		$document->setValue("FORPRIVATECO", "");
		                		$document->setValue("/FORPRIVATECO", "");
		                	}

							if($q[0]["document_name"] == "AR document")
							{
								$document_number = "03.";
							}

							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							//Microsoft Word End
						}

						if($q[0]["document_name"] == "Declaration For Controller")
						{
							//Microsoft Word
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration For Controller.docx");

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue('Director Signature 1', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Director Signature 1's identification no", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1's identification no", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

							$reg_controller_nominee = $this->db->query("SELECT transaction_agm_ar.register_of_controller, transaction_agm_ar.register_of_nominee_director, regis_controller_is_kept.cont_is_kept_at, regis_nominee_dir_is_kept.dir_is_kept_at, e1.exemption AS `cont_exemption`, e2.exemption AS `dir_exemption` FROM transaction_agm_ar 
																		LEFT JOIN regis_controller_is_kept ON regis_controller_is_kept.id = transaction_agm_ar.regis_controller_is_kept_id
																		LEFT JOIN regis_nominee_dir_is_kept ON regis_nominee_dir_is_kept.id = transaction_agm_ar.regis_nominee_dir_is_kept_id
	                                                                    LEFT JOIN exemption AS e1 ON e1.id = transaction_agm_ar.cont_exemption_id
	                                                                    LEFT JOIN exemption AS e2 ON e2.id = transaction_agm_ar.dir_exemption_id
																		WHERE transaction_agm_ar.transaction_id =" . $transaction_master_id . "");

							$reg_controller_nominee = $reg_controller_nominee->result_array();

							for($r = 0; $r < count($matches[0]); $r++)
							{
								$string1 = (str_replace('{{', '',$matches[0][$r]));
								$string2 = (str_replace('}}', '',$string1));
								
								$replace_string = $matches[0][$r];
								$temp_content = '________________________________';

								if($string2 == "Controller Exemption")
								{
									$temp_content = $reg_controller_nominee[0]['cont_exemption'];
									$content = str_replace($replace_string, strtolower($temp_content), $content);
								}
								elseif($string2 == "Directors Exemption")
								{
									$temp_content = $reg_controller_nominee[0]['dir_exemption'];
									$content = str_replace($replace_string, strtolower($temp_content), $content);
								}
								elseif($string2 == "register of controller is kept at")
								{
									$temp_content = $reg_controller_nominee[0]['cont_is_kept_at'];
									$content = str_replace($replace_string, $temp_content, $content);
								}
								elseif($string2 == "register of nominee directors")
								{
									$temp_content = $reg_controller_nominee[0]['dir_is_kept_at'];
									$content = str_replace($replace_string, $temp_content, $content);
								}
							}

							//Word
							if($reg_controller_nominee[0]['register_of_controller'] == "Exempted from the requirement to keep a register" || $reg_controller_nominee[0]['register_of_nominee_director'] == "Exempted from the requirement to keep a register")
							{
								$exemption = "Is exempted";
							}
							else
							{
								$exemption = "Is not exempted";
							}
							$document->setValue('Controller Exemption', strtolower($exemption));//$reg_controller_nominee[0]['cont_exemption']
							$document->setValue('Directors Exemption', strtolower($exemption));//$reg_controller_nominee[0]['dir_exemption']
							$document->setValue('register of controller is kept at', $reg_controller_nominee[0]['register_of_controller']);//cont_is_kept_at
							$document->setValue('register of nominee directors', $reg_controller_nominee[0]['register_of_nominee_director']);//dir_is_kept_at
							//End Word
							
							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
							//Microsoft Word End
						}

						if($q[0]["document_name"] == "Auditor-Shorter notice of EGM")
						{
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Auditor-Shorter notice of EGM.docx");

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Auditors Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Auditors Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Auditors Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Auditors Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Auditors Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));

							$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($get_member_info) > 0)
							{
								$document->cloneRow('Members name - all', count($get_member_info));

								for($g = 0; $g < count($get_member_info); $g++)
			                	{
			                		if($get_member_info[$g]["name"] != null)
			                		{
			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Title Identity Number#'.($g+1), "");
			                			$document->setValue('Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Identity Number#'.($g+1), "");
			                		}
			                		elseif($get_member_info[$g]["company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			                		}
			                		elseif($get_member_info[$g]["client_company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			                		}
			                	}
							}
							else
							{
								$document->setValue('Members name - all', '');
							}

		            		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
						}

						if($q[0]["document_name"] == "DRIW-Change of name of company")
						{
							//Microsoft Word
							if($q[0]["document_category_id"] == 1)
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/EGM - Change of company name.docx");
							}
							else if($q[0]["document_category_id"] == 2)
							{
								$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Change company name.docx");
							}

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue('Display title type for board of director', strtoupper($this->transaction_word_model->getWordValue($transaction_master_id, "Display title type for board of director", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Directors' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Directors' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Chairman", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Chairman", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Company old name",  htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company old name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Company new name",  htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company new name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

							$director_name_all = $this->transaction_word_model->getWordValue($transaction_master_id, "Directors name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($director_name_all) > 0)
							{
								for($g = 0; $g < 1; $g++)
			                	{
									$document->cloneRow('Directors name - all', count($director_name_all));
								}

								for($g = 0; $g < count($director_name_all); $g++)
			                	{
			                		$document->setValue('Directors name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($director_name_all[$g]["name"])));
			                	}
							}
							else
							{
								$document->setValue('Directors name - all', '');
							}	

							$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($get_member_info) > 0)
							{
								$document->cloneRow('Members name - all', count($get_member_info));
								if($q[0]["document_category_id"] == 2)
								{
									$document->cloneRow('Member names - all', count($get_member_info));
								}

								for($g = 0; $g < count($get_member_info); $g++)
			                	{
			                		if($get_member_info[$g]["name"] != null)
			                		{
										$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Title Identity Number#'.($g+1), "");
			                			$document->setValue('Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Identity Number#'.($g+1), "");

										if($q[0]["document_category_id"] == 2)
										{
											$document->setValue('Member names - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
											$document->setValue('Corp Rep of Name#'.($g+1), "");
										}
			                		}
			                		elseif($get_member_info[$g]["company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));

			                			if($q[0]["document_category_id"] == 2)
										{
				                			$document->setValue('Member names - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
				                			$document->setValue('Corp Rep of Name#'.($g+1), "(Corporate Representative of ". htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])).")");
				                		}
			                		}
			                		elseif($get_member_info[$g]["client_company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));

			                			if($q[0]["document_category_id"] == 2)
										{
				                			$document->setValue('Member names - all#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
											$document->setValue('Corp Rep of Name#'.($g+1), htmlspecialchars(htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"]))));
										}
			                		}
			                	}
							}
							else
							{
								$document->setValue('Members name - all', '');
							}

							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
				            //Microsoft Word End
						}

						if($q[0]["document_name"] == "Company Name-Shorter notice of EGM")
						{
							//Microsoft Word
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Shorter notice of EGM.docx");

							$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company old name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Members' Meeting Time", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Members' Meeting Time", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Underline Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Underline Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Members' Meeting Date", $this->transaction_word_model->getWordValue($transaction_master_id, "Members' Meeting Date", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							
							$get_member_info = $this->transaction_word_model->getWordValue($transaction_master_id, "Members name - all", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]);

							if(count($get_member_info) > 0)
							{
								$document->cloneRow('Members name - all', count($get_member_info));

								for($g = 0; $g < count($get_member_info); $g++)
			                	{
			                		if($get_member_info[$g]["name"] != null)
			                		{
			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Title Identity Number#'.($g+1), "");
			                			$document->setValue('Corp Rep Name#'.($g+1), "");
			                			$document->setValue('Identity Number#'.($g+1), "");
			                		}
			                		elseif($get_member_info[$g]["company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			                		}
			                		elseif($get_member_info[$g]["client_company_name"] != null)
			                		{
			                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_info[$g]["client_registration_no"]).'" and corporate_representative.subsidiary_name = "'.$this->encryption->decrypt($get_member_info[$g]["tr_client_company_name"]).'"');

			                			$get_corp_rep_info = $get_corp_rep_info->result_array();

			                			$document->setValue('Members name - all#'.($g+1), htmlspecialchars($this->encryption->decrypt($get_member_info[$g]["client_company_name"])));
			                			$document->setValue('Title Corp Rep Name#'.($g+1), "Corporate Representative Name:");
			                			$document->setValue('Title Identity Number#'.($g+1), "Corporate Representative Identification No:");
			                			$document->setValue('Corp Rep Name#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["name_of_corp_rep"]));
			                			$document->setValue('Identity Number#'.($g+1), htmlspecialchars($get_corp_rep_info[0]["identity_number"]));
			                		}
			                	}
							}
							else
							{
								$document->setValue('Members name - all', '');
							}

							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
				            //Microsoft Word End
						}

						if($q[0]["document_name"] == "Form 11")
						{
							//Microsoft Word
							$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Form 11.docx");
							$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Meeting's Venue", $this->transaction_word_model->getWordValue($transaction_master_id, "Meeting's Venue", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Company old name",  htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company old name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Company new name",  htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company new name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Firm Name",  htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Name", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Firm Address", $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"]));
							$document->setValue("Firm Tel", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Tel", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Firm Fax", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Fax", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));
							$document->setValue("Director Signature 1", htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Director Signature 1", $company_code, $q[0]["firm_id"], null, $q[0]["document_name"])));

							$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');

							$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.docx');
				            //Microsoft Word End
						}

						$break_page_needed = FALSE;

						if($q[0]["document_name"] == "AGM & AR - DRIW")
						{
							if(!$exemption_template == '' && !$retire_paragraph == '')
							{
								$break_page_needed = TRUE;
							}
						}

						// $result = $this->break_page_or_not($obj_pdf, $content, '220', $q[0]["document_name"], $break_page_needed);
						
						// $content = $this->end_of_resol_page_break($obj_pdf, $result['content']);

						// $obj_pdf->writeHTML($content, true, false, false, false, '');
						//Generate PDF (Hide from 14/4/2020)
						// $obj_pdf->Output($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf', 'F');

						// if(!file_exists($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf'))
		    // 			{
					 //        echo "File Doesn't Exist...";exit;
					 //    }

						// $this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$q[0]["document_name"].' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($client_query[0]["company_name"])).'.pdf');
						

						$data['transaction_id'] = $transaction_master_id;
						$data['type'] = "trans"; 
						$data['client_id'] = $client_query[0]["id"];
						$data['firm_id'] = $q[0]["firm_id"];
						$data['document_name'] = $q[0]["document_name"].' - '.$client_query[0]["company_name"];
						$data['triggered_by'] = 1;
						$data['document_date_checkbox'] = 1;
						$data['transaction_date'] = DATE("d/m/Y",now());
						$data['content'] = $content;
	            		$data['created_by']=$this->session->userdata('user_id');

	            		$this->save_incorporate_pdf($data);
					}
				}
			}

			$string_client_name = $this->myUrlEncode($client_query[0]["company_name"]);
			$this->zip->archive($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$transaction_task_name.' ('.(DATE("Y",now())) .') - '. $string_client_name.'.zip');

			chmod($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$transaction_task_name.' ('.(DATE("Y",now())) .') - '. $string_client_name.'.zip',0644);

			//$protocol = strtolower(substr($_SERVER["SERVER_PROTOCOL"],0,5))=='https://'?'https://':'http://';
			//$protocol = 'http://';
			$protocol = isset($_SERVER["HTTPS"]) ? 'https://' : 'http://';
			$link = $protocol . $_SERVER['SERVER_NAME'] .'/'.$this->systemName.'/pdf/document/'.$transaction_task_name.' ('.(DATE("Y",now())) .') - '. $string_client_name.'.zip';

			$data = array('status'=>'success', 'zip_link'=>$link);

			$this->save_audit_trail("Services", $transaction_task_name, "Document is generated.");

	    	echo json_encode($data);
		}
	}

	public function save_audit_trail($modules, $events, $actions)
    {
        $secretary_audit_trail["user_id"] = $this->session->userdata("user_id");
        $secretary_audit_trail["modules"] = $modules;
        $secretary_audit_trail["events"] = $events;
        $secretary_audit_trail["actions"] = $actions;

        $this->db->insert("secretary_audit_trail",$secretary_audit_trail);
    }
    
	public function replaceToggle($transaction_master_id, $match, $company_code, $firm_id, $new_contents, $id = null, $document_name = null, $value = null)
   	{	         	
   		$content = "";

   		if(count($match) != 0)
   		{
	   		for($r = 0; $r < count($match); $r++)
			{
				$string1 = (str_replace('{{', '',$match[$r]));
				$string2 = (str_replace('}}', '',$string1));

				if($string2 == "Company current name")
				{
					$replace_string = $match[$r];

					$get_client_name = $this->db->query("select company_name from transaction_client where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");

					$get_client_name = $get_client_name->result_array();
					
					if(0 == count($get_client_name))
					{
						$get_client_name = $this->db->query("select company_name from client where company_code='".$company_code."' AND client.deleted != 1");

						$get_client_name = $get_client_name->result_array();
					}

					$content = $this->encryption->decrypt($get_client_name[0]["company_name"]);
				}
				elseif($string2 == "effective_date" || $string2 == "underline_effective_date")
				{
					$replace_string = $match[$r];

					$get_master_info = $this->db->query("select effective_date from transaction_master where company_code='".$company_code."' AND id = '".$transaction_master_id."'");

					$get_master_info = $get_master_info->result_array();

					if(count($get_master_info) > 0)
					{
						if($get_master_info[0]["effective_date"] != "")
						{
							$content = $get_master_info[0]["effective_date"];
						}
						else
						{
							if($string2 == "underline_effective_date")
							{
								$content = '________________';
							}
							else
							{
								$content = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
							}
						}
					}
				}
				elseif($string2 == "Company old name")
				{
					$replace_string = $match[$r];

					$get_company_name = $this->db->query("select company_name from transaction_change_company_name where transaction_id='".$transaction_master_id."'");

					$get_company_name = $get_company_name->result_array();

					$content = $get_company_name[0]["company_name"];
				}
				elseif($string2 == "Company new name")
				{
					$replace_string = $match[$r];

					$get_new_company_name = $this->db->query("select new_company_name from transaction_change_company_name where transaction_id='".$transaction_master_id."'");

					$get_new_company_name = $get_new_company_name->result_array();

					$content = $get_new_company_name[0]["new_company_name"];
				}
				elseif($string2 == "UEN" || $string2 == "underline_UEN")
				{
					$replace_string = $match[$r];

					$get_client_registration_no = $this->db->query("select registration_no from transaction_client where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");

					$get_client_registration_no = $get_client_registration_no->result_array();

					if(0 == count($get_client_registration_no))
					{
						$get_client_registration_no = $this->db->query("select registration_no from client where company_code='".$company_code."' AND client.deleted != 1");

						$get_client_registration_no = $get_client_registration_no->result_array();
					}

					if($get_client_registration_no[0]["registration_no"] != null)
					{
						$content = $this->encryption->decrypt($get_client_registration_no[0]["registration_no"]);
					}
					else
					{
						$get_master_info = $this->db->query("select registration_no from transaction_master where company_code='".$company_code."' AND id = '".$transaction_master_id."'");

						$get_master_info = $get_master_info->result_array();

						if(count($get_master_info) > 0)
						{
							if($get_master_info[0]["registration_no"] != null)
							{
								$content = $this->encryption->decrypt($get_master_info[0]["registration_no"]);
							}
							else
							{
								if($string2 == "underline_UEN")
								{
									$content = '________________';
								}
								else
								{
									$content = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
								}
							}
						}
						
					}
				}
				elseif($string2 == "Company type")
				{	
					$replace_string = $match[$r];

					$get_client_company_type = $this->db->query("select company_type.company_type as company_type_name from client left join company_type on company_type.id = client.company_type where company_code='".$company_code."' AND client.deleted != 1");

					$get_client_company_type = $get_client_company_type->result_array();

					$content = $get_client_company_type[0]["company_type_name"];
				}
				elseif($string2 == "Incorporation date")
				{
					$replace_string = $match[$r];

					$get_client_incorporation_date = $this->db->query("select incorporation_date from client where company_code='".$company_code."' AND client.deleted != 1");

					$get_client_incorporation_date = $get_client_incorporation_date->result_array();

					if($document_name == "Form 45" || $document_name == "Form 45B")
					{
						$get_transaction_master = $this->db->query("select transaction_task_id from transaction_master where id = '".$transaction_master_id."'");

						$get_transaction_master = $get_transaction_master->result_array();

						if($get_transaction_master[0]["transaction_task_id"] == 1)
						{
							$content = '<strong><span style="text-decoration: underline;">&nbsp; date of incorporation&nbsp;&nbsp;</span></strong>';
						}
						else
						{
							$content = '______________________';
						}
					}
					else
					{
						$content = $get_client_incorporation_date[0]["incorporation_date"];
					}
					
				}
				elseif($string2 == "Secretarys name - appointment")
				{
					$replace_string = $match[$r];

					if($document_name == "First Director Resolutions (One)" || $document_name == "First Director Resolutions (Many)" || $document_name == "{{Secretarys name - appointment}}")
					{
						$get_secretarys = $this->db->query("select officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position=4");

						$get_secretarys = $get_secretarys->result_array();

						for($j = 0; $j < count($get_secretarys); $j++)
						{
							if($j == 0)
							{
								$secretary_name = $this->encryption->decrypt($get_secretarys[$j]["name"])." (Identification No: ".$this->encryption->decrypt($get_secretarys[$j]["identification_no"]).")";
							}
							elseif($j == (count($get_secretarys)-1))
							{
								$secretary_name = $secretary_name." and ".$this->encryption->decrypt($get_secretarys[$j]["name"])." (Identification No: ".$this->encryption->decrypt($get_secretarys[$j]["identification_no"]).")";
							}
							else
							{
								$secretary_name = $secretary_name.", ".$this->encryption->decrypt($get_secretarys[$j]["name"])." (Identification No: ".$this->encryption->decrypt($get_secretarys[$j]["identification_no"]).")";
							}
						}
						$content = $secretary_name;
						//echo json_encode($get_secretarys);
					}
					else
					{
						$get_secretarys = $this->db->query("select officer.name, officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position=4 AND transaction_client_officers.id='".$id."'");

						$get_secretarys = $get_secretarys->result_array();

						$content = $this->encryption->decrypt($get_secretarys[0]["name"]);
					}
				}
				elseif($string2 == "Secretarys ID - appointment")
				{
					$replace_string = $match[$r];

					$get_secretarys_ID = $this->db->query("select officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position=4 AND transaction_client_officers.id='".$id."'");

					$get_secretarys_ID = $get_secretarys_ID->result_array();

					$content = $this->encryption->decrypt($get_secretarys_ID[0]["identification_no"]);
				}
				elseif($string2 == "Secretarys address - appointment")
				{
					$replace_string = $match[$r];
					$secretary_address_type = 'Local';
					$foreign_address1 = "";
					$foreign_address2 = "";
					$foreign_address3 = "";

					$get_secretarys_address = $this->db->query("SELECT officer.* from transaction_client_officers LEFT JOIN officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type WHERE transaction_client_officers.position=4 AND transaction_client_officers.id=".$id);

					$get_secretarys_address = $get_secretarys_address->result_array();

					if($get_secretarys_address[0]["alternate_address"] == "1")
					{
						$secretary_unit_no1 = $get_secretarys_address[0]["unit_no3"];
						$secretary_unit_no2 = $get_secretarys_address[0]["unit_no4"];
						$secretary_street_name = $get_secretarys_address[0]["street_name2"];
						$secretary_building_name = $get_secretarys_address[0]["building_name2"];
						$secretary_postal_code = $get_secretarys_address[0]["postal_code2"];
					}
					else
					{
						$secretary_address_type = $get_secretarys_address[0]['address_type'];
						$secretary_unit_no1 = $get_secretarys_address[0]["unit_no1"];
						$secretary_unit_no2 = $get_secretarys_address[0]["unit_no2"];
						$secretary_street_name = $get_secretarys_address[0]["street_name1"];
						$secretary_building_name = $get_secretarys_address[0]["building_name1"];
						$secretary_postal_code = $get_secretarys_address[0]["postal_code1"];
						$foreign_address1 = $get_secretarys_address[0]["foreign_address1"];
						$foreign_address2 = $get_secretarys_address[0]["foreign_address2"];
						$foreign_address3 = $get_secretarys_address[0]["foreign_address3"];
					}
					
					$address = array(
						'type' 			=> $secretary_address_type,
						'street_name1' 	=> $secretary_street_name,
						'unit_no1'		=> $secretary_unit_no1,
						'unit_no2'		=> $secretary_unit_no2,
						'building_name1'=> $secretary_building_name,
						'postal_code1'	=> $secretary_postal_code,
						'foreign_address1' => $foreign_address1,
						'foreign_address2' => $foreign_address2,
						'foreign_address3' => $foreign_address3
					);

					if($document_name == "Ltr of Indemnity")
					{
						$address = $this->write_address_local_foreign($address, "letter", "big_cap");
					}
					else
					{
						$address = $this->write_address_local_foreign($address, "comma", "big_cap");
					}

					$content = $address;
				}
				elseif($string2 == "Secretarys nationality - appointment")
				{
					$replace_string = $match[$r];

					$get_secretarys_nationality = $this->db->query("select nationality.nationality as nationality_name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join nationality on nationality.id = officer.nationality where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position=4 AND transaction_client_officers.id='".$id."'");

					$get_secretarys_nationality = $get_secretarys_nationality->result_array();

					$content = $get_secretarys_nationality[0]["nationality_name"];
				}
				elseif($string2 == "Directors name - appointment")
				{
					$replace_string = $match[$r];

					if($document_name == "Letter of Authorisation")
					{
						$get_directors = $this->db->query("select officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1");

						$get_directors = $get_directors->result_array();
					}
					else
					{
						$get_directors = $this->db->query("select officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8) AND transaction_client_officers.id='".$id."'");

						$get_directors = $get_directors->result_array();
					}

					$content = $this->encryption->decrypt($get_directors[0]["name"]);
				}
				elseif($string2 == "Directors address - appointment")
				{
					$replace_string = $match[$r];

					$get_directors_address = $this->db->query("select officer.* from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8) AND transaction_client_officers.id='".$id."'");

					$get_directors_address = $get_directors_address->result_array();

					if($get_directors_address[0]["alternate_address"] == "1")
					{
						$director_unit_no1 = $get_directors_address[0]["unit_no3"];
						$director_unit_no2 = $get_directors_address[0]["unit_no4"];
						$director_street_name = $get_directors_address[0]["street_name2"];
						$director_building_name = $get_directors_address[0]["building_name2"];
						$director_postal_code = $get_directors_address[0]["postal_code2"];
					}
					else
					{
						$director_unit_no1 = $get_directors_address[0]["unit_no1"];
						$director_unit_no2 = $get_directors_address[0]["unit_no2"];
						$director_street_name = $get_directors_address[0]["street_name1"];
						$director_building_name = $get_directors_address[0]["building_name1"];
						$director_postal_code = $get_directors_address[0]["postal_code1"];
					}

					$address = array(
						'type' 			=> $get_directors_address[0]['address_type'],
						'street_name1' 	=> $director_street_name,
						'unit_no1'		=> $director_unit_no1,
						'unit_no2'		=> $director_unit_no2,
						'building_name1'=> $director_building_name,
						'postal_code1'	=> $director_postal_code,
						'foreign_address1' => $get_directors_address[0]["foreign_address1"],
						'foreign_address2' => $get_directors_address[0]["foreign_address2"],
						'foreign_address3' => $get_directors_address[0]["foreign_address3"]
					);

					$address = $this->write_address_local_foreign($address, "comma", "big_cap");

					$content = $address;
				}
				elseif($string2 == "Directors ID - appointment")
				{
					$replace_string = $match[$r];

					$get_directors_ID = $this->db->query("select officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8) AND transaction_client_officers.id='".$id."'");

					$get_directors_ID = $get_directors_ID->result_array();

					$content = $this->encryption->decrypt($get_directors_ID[0]["identification_no"]);
				}
				elseif($string2 == "Directors nationality - appointment")
				{
					$replace_string = $match[$r];

					$get_directors_nationality = $this->db->query("select nationality.nationality as nationality_name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type left join nationality on nationality.id = officer.nationality where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND (transaction_client_officers.position = 1 OR transaction_client_officers.position = 8) AND transaction_client_officers.id='".$id."'");

					$get_directors_nationality = $get_directors_nationality->result_array();

					$content = $get_directors_nationality[0]["nationality_name"];
				}
				elseif($string2 == "Display title type for board of director" || $string2 == "Display board of director - content" || $string2 == "Display All members of the")
				{
					$replace_string = $match[$r];

					$count_director = 1;
					$content = "";

					if($document_name == "DRIW-Appt of Director" || $document_name == "DRIW-Change of Reg Ofis" || $document_name == "DRIW - Resignation of Director" || $document_name == "DRIW-Appt of Auditor" || $document_name == "DRIW - Resignation Of Auditor" || $document_name == "DRIW - Change of Auditor" || $document_name == "DRIW-Change of name of company" || $document_name == "DRIW-Allotment of Shares" || $document_name == "Allotment-Authority to EGM" || $document_name == "DRIW - Transfer of Shares" || $document_name == "AGM & AR - DRIW" || $document_name == "DRIW-Change of FYE" || $document_name == "DRIW-Change Biz Activity" || $document_name == "DRIW-Dividends" || $document_name == "DRIW-Incorp of subsidiary" || $document_name = "Subsidiary-Cert of Appt Company Representative" || $document_name == "DRIW-Issue Director Fee & EGM" || $document_name == "Director Fee-Notice Of EGM" || $document_name == "Director Fee-Minutes Of EGM" || $document_name == "01 Letter of Authorisation" || $document_name == "Letter of Appointment" || $document_name == "Auditor-Notice of EGM" || $document_name == "Company Name-Notice of EGM" || $document_name == "Form 11")
					{
						$director = "";

						$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

						$get_directors = $get_directors->result_array();

						$count_director = count($get_directors);
					}

					if($count_director == 1)
					{
						if($string2 == "Display title type for board of director")
						{
							$content = 'SOLE DIRECTOR';
						}
						elseif($string2 == "Display board of director - content")
						{
							if($document_name == "DRIW-Issue Director Fee & EGM")
							{
								$content = 'SOLE DIRECTOR';
							}
							else
							{
								$content = 'sole director';
							}
						}
						elseif($string2 == "Display All members of the")	// Display words of "All members of the " before board of director
						{
							$content = 'The ';
						}

						$new_contents = $this->replace_verbs_plural($new_contents, $count_director);
					}
					elseif($count_director == 2)
					{
						if($string2 == "Display title type for board of director")
						{
							$content = 'THE BOARD OF DIRECTORS';
						}
						elseif($string2 == "Display board of director - content")
						{
							if($document_name == "DRIW-Issue Director Fee & EGM")
							{
								$content = 'BOARD OF DIRECTORS';
							}
							else
							{
								$content = 'board of directors';
							}
						}
						elseif($string2 == "Display All members of the")	// Display words of "All members of the " before board of director
						{
							$content = "All members of the ";
						}

						$new_contents = $this->replace_verbs_plural($new_contents, $count_director);
					}
					elseif($count_director > 2)
					{
						if($string2 == "Display title type for board of director")
						{
							$content = 'ON BEHALF OF THE BOARD OF DIRECTORS';
						}
						elseif($string2 == "Display board of director - content")
						{
							if($document_name == "DRIW-Issue Director Fee & EGM")
							{
								$content = 'BOARD OF DIRECTORS';
							}
							else
							{
								$content = 'board of directors';
							}
						}
						elseif($string2 == "Display All members of the") // Display words of "All members of the " before board of director
						{
							$content = "All members of the ";
						}

						$new_contents = $this->replace_verbs_plural($new_contents, $count_director);
					}
				}
				elseif($string2 == "All Director info with signature")
				{
					$replace_string = $match[$r];
					$director = "";
					$content = '';

					$get_directors_info_with_signature = $this->db->query("select officer.* from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.date_of_appointment =''");

					$get_directors_info_with_signature = $get_directors_info_with_signature->result_array();

					if(count($get_directors_info_with_signature) > 0)
					{
						for($i = 0; $i < count($get_directors_info_with_signature); $i++)
						{	
							$director = $director."<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>Name: ".$get_directors_info_with_signature[$i]["name"]."<br/>Identification No: ".$get_directors_info_with_signature[$i]["identification_no"]."<br/>Date:";
						}
					}

					$content = $director;
				}
				elseif($string2 == "All Director info without signature")
				{
					$replace_string = $match[$r];
					$director = "";
					$content = '';

					$get_directors_info_with_address = $this->db->query("select officer.* from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.date_of_appointment =''");

					$get_directors_info_with_address = $get_directors_info_with_address->result_array();

					if(count($get_directors_info_with_address) > 0)
					{
						for($i = 0; $i < count($get_directors_info_with_address); $i++)
						{	

							if($get_directors_info_with_address[$i]["alternate_address"] == "1")
							{
								$director_unit_no1 = $get_directors_info_with_address[$i]["unit_no3"];
								$director_unit_no2 = $get_directors_info_with_address[$i]["unit_no4"];
								$director_street_name = $get_directors_info_with_address[$i]["street_name2"];
								$director_building_name = $get_directors_info_with_address[$i]["building_name2"];
								$director_postal_code = $get_directors_info_with_address[$i]["postal_code2"];
							}
							else
							{
								$director_unit_no1 = $get_directors_info_with_address[$i]["unit_no1"];
								$director_unit_no2 = $get_directors_info_with_address[$i]["unit_no2"];
								$director_street_name = $get_directors_info_with_address[$i]["street_name1"];
								$director_building_name = $get_directors_info_with_address[$i]["building_name1"];
								$director_postal_code = $get_directors_info_with_address[$i]["postal_code1"];
							}

							if($get_directors_info_with_address[$i]['address_type'] == "Local")
							{
								if($director_unit_no1 != "" || $director_unit_no2 != "")
								{
									$client_unit = ' #'.$director_unit_no1 .' - '.$director_unit_no2;
								}
								else
								{
									$client_unit = "";
								}

								if($director_building_name != "")
								{
									$members_building_name_1 = ' '.$director_building_name;
								}
								else
								{
									$members_building_name_1 = '';
								}

								$offis_address_content = $director_street_name.',<br/>'.$client_unit.''.$members_building_name_1.',<br/>SINGAPORE '.$director_postal_code;

								
							}
							else if($get_directors_info_with_address[$i]['address_type'] == "Foreign")
							{
								$foreign_address1 = !empty($get_directors_info_with_address[$i]["foreign_address1"])?$get_directors_info_with_address[$i]["foreign_address1"]: '';
								$foreign_address2 = !empty($get_directors_info_with_address[$i]["foreign_address2"])?',<br/>'.$get_directors_info_with_address[$i]["foreign_address2"]: '';
								$foreign_address3 = !empty($get_directors_info_with_address[$i]["foreign_address3"])?',<br/>'.$get_directors_info_with_address[$i]["foreign_address3"]: '';

								$offis_address_content = $foreign_address1.$foreign_address2.$foreign_address3;
							}

							if($i == 0)
							{
								$director = $director."<strong>".$get_directors_info_with_address[$i]["name"]." (Identification No: ".$get_directors_info_with_address[$i]["identification_no"].")</strong><br />".ucwords(strtolower($offis_address_content));
							}
							else
							{
								$director = $director."<p><u>AND</u></p><strong>".$get_directors_info_with_address[$i]["name"]." (Identification No: ".$get_directors_info_with_address[$i]["identification_no"].")</strong><br />".ucwords(strtolower($offis_address_content));
							}

						}
					}

					$content = $director;
				}
				elseif($string2 == "Directors name - all")
				{
					$replace_string = $match[$r];
					$director = "";
					$content = '';

					$temp_document_name = $document_name;	// due to $document_name will change to 1 after if condition, therefore we use this to avoid the problem

					if($document_name == "DRIW-Appt of Director" || $document_name == "DRIW-Change of Reg Ofis" || $document_name == "DRIW - Resignation of Director" || $document_name == "DRIW-Appt of Auditor" || $document_name == "DRIW - Resignation Of Auditor" || $document_name == "DRIW - Change of Auditor" || $document_name == "DRIW-Change of name of company" || $document_name == "DRIW-Allotment of Shares" || $document_name == "Allotment-Authority to EGM" || $document_name == "DRIW - Transfer of Shares" || $document_name == "AGM & AR - DRIW" || $document_name == "DRIW-Change of FYE" || $document_name == "DRIW-Change Biz Activity" || $document_name == "DRIW-Dividends" || $document_name == "DRIW-Incorp of subsidiary" || $document_name = "Subsidiary-Cert of Appt Company Representative" || $document_name == "DRIW-Issue Director Fee & EGM" || $document_name == "Director Fee-Notice Of EGM" || $document_name == "Director Fee-Minutes Of EGM" || $document_name == "01 Letter of Authorisation" || $document_name == "Letter of Appointment")
					{
						$director = "";

						$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

						$get_directors = $get_directors->result_array();

						if($temp_document_name == "01 Letter of Authorisation")
						{
							for($i = 0; $i < count($get_directors); $i++)
							{	
								if($i == 0)
								{
									$director = "<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>".$this->encryption->decrypt($get_directors[$i]["name"])."<br/>Director<br/>Date:";
								}
								else
								{
									$director = $director."<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>".$this->encryption->decrypt($get_directors[$i]["name"])."<br/>Director<br/>Date:";

								}
							}
						}
						else if($temp_document_name == "AGM & AR - Notice for AGM")
						{
							for($i = 0; $i < count($get_directors); $i++)
							{	
								if($i == 0)
								{
									$director = $this->encryption->decrypt($get_directors[$i]["name"]);
								}
								else if($i == count($get_directors) - 1)
								{
									$director = $director . ' and ' . $this->encryption->decrypt($get_directors[$i]["name"]);
								}
								else
								{	
									$director = $director . ', ' . $this->encryption->decrypt($get_directors[$i]["name"]);
								}
							}
						}
						elseif($temp_document_name == "AGM & AR - DRIW")
						{
							$director = '<table style="width: 100%; border-collapse: collapse;"><tbody>';

							for($i = 0; $i < count($get_directors); $i++)
							{	
								if($i == 0)
								{
									$director = $director . '<tr style="height: 89px;"><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p>'.$this->encryption->decrypt($get_directors[$i]["name"]).'</p></td><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p> _______________________________</p></td></tr>';
								}
								else
								{
									$director = $director . '<tr style="height: 89px;"><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p>'.$this->encryption->decrypt($get_directors[$i]["name"]).'</p></td><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p> _______________________________</p></td></tr>';

								}
							}

							$director = $director.'</tbody></table>';
						}
						else{
							for($i = 0; $i < count($get_directors); $i++)
							{	
								if($i == 0)
								{
									$director = "<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>".$this->encryption->decrypt($get_directors[$i]["name"]);
								}
								else
								{
									$director = $director."<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>".$this->encryption->decrypt($get_directors[$i]["name"]);

								}
							}
						}
						
						// loop
						if($document_name == "DRIW - Resignation of Director" || $document_name == "Letter of Appointment")
						{
							$get_resign_directors = $this->db->query("select officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.date_of_appointment =''");

							$get_resign_directors = $get_resign_directors->result_array();

							if(count($get_resign_directors) > 0)
							{
								for($i = 0; $i < count($get_resign_directors); $i++)
								{	

									$director = $director."<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>".$this->encryption->decrypt($get_resign_directors[$i]["name"]);

									if($document_name == "Letter of Appointment"){
										$director .= "<br/>Director";
									}
								}
							}
						}
					}
					elseif($document_name == "Auditor-Notice of EGM" || $document_name == "Company Name-Notice of EGM")
					{
						$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

						$get_directors = $get_directors->result_array();

						$director = "<p>&nbsp;</p><p>&nbsp;</p>________________________________<br/>".$this->encryption->decrypt($get_directors[0]["name"]);
					}
					elseif($document_name == "Form 11")
					{
						$get_directors = $this->db->query("select officer.name from client_officers left join officer on client_officers.officer_id = officer.id AND client_officers.field_type = officer.field_type where client_officers.company_code='".$company_code."' AND client_officers.date_of_cessation = '' AND client_officers.position = 1");

						$get_directors = $get_directors->result_array();

						$director = $this->encryption->decrypt($get_directors[0]["name"]);
					}
					
					$content = $director;
				}
				elseif($string2 == "Directors name - resigning")
				{
					$replace_string = $match[$r];

					$get_directors = $this->db->query("select officer.name from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.id='".$id."'");

					$get_directors = $get_directors->result_array();

					$content = $this->encryption->decrypt($get_directors[0]["name"]);
				}
				elseif($string2 == "Directors ID - resigning")
				{
					$replace_string = $match[$r];

					$get_directors_ID = $this->db->query("select officer.identification_no from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.id='".$id."'");

					$get_directors_ID = $get_directors_ID->result_array();

					$content = $this->encryption->decrypt($get_directors_ID[0]["identification_no"]);
				}
				elseif($string2 == "Directors address - resigning")
				{
					$replace_string = $match[$r];

					$get_directors_address = $this->db->query("select officer.postal_code1, officer.street_name1, officer.building_name1, officer.unit_no1, officer.unit_no2 from transaction_client_officers left join officer on transaction_client_officers.officer_id = officer.id AND transaction_client_officers.field_type = officer.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.position = 1 AND transaction_client_officers.id='".$id."'");

					$get_directors_address = $get_directors_address->result_array();

					if($get_directors_address[0]["unit_no1"] != " " || $get_directors_address[0]["unit_no2"] != " ")
					{
						$unit_no = '<br/> #'.$get_directors_address[0]["unit_no1"].' - '.$get_directors_address[0]["unit_no2"];
					}

					if($get_directors_address[0]["building_name1"] != "")
					{
						$building_name = '<br/>'.$get_directors_address[0]["building_name1"];
					}

					$address = $get_directors_address[0]["street_name1"].''.$unit_no.''.$building_name.'<br/>SINGAPORE '.$get_directors_address[0]["postal_code1"];

					$content = $address;
				}
				elseif($string2 == "Auditors ID - resigning")
				{
					$replace_string = $match[$r];

					$get_auditor_id = $this->db->query("select officer_company.register_no from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment != '' AND transaction_client_officers.position = 5 AND transaction_client_officers.id='".$id."'");

					$get_auditor_id = $get_auditor_id->result_array();

					$content = $this->encryption->decrypt($get_auditor_id[0]["register_no"]);
				}
				elseif($string2 == "Auditors name - resigning")
				{
					$replace_string = $match[$r];

					$get_auditor_name = $this->db->query("select officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment != '' AND transaction_client_officers.position = 5 AND transaction_client_officers.id='".$id."'");

					$get_auditor_name = $get_auditor_name->result_array();

					$content = $this->encryption->decrypt($get_auditor_name[0]["company_name"]);
				}
				elseif($string2 == "Auditors ID - appointment")
				{
					$replace_string = $match[$r];

					$get_auditor_id = $this->db->query("select officer_company.register_no from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment = '' AND transaction_client_officers.position = 5 AND transaction_client_officers.id='".$id."'");

					$get_auditor_id = $get_auditor_id->result_array();

					$content = $this->encryption->decrypt($get_auditor_id[0]["register_no"]);
				}
				elseif($string2 == "Auditors name - appointment")
				{
					$replace_string = $match[$r];

					$get_auditor_name = $this->db->query("select officer_company.company_name from transaction_client_officers left join officer_company on transaction_client_officers.officer_id = officer_company.id AND transaction_client_officers.field_type = officer_company.field_type where transaction_client_officers.company_code='".$company_code."' AND transaction_id='".$transaction_master_id."' AND transaction_client_officers.date_of_appointment = '' AND transaction_client_officers.position = 5 AND transaction_client_officers.id='".$id."'");

					$get_auditor_name = $get_auditor_name->result_array();

					$content = $this->encryption->decrypt($get_auditor_name[0]["company_name"]);
				}
				elseif($string2 == "Allotment - members")
				{
					$replace_string = $match[$r];

					if($document_name == "First Director Resolutions (One)")
					{
						$get_member_name = $this->db->query("select transaction_member_shares.*, officer.name, officer_company.company_name, client.company_name as client_company_name from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id AND transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id AND transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = 'client' AND client.deleted != 1 where transaction_member_shares.company_code='".$company_code."' AND transaction_page_id='".$transaction_master_id."'");
					}
					else
					{
						$get_member_name = $this->db->query("select transaction_member_shares.*, officer.name, officer_company.company_name, client.company_name as client_company_name from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id AND transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id AND transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = 'client' AND client.deleted != 1 where transaction_member_shares.company_code='".$company_code."' AND transaction_page_id='".$transaction_master_id."' AND transaction_member_shares.id = '".$id."'");
					}

					$get_member_name = $get_member_name->result_array();

					if($get_member_name[0]["name"] != null)
					{
						$content = $this->encryption->decrypt($get_member_name[0]["name"]);
					}
					else if($get_member_name[0]["company_name"] != null)
					{
						$content = $this->encryption->decrypt($get_member_name[0]["company_name"]);
					}
					else if($get_member_name[0]["client_company_name"] != null)
					{
						$content = $get_member_name[0]["client_company_name"];
					}
				}
				elseif($string2 == "Allotment - members ID")
				{
					$replace_string = $match[$r];

					$get_member_name = $this->db->query("select transaction_member_shares.*, officer.identification_no, officer_company.register_no, client.registration_no from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id AND transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id AND transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = 'client' AND client.deleted != 1 where transaction_member_shares.company_code='".$company_code."' AND transaction_member_shares.id = '".$id."' AND transaction_page_id='".$transaction_master_id."'");

					$get_member_name = $get_member_name->result_array();

					if($get_member_name[0]["identification_no"] != null)
					{
						$content = $this->encryption->decrypt($get_member_name[0]["identification_no"]);
					}
					else if($get_member_name[0]["register_no"] != null)
					{
						$content = $this->encryption->decrypt($get_member_name[0]["register_no"]);
					}
					else if($get_member_name[0]["registration_no"] != null)
					{
						$content = $get_member_name[0]["registration_no"];
					}
				}
				elseif($string2 == "Allotment - members address" || $string2 == "Transferee - members address" || $string2 == "Transferee - Address")
				{
					$replace_string = $match[$r];

					$member_address_type = 'Local';
					$foreign_address1 = "";
					$foreign_address2 = "";
					$foreign_address3 = "";

					$get_member_address = $this->db->query('select transaction_member_shares.*, officer.address_type as officer_address_type, officer.alternate_address, officer.postal_code1, officer.street_name1, officer.building_name1, officer.unit_no1, officer.unit_no2, officer.postal_code2 as officer_postal_code2, officer.building_name2 as officer_building_name2, officer.street_name2 as officer_street_name2, officer.unit_no3 as officer_unit_no3, officer.unit_no4 as officer_unit_no4, officer.foreign_address1, officer.foreign_address2, officer.foreign_address3, officer_company.field_type as officer_company_field_type, officer_company.register_no, officer_company.address_type as officer_company_address_type, officer_company.company_postal_code, officer_company.company_street_name, officer_company.company_building_name, officer_company.company_unit_no1, officer_company.company_unit_no2, officer_company.company_foreign_address1, officer_company.company_foreign_address2, officer_company.company_foreign_address3, client.postal_code as client_postal_code, client.street_name as client_street_name, client.building_name as client_building_name, client.unit_no1 as client_unit_no1, client.unit_no2 as client_unit_no2 from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id and transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id and transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = "client" AND client.deleted != 1 where transaction_member_shares.company_code="'.$company_code.'" AND transaction_member_shares.id = "'.$id.'" AND transaction_page_id="'.$transaction_master_id.'"');

					$get_member_address = $get_member_address->result_array();

					if($get_member_address[0]['officer_address_type'] != null)
					{
						if($get_member_address[0]["alternate_address"] == "1")
						{
							$member_unit_no1 = $get_member_address[0]["officer_unit_no3"];
							$member_unit_no2 = $get_member_address[0]["officer_unit_no4"];
							$member_street_name = $get_member_address[0]["officer_street_name2"];
							$member_building_name = $get_member_address[0]["officer_building_name2"];
							$member_postal_code = $get_member_address[0]["officer_postal_code2"];
						}
						else
						{
							$member_address_type = $get_member_address[0]['officer_address_type'];
							$member_unit_no1 = $get_member_address[0]["unit_no1"];
							$member_unit_no2 = $get_member_address[0]["unit_no2"];
							$member_street_name = $get_member_address[0]["street_name1"];
							$member_building_name = $get_member_address[0]["building_name1"];
							$member_postal_code = $get_member_address[0]["postal_code1"];
							$foreign_address1 = $get_member_address[0]["foreign_address1"];
							$foreign_address2 = $get_member_address[0]["foreign_address2"];
							$foreign_address3 = $get_member_address[0]["foreign_address3"];
						}
					}
					elseif($get_member_address[0]['officer_company_address_type'] != null)
					{
						$member_address_type = $get_member_address[0]['officer_company_address_type'];
						$member_unit_no1 = $get_member_address[0]["company_unit_no1"];
						$member_unit_no2 = $get_member_address[0]["company_unit_no2"];
						$member_street_name = $get_member_address[0]["company_street_name"];
						$member_building_name = $get_member_address[0]["company_building_name"];
						$member_postal_code = $get_member_address[0]["company_postal_code"];
						$foreign_address1 = $get_member_address[0]["company_foreign_address1"];
						$foreign_address2 = $get_member_address[0]["company_foreign_address2"];
						$foreign_address3 = $get_member_address[0]["company_foreign_address3"];
					}
					else
					{
						$member_unit_no1 = $get_member_address[0]["client_unit_no1"];
						$member_unit_no2 = $get_member_address[0]["client_unit_no2"];
						$member_street_name = $get_member_address[0]["client_street_name"];
						$member_building_name = $get_member_address[0]["client_building_name"];
						$member_postal_code = $get_member_address[0]["client_postal_code"];
					}

					$address = array(
						'type' 			=> $member_address_type,
						'street_name1' 	=> $member_street_name,
						'unit_no1'		=> $member_unit_no1,
						'unit_no2'		=> $member_unit_no2,
						'building_name1'=> $member_building_name,
						'postal_code1'	=> $member_postal_code,
						'foreign_address1' => $foreign_address1,
						'foreign_address2' => $foreign_address2,
						'foreign_address3' => $foreign_address3
					);

					if($document_name == "Allotment-Share Cert")
					{
						$content = $this->write_address_local_foreign($address, "comma", "big_cap");
					}
					else
					{
						$content = $this->write_address_local_foreign($address, "letter", "big_cap");
					}
					
				}
				elseif($string2 == "Allotment - members nationality")
				{
					$replace_string = $match[$r];

					$get_member_nationality = $this->db->query('select transaction_member_shares.*, nationality.nationality as nationality_name from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id and transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id and transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = "client" AND client.deleted != 1 left join nationality on nationality.id = officer.nationality where transaction_member_shares.company_code="'.$company_code.'" AND transaction_member_shares.id = "'.$id.'" AND transaction_page_id="'.$transaction_master_id.'"');

					$get_member_nationality = $get_member_nationality->result_array();

					if($get_member_nationality[0]["nationality_name"] != null)
					{
						$content = $get_member_nationality[0]["nationality_name"];
					}
					else
					{
						$content = "";
					}
				}
				elseif($string2 == "Allotment - number of shares")
				{
					$replace_string = $match[$r];

					if($document_name == "First Director Resolutions (One)" || $document_name == "Allotment-Share Cert")
					{
						if($document_name == "Allotment-Share Cert")
						{
							$get_member_shares = $this->db->query('select transaction_member_shares.* from transaction_member_shares where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id = "'.$id.'"');
						}
						else
						{
							$get_member_shares = $this->db->query('select transaction_member_shares.* from transaction_member_shares where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'"');
						}

						$get_member_shares = $get_member_shares->result_array();

						if($document_name == "Allotment-Share Cert")
						{
							$content = number_format($get_member_shares[0]["number_of_share"]);
						}
						else
						{
							$content = strtoupper($this->convert_number_to_word_model->convert_number_to_words($get_member_shares[0]["number_of_share"]))." (".number_format($get_member_shares[0]["number_of_share"]).")";
						}
					}
					else
					{
						$get_member_shares = $this->db->query('select transaction_member_shares.* from transaction_member_shares where transaction_member_shares.company_code="'.$company_code.'" AND transaction_member_shares.id = "'.$id.'" AND transaction_page_id="'.$transaction_master_id.'"');

						$get_member_shares = $get_member_shares->result_array();

						if($document_name == "Allotment-Share Application Form")
						{
							$content = number_format($get_member_shares[0]["number_of_share"]);
						}
						else
						{
							$content = number_format($get_member_shares[0]["number_of_share"])."/-";
						}
					}
					
				}
				elseif($string2 == "Allotment - type of shares")
				{
					$replace_string = $match[$r];

					if($document_name == "DRIW-Allotment of Shares" || $document_name == "F24 - Return of allotment of shares")
					{
						$get_type_shares = $this->db->query('select transaction_member_shares.*, transaction_client_member_share_capital.class_id, transaction_client_member_share_capital.other_class, sharetype.sharetype as class_name from transaction_member_shares left join transaction_client_member_share_capital on transaction_client_member_share_capital.id = transaction_member_shares.client_member_share_capital_id left join sharetype on sharetype.id = transaction_client_member_share_capital.class_id where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'"');
					}
					else
					{
						$get_type_shares = $this->db->query('select transaction_member_shares.*, transaction_client_member_share_capital.class_id, transaction_client_member_share_capital.other_class, sharetype.sharetype as class_name from transaction_member_shares left join transaction_client_member_share_capital on transaction_client_member_share_capital.id = transaction_member_shares.client_member_share_capital_id left join sharetype on sharetype.id = transaction_client_member_share_capital.class_id where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id = "'.$id.'"');
					}

					$get_type_shares = $get_type_shares->result_array();

					if($get_type_shares[0]["class_id"] == 2)
					{
						$content = $get_type_shares[0]["other_class"];
					}
					else
					{
						$content = $get_type_shares[0]["class_name"];
					}

				}
				elseif($string2 == "Allotment - currency")
				{
					$replace_string = $match[$r];

					if($document_name == "DRIW-Allotment of Shares" || $document_name == "F24 - Return of allotment of shares")
					{
						$get_currency = $this->db->query('select transaction_member_shares.*, currency.currency as currency_name from transaction_member_shares left join transaction_client_member_share_capital on transaction_client_member_share_capital.id = transaction_member_shares.client_member_share_capital_id left join currency on currency.id = transaction_client_member_share_capital.currency_id where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'"');
					}
					else
					{
						$get_currency = $this->db->query('select transaction_member_shares.*, currency.currency as currency_name from transaction_member_shares left join transaction_client_member_share_capital on transaction_client_member_share_capital.id = transaction_member_shares.client_member_share_capital_id left join currency on currency.id = transaction_client_member_share_capital.currency_id where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id = "'.$id.'"');
					}

					$get_currency = $get_currency->result_array();

					$content = $get_currency[0]["currency_name"];

				}
				elseif($string2 == "Allotment - certificate")
				{
					$replace_string = $match[$r];

					$get_certificate = $this->db->query('select transaction_certificate.* from transaction_certificate left join transaction_member_shares on transaction_member_shares.id = "'.$id.'" where transaction_certificate.company_code="'.$company_code.'"AND transaction_member_shares.officer_id = transaction_certificate.officer_id AND transaction_member_shares.field_type = transaction_certificate.field_type AND transaction_certificate.transaction_page_id="'.$transaction_master_id.'"');

					$get_certificate = $get_certificate->result_array();

					$content = $get_certificate[0]["new_certificate_no"];

				}
				elseif($string2 == "Allotment - amount of shares")
				{
					$replace_string = $match[$r];

					if($document_name == "Shares allotment form")
					{
						$get_member_amount_shares = $this->db->query('select transaction_member_shares.*, currencies.currency from transaction_member_shares left join transaction_client_member_share_capital as share_capital on transaction_member_shares.client_member_share_capital_id = share_capital.id left join sharetype as class on class.id = share_capital.class_id left join currency as currencies on currencies.id = share_capital.currency_id where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id = "'.$id.'"');
					}
					else
					{
						$get_member_amount_shares = $this->db->query('select transaction_member_shares.*, currencies.currency from transaction_member_shares left join client_member_share_capital as share_capital on transaction_member_shares.client_member_share_capital_id = share_capital.id left join sharetype as class on class.id = share_capital.class_id left join currency as currencies on currencies.id = share_capital.currency_id where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id = "'.$id.'"');
					}

					$get_member_amount_shares = $get_member_amount_shares->result_array();

					//echo json_encode($get_member_amount_shares[0]["currency"])

					if($document_name == "Allotment-Share Cert")
					{
						$content = number_format($get_member_amount_shares[0]["amount_share"],2)."/-";
					}
					else
					{
						$content = $get_member_amount_shares[0]["currency"].number_format($get_member_amount_shares[0]["amount_share"],2)."/-";
					}
					
				}
				elseif($string2 == "Allotment - number of shares all")
				{
					$replace_string = $match[$r];

					$get_member_total_shares = $this->db->query('select sum(number_of_share) as total_number_of_share from transaction_member_shares where transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.company_code="'.$company_code.'"');

					$get_member_total_shares = $get_member_total_shares->result_array();

					if($document_name == "First Director Resolutions (Many)")
					{
						$total_share = $get_member_total_shares[0]["total_number_of_share"];
						$content = strtoupper($this->convert_number_to_word_model->convert_number_to_words($total_share))." (".number_format($get_member_total_shares[0]["total_number_of_share"]).")";
					}
					else if($document_name == "DRIW-Allotment of Shares" || $document_name = 'F24 - Return of allotment of shares')
					{
						$content = number_format($get_member_total_shares[0]["total_number_of_share"]);
					}
					else
					{
						$content = number_format($get_member_total_shares[0]["total_number_of_share"])."/-";
					}
				}
				elseif($string2 == "Allotment - per shared")
        		{
        			$replace_string = $match[$r];

        			$get_per_share = $this->db->query('select transaction_member_shares.* from transaction_member_shares where transaction_member_shares.company_code="'.$company_code.'" AND transaction_page_id="'.$transaction_master_id.'"');

        			$get_per_share = $get_per_share->result_array();

        			if($document_name == "DRIW-Allotment of Shares")
        			{
        				$doc_amount_share = 0;
        				$doc_number_of_share = 0;
        				for($y = 0; $y < count($get_per_share); $y++)
            			{
            				$doc_amount_share = $doc_amount_share + $get_per_share[$y]["amount_share"];
            				$doc_number_of_share = $doc_number_of_share + $get_per_share[$y]["number_of_share"];
            			}

            			$per_shared = $doc_amount_share / $doc_number_of_share;
        			}
        			else
        			{
        				$per_shared = $get_per_share[0]["amount_share"] / $get_per_share[0]["number_of_share"];
        			}
        			$content = number_format($per_shared, 2);
        		}
        		elseif($string2 == "Class of shares - all" || $string2 == "Currency of shares - all" || $string2 == "No of shares issued - all" || $string2 == "Amount of shares issued - all" || $string2 == "Amount of shares paid up - all")
        		{
        			$replace_string = $match[$r];

        			$get_transaction_client_member_share_capital = $this->db->query('select transaction_client_member_share_capital.*, currency.currency as currency_name, sharetype.sharetype from transaction_client_member_share_capital left join currency on currency.id = transaction_client_member_share_capital.currency_id left join sharetype on sharetype.id = transaction_client_member_share_capital.class_id where transaction_client_member_share_capital.company_code="'.$company_code.'" AND transaction_id="'.$transaction_master_id.'"');

        			$get_transaction_client_member_share_capital = $get_transaction_client_member_share_capital->result_array();

        			$client_transaction_member_share_capital_id_info = $this->db->query("select transaction_client_member_share_capital.*, sum(transaction_member_shares.number_of_share) as transaction_number_of_shares, sum(transaction_member_shares.amount_share) as transaction_amount, sum(transaction_member_shares.no_of_share_paid) as transaction_number_of_shares_paid, sum(transaction_member_shares.amount_paid) as transaction_paid_up from transaction_client_member_share_capital left join transaction_member_shares on transaction_member_shares.client_member_share_capital_id = transaction_client_member_share_capital.id where transaction_client_member_share_capital.company_code = '".$company_code."' AND transaction_client_member_share_capital.transaction_id='".$transaction_master_id."' group by transaction_client_member_share_capital.id");

        			$client_transaction_member_share_capital_id_info = $client_transaction_member_share_capital_id_info->result_array();

        			$client_member_share_capital_id_info = $this->db->query("select client_member_share_capital.*, sum(member_shares.number_of_share) as number_of_shares, sum(member_shares.amount_share) as amount, sum(member_shares.no_of_share_paid) as number_of_shares_paid, sum(member_shares.amount_paid) as paid_up 
        				from client_member_share_capital 
        				left join member_shares on member_shares.client_member_share_capital_id = client_member_share_capital.id AND member_shares.company_code = client_member_share_capital.company_code 
        				where client_member_share_capital.company_code = '".$get_transaction_client_member_share_capital[0]["company_code"]."' 
        				AND client_member_share_capital.class_id='".$get_transaction_client_member_share_capital[0]["class_id"]."' 
        				AND client_member_share_capital.other_class='".$get_transaction_client_member_share_capital[0]["other_class"]."' 
        				AND client_member_share_capital.currency_id='".$get_transaction_client_member_share_capital[0]["currency_id"]."' 
        				group by client_member_share_capital.id");

			        $client_member_share_capital_id_info = $client_member_share_capital_id_info->result_array();

			        if($string2 == "Currency of shares - all")
			        {
			        	$content = $get_transaction_client_member_share_capital[0]["currency_name"];
			        }
			        else if($string2 == "Class of shares - all")
			        {
				        if($get_transaction_client_member_share_capital[0]["class_id"] == 2)
						{
							$content = $get_transaction_client_member_share_capital[0]["other_class"];
						}
						else
						{
							$content = $get_transaction_client_member_share_capital[0]["sharetype"];
						}
					}
					else if($string2 == "No of shares issued - all")
					{
						if(count($client_member_share_capital_id_info) > 0)
						{
							$content = number_format($client_member_share_capital_id_info[0]["number_of_shares"] + $client_transaction_member_share_capital_id_info[0]["transaction_number_of_shares"]);
						}
						else
						{
							$content = number_format($client_transaction_member_share_capital_id_info[0]["transaction_number_of_shares"]);
						}
					}
					else if($string2 == "Amount of shares issued - all")
					{
						if(count($client_member_share_capital_id_info) > 0)
						{
							$content = $get_transaction_client_member_share_capital[0]["currency_name"].number_format($client_member_share_capital_id_info[0]["amount"] + $client_transaction_member_share_capital_id_info[0]["transaction_amount"]);
						}
						else
						{
							$content = $get_transaction_client_member_share_capital[0]["currency_name"].number_format($client_transaction_member_share_capital_id_info[0]["transaction_amount"]);
						}
						
					}
					else if($string2 == "Amount of shares paid up - all")
					{
						if(count($client_member_share_capital_id_info) > 0)
						{
							$content = $get_transaction_client_member_share_capital[0]["currency_name"].number_format($client_member_share_capital_id_info[0]["paid_up"] + $client_transaction_member_share_capital_id_info[0]["transaction_paid_up"]);
						}
						else
						{
							$content = $get_transaction_client_member_share_capital[0]["currency_name"].number_format($client_transaction_member_share_capital_id_info[0]["transaction_paid_up"]);
						}
						
					}

        		}
        		elseif($string2 == "Transferor - share number" || $string2 == "Transferee - name"  || $string2 == "Transferee - ID" || $string2 == "Transferor - name" || $string2 == "Transferor - ID" || $string2 == "Transferee - share number" || $string2 == "Transferee - share type" || $string2 == "Transferee - currency" || $string2 == "Transferee - share amount" || $string2 == "Transferee - certificate" || $string2 == "Transferor - consideration" || $string2 == "Transferor - Address")
				{
					$replace_string = $match[$r];

					if($document_name == "Transferee-Share Cert")
					{
						$where = 'transaction_certificate.new_certificate_no="'.$value.'" where transaction_member_shares.company_code="'.$company_code.'" AND transaction_member_shares.transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id="'.$id.'" AND transaction_member_shares.number_of_share > 0';

						$share_capital = "client_member_share_capital";
					}
					else if($document_name == "Ltrs Transfer of Shares")
					{
						$where = 'transaction_certificate.company_code="'.$company_code.'"AND transaction_member_shares.officer_id = transaction_certificate.officer_id AND transaction_member_shares.field_type = transaction_certificate.field_type AND transaction_certificate.transaction_page_id="'.$transaction_master_id.'" AND 0 >transaction_certificate.number_of_share where transaction_member_shares.company_code="'.$company_code.'" AND transaction_member_shares.transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id="'.$id.'" AND 0 > transaction_member_shares.number_of_share';

						$share_capital = "client_member_share_capital";
					}
					else
					{
						$where = 'transaction_certificate.company_code="'.$company_code.'"AND transaction_member_shares.officer_id = transaction_certificate.officer_id AND transaction_member_shares.field_type = transaction_certificate.field_type AND transaction_certificate.transaction_page_id="'.$transaction_master_id.'" AND transaction_certificate.number_of_share > 0 where transaction_member_shares.company_code="'.$company_code.'" AND transaction_member_shares.transaction_page_id="'.$transaction_master_id.'" AND transaction_member_shares.id="'.$value.'"';

						$share_capital = "transaction_client_member_share_capital";
					}

					$get_member_shares = $this->db->query('select transaction_member_shares.*, '.$share_capital.'.class_id, '.$share_capital.'.other_class, sharetype.sharetype as class_name, officer.name, officer.identification_no, officer.alternate_address, officer.address_type as officer_address_type, officer.postal_code1 as officer_postal_code1, officer.building_name1 as officer_building_name1, officer.street_name1 as officer_street_name1, officer.unit_no1 as officer_unit_no1, officer.unit_no2 as officer_unit_no2, officer.postal_code2 as officer_postal_code2, officer.building_name2 as officer_building_name2, officer.street_name2 as officer_street_name2, officer.unit_no3 as officer_unit_no3, officer.unit_no4 as officer_unit_no4, officer.foreign_address1, officer.foreign_address2, officer.foreign_address3, officer_company.company_name, officer_company.register_no, officer_company.address_type as officer_company_address_type, officer_company.company_postal_code, officer_company.company_building_name, officer_company.company_street_name, officer_company.company_unit_no1, officer_company.company_unit_no2, officer_company.company_foreign_address1, officer_company.company_foreign_address2, officer_company.company_foreign_address3, client.company_name as client_company_name, client.registration_no, client.postal_code as client_postal_code, client.building_name as client_building_name, client.street_name as client_street_name, client.unit_no1 as client_unit_no1, client.unit_no2 as client_unit_no2, currency.currency as currency_name, transaction_certificate.new_certificate_no from transaction_member_shares left join '.$share_capital.' on '.$share_capital.'.id = transaction_member_shares.client_member_share_capital_id left join sharetype on sharetype.id = '.$share_capital.'.class_id left join officer on transaction_member_shares.officer_id = officer.id AND transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id AND transaction_member_shares.field_type = officer_company.field_type left join client on client.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = "client" AND client.deleted != 1 left join currency on currency.id = '.$share_capital.'.currency_id left join transaction_certificate on '.$where.'');

					$get_member_shares = $get_member_shares->result_array();

					for($i = 0; $i < count($get_member_shares); $i++)
					{
						if($get_member_shares[$i]["number_of_share"] > 0)
						{
							if($string2 == "Transferor - share number")
							{
								$content = strtoupper($this->convert_number_to_word_model->convert_number_to_words($get_member_shares[$i]["number_of_share"]))." (".number_format($get_member_shares[$i]["number_of_share"]).")";
							}

							if($string2 == "Transferee - share number")
							{
								if($document_name == "Transferee-Share Cert")
								{
									$content = strtoupper(number_format($get_member_shares[$i]["number_of_share"]));
								}
								else
								{
									$content = strtoupper($this->convert_number_to_word_model->convert_number_to_words($get_member_shares[$i]["number_of_share"]))." (".number_format($get_member_shares[$i]["number_of_share"]).")";
								}
							}

							if($string2 == "Transferee - name")
							{
								if($get_member_shares[$i]["name"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["name"]);
								}
								else if($get_member_shares[$i]["company_name"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["company_name"]);
								}
								else if($get_member_shares[$i]["client_company_name"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["client_company_name"]);
								}
					
							}

							if($string2 == "Transferee - ID")
							{
								if($get_member_shares[$i]["identification_no"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["identification_no"]);
								}
								else if($get_member_shares[$i]["register_no"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["register_no"]);
								}
								else if($get_member_shares[$i]["registration_no"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["registration_no"]);
								}
							}

							if($string2 == "Transferee - share type")
							{
								if($get_member_shares[$i]["class_id"] == 2)
								{
									$content = $get_member_shares[$i]["other_class"];
								}
								else
								{
									$content = $get_member_shares[$i]["class_name"];
								}
							}

							if($string2 == "Transferee - currency")
							{
								$content = $get_member_shares[$i]["currency_name"];
							}

							if($string2 == "Transferee - share amount")
							{
								$content = $get_member_shares[$i]["amount_share"];
							}

							if($string2 == "Transferee - certificate")
							{
								$content = $get_member_shares[$i]["new_certificate_no"];
							}
						}
						else if(0 > $get_member_shares[$i]["number_of_share"])
						{
							if($string2 == "Transferor - Address")
							{
								$member_address_type = 'Local';
								$foreign_address1 = "";
								$foreign_address2 = "";
								$foreign_address3 = "";

								if($get_member_shares[$i]["name"] != null)
								{
									if($get_member_shares[$i]["alternate_address"] == "1")
									{
										$member_unit_no1 = $get_member_shares[$i]["officer_unit_no3"];
										$member_unit_no2 = $get_member_shares[$i]["officer_unit_no4"];
										$member_street_name = $get_member_shares[$i]["officer_street_name2"];
										$member_building_name = $get_member_shares[$i]["officer_building_name2"];
										$member_postal_code = $get_member_shares[$i]["officer_postal_code2"];
									}
									else
									{
										$member_address_type = $get_member_shares[$i]['officer_address_type'];
										$member_unit_no1 = $get_member_shares[$i]["officer_unit_no1"];
										$member_unit_no2 = $get_member_shares[$i]["officer_unit_no2"];
										$member_street_name = $get_member_shares[$i]["officer_street_name1"];
										$member_building_name = $get_member_shares[$i]["officer_building_name1"];
										$member_postal_code = $get_member_shares[$i]["officer_postal_code1"];
										$foreign_address1 = $get_member_shares[$i]["foreign_address1"];
										$foreign_address2 = $get_member_shares[$i]["foreign_address2"];
										$foreign_address3 = $get_member_shares[$i]["foreign_address3"];
									}
								}
								elseif($get_member_shares[$i]["company_name"] != null)
								{
									$member_address_type = $get_member_shares[$i]['officer_company_address_type'];
									$member_unit_no1 = $get_member_shares[$i]["company_unit_no1"];
									$member_unit_no2 = $get_member_shares[$i]["company_unit_no2"];
									$member_street_name = $get_member_shares[$i]["company_street_name"];
									$member_building_name = $get_member_shares[$i]["company_building_name"];
									$member_postal_code = $get_member_shares[$i]["company_postal_code"];
									$foreign_address1 = $get_member_shares[$i]["company_foreign_address1"];
									$foreign_address2 = $get_member_shares[$i]["company_foreign_address2"];
									$foreign_address3 = $get_member_shares[$i]["company_foreign_address3"];
								}
								elseif($get_member_shares[$i]["client_company_name"] != null)
								{
									$member_unit_no1 = $get_member_shares[$i]["client_unit_no1"];
									$member_unit_no2 = $get_member_shares[$i]["client_unit_no2"];
									$member_street_name = $get_member_shares[$i]["client_street_name"];
									$member_building_name = $get_member_shares[$i]["client_building_name"];
									$member_postal_code = $get_member_shares[$i]["client_postal_code"];
								}

								$address = array(
									'type' 			=> $member_address_type,
									'street_name1' 	=> $member_street_name,
									'unit_no1'		=> $member_unit_no1,
									'unit_no2'		=> $member_unit_no2,
									'building_name1'=> $member_building_name,
									'postal_code1'	=> $member_postal_code,
									'foreign_address1' => $foreign_address1,
									'foreign_address2' => $foreign_address2,
									'foreign_address3' => $foreign_address3
								);

								$content = $this->write_address_local_foreign($address, "letter", "big_cap");
							}

							if($string2 == "Transferor - name")
							{
								if($get_member_shares[$i]["name"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["name"]);
								}
								else if($get_member_shares[$i]["company_name"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["company_name"]);
								}
								else if($get_member_shares[$i]["client_company_name"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["client_company_name"]);
								}
					
							}

							if($string2 == "Transferor - ID")
							{
								if($get_member_shares[$i]["identification_no"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["identification_no"]);
								}
								else if($get_member_shares[$i]["register_no"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["register_no"]);
								}
								else if($get_member_shares[$i]["registration_no"] != null)
								{
									$content = $this->encryption->decrypt($get_member_shares[$i]["registration_no"]);
								}
							}

							if($string2 == "Transferor - consideration")
							{
								$content = $get_member_shares[$i]["currency_name"].number_format($get_member_shares[$i]["consideration"], 2);
							}
						}
					}
				}

				elseif($string2 == "Address - new")
				{
					$replace_string = $match[$r];

					if($document_name == "Allotment-Share Cert" || $document_name == "Transferee-Share Cert" || $document_name == "Dividend voucher" || $document_name == "01 Letter of Authorisation" || $document_name == "02 Letter to IRAS for Striking Off" || $document_name == "04 DRIW-Strike-Off & EGM - Shareholder" || $document_name == "04 Strike-Off-Notice Of EGM" || $document_name == "04 Strike-Off-Minutes Of EGM" || $document_name == "04 Strike-Off-Attendance List" || $document_name == "DRIW - Appt of Co Sec")
					{
						$get_transaction_master = $this->db->query("select transaction_task_id from transaction_master where id = '".$transaction_master_id."'");

						$get_transaction_master = $get_transaction_master->result_array();

						if($get_transaction_master[0]["transaction_task_id"] == 1)
						{
							$get_client_address = $this->db->query("select postal_code, building_name, street_name, unit_no1, unit_no2 from transaction_client where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");
						}
						else
						{
							$get_client_address = $this->db->query("select postal_code, building_name, street_name, unit_no1, unit_no2 from client where company_code='".$company_code."' AND client.deleted != 1");
						}

						$get_client_address = $get_client_address->result_array();

						$client_unit_no1 = $get_client_address[0]["unit_no1"];
						$client_unit_no2 = $get_client_address[0]["unit_no2"];
						$client_street_name = $get_client_address[0]["street_name"];
						$client_building_name = $get_client_address[0]["building_name"];
						$client_postal_code = $get_client_address[0]["postal_code"];

						$address = array(
							'type' 			=> "Local",
							'street_name1' 	=> $client_street_name,
							'unit_no1'		=> $client_unit_no1,
							'unit_no2'		=> $client_unit_no2,
							'building_name1'=> $client_building_name,
							'postal_code1'	=> $client_postal_code
						);

						if($document_name == "Dividend voucher" || $document_name == "01 Letter of Authorisation"){
							$content = $this->write_address_local_foreign($address, "letter", "big_cap");
						}else{
							$content = $this->write_address_local_foreign($address, "comma", "big_cap");
						}
					}
					else if($document_name == "DRIW-Change of Reg Ofis")
					{
						$get_client_address = $this->db->query("select transaction_change_regis_ofis_address.postal_code, transaction_change_regis_ofis_address.building_name, transaction_change_regis_ofis_address.street_name, transaction_change_regis_ofis_address.unit_no1, transaction_change_regis_ofis_address.unit_no2 from transaction_change_regis_ofis_address left join transaction_master on transaction_master.id = transaction_change_regis_ofis_address.transaction_id where transaction_master.company_code='".$company_code."' AND transaction_change_regis_ofis_address.transaction_id='".$transaction_master_id."'");

						$get_client_address = $get_client_address->result_array();

						if($get_client_address[0]["unit_no1"] != "" || $get_client_address[0]["unit_no2"] != "")
						{
							$client_unit = ' #'.$get_client_address[0]["unit_no1"] .' - '.$get_client_address[0]["unit_no2"];
						}
						else
						{
							$client_unit = "";
						}

						if($get_client_address[0]["building_name"] != "")
						{
							$building_name = ' '.$get_client_address[0]["building_name"];
						}

						$content = $get_client_address[0]["street_name"].','.$client_unit.''.$building_name.', SINGAPORE '.$get_client_address[0]["postal_code"];
					}
					else if($document_name == "Ltr - Resignation of Director" || $document_name == "DRIW-Appt of Auditor" || $document_name == "Auditor-Shorter notice of EGM" || $document_name == "Auditor-Notice of EGM" || $document_name == "Auditor-Minutes of EGM" || $document_name == "Auditor-Attendance List" || $document_name == "Company Name-Notice of EGM" || $document_name == "Company Name-Attendance List" || $document_name == "Company Name-Minutes of EGM" || $document_name == "Company Name-Shorter notice of EGM" || $document_name == "Allotment-Minutes of EGM" || $document_name == "Allotment-Authority to Allot" || $document_name == "Allotment-Authority to EGM" || $document_name == "Allotment-Attendance List" || $document_name == "Allotment-Shorter notice of EGM" || $document_name == "Allotment-Share Application Form" || $document_name == "Ltrs Transfer of Shares" || $document_name == "AGM & AR - DRIW" || $document_name == "AGM & AR - Notice for AGM" || $document_name == "AGM & AR - Minutes of AGM" || $document_name == "AGM & AR - Attendance List" || $document_name == "DRIW-Change Biz Activity" || $document_name == "DRIW-Add Biz Activity" || $document_name == "DRIW-Incorp of subsidiary" || $document_name == "Subsidiary-Cert of Appt Company Representative" || $document_name == "DRIW-Issue Director Fee & EGM" || $document_name == "Director Fee-Notice of EGM" || $document_name == "Director Fee-Minutes of EGM" || $document_name == "Director Fee-Attendance List" || $document_name == "DRIW-Dividends" || $document_name == "Dividends-Notice Of EGM" || $document_name == "Dividends-Minutes Of EGM" || $document_name == "Dividends-Attendance List" || $document_name == "Nominee Director Agreement")
					{
						$get_client_address = $this->db->query("select postal_code, building_name, street_name, unit_no1, unit_no2 from client where company_code='".$company_code."' AND client.deleted != 1");

						$get_client_address = $get_client_address->result_array();

						if(!empty($get_client_address[0]["unit_no1"]) || !empty($get_client_address[0]["unit_no2"]))
						{
							$client_unit = '#'.$get_client_address[0]["unit_no1"] .' - '.$get_client_address[0]["unit_no2"];
						}
						else
						{
							$client_unit = "";
						}

						if($get_client_address[0]["building_name"] != "")
						{
							$building_name = ' '.$get_client_address[0]["building_name"];
						}

						if($document_name == "AGM & AR - Notice for AGM" || $document_name == "AGM & AR - DRIW")
						{
							$singapore = "Singapore";
						}
						else
						{
							$singapore = "SINGAPORE";
						}

						if($document_name == "Ltr - Resignation of Director" || $document_name == "Allotment-Share Application Form" || $document_name == "Ltrs Transfer of Shares" || $document_name == "Nominee Director Agreement")
						{	
							if(!empty($client_unit) || !empty($building_name))
							{
								$content = $get_client_address[0]["street_name"].',<br/>'.$client_unit.''.$building_name.',<br/> '.$singapore. ' ' .$get_client_address[0]["postal_code"];
							}
							else 
							{
								$content = $get_client_address[0]["street_name"].$client_unit.''.$building_name.',<br/> '.$singapore.' '.$get_client_address[0]["postal_code"];
							}

							if($document_name == "Nominee Director Agreement")
							{
								$content = ucwords(strtolower($content));
							}
						}
						elseif($document_name == "DRIW-Dividends")
						{
							$content = ucwords(strtolower($this->write_address($get_client_address[0]["street_name"], $get_client_address[0]["unit_no1"], $get_client_address[0]["unit_no2"], $get_client_address[0]["building_name"], $$get_client_address[0]["postal_code"], "comma")));
						}
						else
						{
							if(!empty($client_unit) || !empty($building_name))
							{
								$content = $get_client_address[0]["street_name"].', '.$client_unit.''.$building_name.', '.$singapore.' '.$get_client_address[0]["postal_code"];
							}
							else 
							{
								$content = $get_client_address[0]["street_name"].$client_unit.''.$building_name.', '.$singapore.' '.$get_client_address[0]["postal_code"];
							}
						}

						if($document_name == "AGM & AR - Notice for AGM" || $document_name == "AGM & AR - DRIW")
						{
							$content = ucwords(strtolower($content));
						}
						
					}
					else
					{
						$get_client_address = $this->db->query("select postal_code, building_name, street_name, unit_no1, unit_no2 from transaction_client where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");

						$get_client_address = $get_client_address->result_array();

						$client_unit_no1 = $get_client_address[0]["unit_no1"];
						$client_unit_no2 = $get_client_address[0]["unit_no2"];
						$client_street_name = $get_client_address[0]["street_name"];
						$client_building_name = $get_client_address[0]["building_name"];
						$client_postal_code = $get_client_address[0]["postal_code"];

						$address = array(
							'type' 			=> "Local",
							'street_name1' 	=> $client_street_name,
							'unit_no1'		=> $client_unit_no1,
							'unit_no2'		=> $client_unit_no2,
							'building_name1'=> $client_building_name,
							'postal_code1'	=> $client_postal_code
						);

						if($document_name == "Letter of Authorisation" || $document_name == "Letter of Appointment" || $document_name == "Ltr - Resignation of Director" || $document_name == "CSS Proposal" || $document_name == "Letter taking over of Secretarial Services")
						{
							$content = $this->write_address_local_foreign($address, "letter", "big_cap");

						}
						else
						{
							$content = $this->write_address_local_foreign($address, "comma", "big_cap");
						}
					}
				}
				elseif($string2 == "Chairman")
				{
					$replace_string = $match[$r];

					if($document_name == "Auditor-Minutes of EGM" || $document_name == "Company Name-Minutes of EGM" || $document_name == "Allotment-Minutes of EGM" || $document_name == "Dividends-Minutes Of EGM" || $document_name == "Director Fee-Minutes of EGM" || $document_name == "04 Strike-Off-Minutes Of EGM")
					{
						$chairman_result = $this->db->query("select chairman from client_signing_info where company_code='".$company_code."'");
					}
					elseif($document_name == "AGM & AR - Minutes of AGM")
					{
						$chairman_result = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');
					}
					else
					{
						$chairman_result = $this->db->query("select chairman from transaction_client_signing_info where company_code='".$company_code."' AND transaction_id='".$transaction_master_id."'");
					}
                	
                	if ($chairman_result->num_rows() > 0) {

	                	$chairman_result = $chairman_result->result_array();

	                	$chairman_result_info = (explode("-",$chairman_result[0]["chairman"]));

	                	if($chairman_result_info[1] == "individual")
	                	{
	                		$officer_result = $this->db->query("select * from officer where id='".$chairman_result_info[0]."' AND field_type='".$chairman_result_info[1]."'");

	                		$officer_result = $officer_result->result_array();

	                		$name = $this->encryption->decrypt($officer_result[0]["name"]);
	                	}
	                	elseif($chairman_result_info[1] == "corp_rep")
	                	{
	                		$officer_company_result = $this->db->query("select * from corporate_representative where id='".$chairman_result_info[0]."'");

	                		$officer_company_result = $officer_company_result->result_array();

	                		$name = $officer_company_result[0]["name_of_corp_rep"];
	                	}

						$content = $name;
					}
				}
				elseif($string2 == "Director Signature 1")
				{
					$content = '';
					$replace_string = $match[$r];

					if($document_name == "Allotment-Authority to Allot" || $document_name == "Auditor-Notice of EGM" || $document_name == "Dividends-Notice Of EGM" || $document_name == "Dividend voucher" || $document_name == "AGM & AR - Annual Return" || $document_name == "AGM & AR - Notice for AGM" || $document_name == "Declaration For Controller" || $document_name == "F24 - Return of allotment of shares" || $document_name == "Director Fee-Notice of EGM")
					{
						$director_signature_1_result = $this->db->query("select director_signature_1 from client_signing_info where company_code='".$company_code."'");
					
						if ($director_signature_1_result->num_rows() > 0) {

		                	$director_signature_1_result = $director_signature_1_result->result_array();

		                	$client_officer = $this->db->query("select * from client_officers where id='".$director_signature_1_result[0]["director_signature_1"]."'");

	                		$client_officer = $client_officer->result_array();

	                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

	                		$officer_result = $officer_result->result_array();

	                		$name = $this->encryption->decrypt($officer_result[0]["name"]);
		                }

		                $content = $name;
	                }
					elseif($document_name == "Letter of Authorisation" || $document_name == "First Director Resolutions (Many)")
					{
						$director_signature_1_result = $this->db->query("select director_signature_1 from transaction_client_signing_info where company_code='".$company_code."'");
					
						if ($director_signature_1_result->num_rows() > 0) {

		                	$director_signature_1_result = $director_signature_1_result->result_array();

		                	$client_officer = $this->db->query("select * from transaction_client_officers where id='".$director_signature_1_result[0]["director_signature_1"]."'");

	                		$client_officer = $client_officer->result_array();

	                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

	                		$officer_result = $officer_result->result_array();

	                		$name = $this->encryption->decrypt($officer_result[0]["name"]);
		                }

		                $content = $name;
	                }
				}
				elseif($string2 == "Director Signature 1's identification no")
				{
					$replace_string = $match[$r];
					$content = '';

					if($document_name == "AGM & AR - Annual Return" || $document_name == "Declaration For Controller")
					{
						$director_signature_1_result = $this->db->query("select director_signature_1 from client_signing_info where company_code='".$company_code."'");
					
						if ($director_signature_1_result->num_rows() > 0) {

		                	$director_signature_1_result = $director_signature_1_result->result_array();

		                	$client_officer = $this->db->query("select * from client_officers where id='".$director_signature_1_result[0]["director_signature_1"]."'");

	                		$client_officer = $client_officer->result_array();

	                		$officer_result = $this->db->query("select * from officer where id='".$client_officer[0]["officer_id"]."' AND field_type='".$client_officer[0]["field_type"]."'");

	                		$officer_result = $officer_result->result_array();

	                		$name = $this->encryption->decrypt($officer_result[0]["identification_no"]);
		                }

		                $content = $name;
	                }
				}
				elseif($string2 == "Year end new")
				{
					$content = "___________________";
					$replace_string = $match[$r];

					if($document_name == "AGM & AR - DRIW" || $document_name == "AGM & AR - Minutes of AGM" || $document_name == "AGM & AR - Notice for AGM")
					{
						$agm_year_end = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

						$agm_year_end = $agm_year_end->result_array();

						if(count($agm_year_end) > 0)
						{
							$content = $agm_year_end[0]["year_end_date"];
						}
					}
					else if($document_name == "DRIW-Change of FYE")
					{
						$get_transaction_change_fye_info = $this->db->query("SELECT * FROM transaction_change_fye WHERE transaction_id=". $transaction_master_id);

						$get_transaction_change_fye_info = $get_transaction_change_fye_info->result_array();

						if(count($get_transaction_change_fye_info) > 0)
						{
							if(!empty($get_transaction_change_fye_info[0]["new_year_end"]))
							{
								$content = $get_transaction_change_fye_info[0]["new_year_end"];
							}
						}
					}
					else
					{
						$get_year_end = $this->db->query('select year_end from transaction_filing where company_code="'.$company_code.'" AND transaction_id="'.$transaction_master_id.'"');

						$get_year_end = $get_year_end->result_array();

						if(count($get_year_end) > 0)
						{
							$content = $get_year_end[0]["year_end"];
						}
						else
						{
							$content = '<span style="text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>';
						}
					}
					
				}
				elseif($string2 == "Year end new (No Year)")
				{
					$content = "___________________";
					$replace_string = $match[$r];

					if($document_name == "DRIW-Change of FYE")
					{
						$get_transaction_change_fye_info = $this->db->query("SELECT * FROM transaction_change_fye WHERE transaction_id=". $transaction_master_id);

						$get_transaction_change_fye_info = $get_transaction_change_fye_info->result_array();

						if(count($get_transaction_change_fye_info) > 0)
						{
							if(!empty($get_transaction_change_fye_info[0]["new_year_end"]))
							{
								$content = date('d F', strtotime($get_transaction_change_fye_info[0]["new_year_end"]));
							}
						}
					}
					else
					{
						$get_year_end = $this->db->query('select year_end from transaction_filing where company_code="'.$company_code.'" AND transaction_id="'.$transaction_master_id.'"');

						$get_year_end = $get_year_end->result_array();

						if(count($get_year_end) > 0)
						{
							$date = explode(' ', $get_year_end[0]["year_end"]);
							$day = $date[0];
							$month   = $date[1];
							$year  = $date[2];
							$content = $day.' '.$month;
						}
						else
						{
							$content = '<span style="text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>';
						}
					}
				}
				elseif($string2 == 'Corporate representative')
                {
                	$replace_string = $match[$r];

                	$get_member_name = $this->db->query("select transaction_member_shares.*, z.company_name as tr_client_company_name, officer.name,officer.identification_no, officer_company.company_name, officer_company.register_no, y.company_name as client_company_name, y.registration_no as client_registration_no from transaction_member_shares left join officer on transaction_member_shares.officer_id = officer.id AND transaction_member_shares.field_type = officer.field_type left join officer_company on transaction_member_shares.officer_id = officer_company.id AND transaction_member_shares.field_type = officer_company.field_type left join client as y on y.id = transaction_member_shares.officer_id and transaction_member_shares.field_type = 'client' AND y.deleted <> 1 left join client as z on z.company_code = transaction_member_shares.company_code where transaction_member_shares.company_code='".$company_code."' AND transaction_page_id='".$transaction_master_id."' AND transaction_member_shares.id = '".$id."'");

                	$get_member_name = $get_member_name->result_array();

                	if($get_member_name[0]["company_name"] != null)
            		{
            			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($get_member_name[0]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$get_member_name[0]["tr_client_company_name"].'"');

            			$get_corp_rep_info = $get_corp_rep_info->result_array();

            			if($get_corp_rep_info[0]["name_of_corp_rep"] != null)
            			{
            				$content = $get_corp_rep_info[0]["name_of_corp_rep"];
            			}
            			else
            			{
            				$new_contents = str_replace('<span class="is_corp_rep">', '<span class="is_corp_rep" style="display: none;">', $new_contents);
            			}
            		}
            		else if($get_member_name[0]["client_company_name"] != null)
	                {
	                	$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$get_member_name[0]["client_registration_no"].'" and corporate_representative.subsidiary_name = "'.$get_member_name[0]["tr_client_company_name"].'"');

            			$get_corp_rep_info = $get_corp_rep_info->result_array();

            			if($get_corp_rep_info[0]["name_of_corp_rep"] != null)
            			{
            				$content = $get_corp_rep_info[0]["name_of_corp_rep"];
            			}
            			else
            			{
            				$new_contents = str_replace('<span class="is_corp_rep">', '<span class="is_corp_rep" style="display: none;">', $new_contents);
            			}
	                }
	                else
	                {
	                	$new_contents = str_replace('<span class="is_corp_rep">', '<span class="is_corp_rep" style="display: none;">', $new_contents);
	                }
                }
				elseif($string2 == 'Members name - all')
                {
                	$replace_string = $match[$r];

                	$member_name_result = $this->db->query('select member_shares.*, z.company_name as tr_client_company_name, sum(member_shares.number_of_share) as number_of_share, sum(member_shares.amount_share) as amount_share, sum(member_shares.no_of_share_paid) as no_of_share_paid, sum(member_shares.amount_paid) as amount_paid, officer.identification_no, officer.name, officer_company.register_no, officer_company.company_name, share_capital.id as share_capital_id, share_capital.class_id, share_capital.other_class, share_capital.currency_id, class.sharetype, currencies.currency, y.registration_no as client_registration_no, y.company_name as client_company_name from member_shares left join officer on member_shares.officer_id = officer.id and member_shares.field_type = officer.field_type left join officer_company on member_shares.officer_id = officer_company.id and member_shares.field_type = officer_company.field_type left join client as y on y.id = member_shares.officer_id and member_shares.field_type = "client" AND y.deleted <> 1 left join client_member_share_capital as share_capital on member_shares.client_member_share_capital_id = share_capital.id left join sharetype as class on class.id = share_capital.class_id left join currency as currencies on currencies.id = share_capital.currency_id left join client as z on z.company_code = member_shares.company_code where member_shares.company_code="'.$company_code.'" GROUP BY member_shares.field_type, member_shares.officer_id HAVING sum(member_shares.number_of_share) != 0');
                	//,member_shares.client_member_share_capital_id
                	//officer_company.company_corporate_representative, 
                	$member_name_result = $member_name_result->result_array();

                	$each_member_name = '<table style="width: 100%; border-collapse: collapse;"><tbody>';

                	for($g = 0; $g < count($member_name_result); $g++)
                	{
                		$directors_html_string_corp_rep = "";
                		
                		if($member_name_result[$g]["name"] != null)
                		{
                			$each_member_name = $each_member_name.'<tr style="height: 89px;"><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p>'.$this->encryption->decrypt($member_name_result[$g]["name"]).'</p></td><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p> _______________________________</p></td></tr>';
                		}
                		else if($member_name_result[$g]["company_name"] != null)
                		{
                			$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$this->encryption->decrypt($member_name_result[$g]["register_no"]).'" and corporate_representative.subsidiary_name = "'.$member_name_result[$g]["tr_client_company_name"].'"');

                			$get_corp_rep_info = $get_corp_rep_info->result_array();

                			for($b = 0; $b < count($get_corp_rep_info); $b++)
            				{
                				$each_member_name = $each_member_name.'<tr style="height: 89px;"><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p>'.$get_corp_rep_info[$b]["name_of_corp_rep"].'<br/>(Corporate Representative of '.$this->encryption->decrypt($member_name_result[$g]["company_name"]).')</td><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p> _______________________________</p></td></tr>';
                			}
                		}
                		else if($member_name_result[$g]["client_company_name"] != null)
		                {
		                	$get_corp_rep_info = $this->db->query('select * from corporate_representative where corporate_representative.cessation_date = "" and corporate_representative.registration_no = "'.$member_name_result[$g]["client_registration_no"].'" and corporate_representative.subsidiary_name = "'.$member_name_result[$g]["tr_client_company_name"].'"');

                			$get_corp_rep_info = $get_corp_rep_info->result_array();

                			for($b = 0; $b < count($get_corp_rep_info); $b++)
            				{
            					$each_member_name = $each_member_name.'<tr style="height: 89px;"><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p>'.$get_corp_rep_info[$b]["name_of_corp_rep"].'<br/>(Corporate Representative of '.$member_name_result[$g]["client_company_name"].')</td><td style="width: 50%; height: 89px;"><p>&nbsp;</p><p>&nbsp;</p><p> _______________________________</p></td></tr>';
            				}
		                }
                	}

                	$each_member_name = $each_member_name.'</tbody></table>';

	                if(2 > count($member_name_result))
					{
						if(strpos($new_contents, '<span class="many_member">s</span>') !== false)
	                	{
	                		$new_contents = str_replace('<span class="many_member">s</span>', '<span class="many_member" style="display: none">s</span>', $new_contents);
	                	}
	                }

                	$content = $each_member_name;

                }
                elseif($string2 == "have been registered / have not been registered / have not taken place")
				{
					$replace_string = $match[$r];

					$share_transfer = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$share_transfer = $share_transfer->result_array();

					if(count($share_transfer) > 0)
					{
						if($share_transfer[0]["agm_share_transfer_id"] == 1)
						{
							$content = "have been registered";
						}
						else if($share_transfer[0]["agm_share_transfer_id"] == 2)
						{
							$content = "have not been registered";
						}
						else if($share_transfer[0]["agm_share_transfer_id"] == 3)
						{
							$content = "have not taken place";
						}
						
					}
				}
				elseif($string2 == "the last annual return / the incorporation of the company" || $string2 == "from the date of incorporation / since the end of the previous financial year")
				{
					$replace_string = $match[$r];

					$first_agm = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$first_agm = $first_agm->result_array();

					if(count($first_agm) > 0)
					{
						if($string2 == "the last annual return / the incorporation of the company")
						{
							if($first_agm[0]["is_first_agm_id"] == 1)
							{
								$content = "the incorporation of the company";
							}
							else if($first_agm[0]["is_first_agm_id"] == 2)
							{
								$content = "the last annual return";
							}
							else
							{
								$content = "___________________";
							}
						}
						else if($string2 == "from the date of incorporation / since the end of the previous financial year")
						{
							if($first_agm[0]["is_first_agm_id"] == 1)
							{
								$content = "from the date of incorporation";
							}
							else if($first_agm[0]["is_first_agm_id"] == 2)
							{
								$content = "since the end of the previous financial year";
							}
						}
					}
				}
				elseif($string2 == "a duly audited / an unaudited profit" || $string2 == "un/audited")
				{
					$replace_string = $match[$r];

					$audited_fs = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$audited_fs = $audited_fs->result_array();

					if(count($audited_fs) > 0)
					{
						if($audited_fs[0]["audited_fs"] == 1)
						{
							if($document_name == "AGM & AR - DRIW" || $document_name == "AGM & AR - Notice for AGM" || $document_name == "AGM & AR - Minutes of AGM")
							{
								$content = "audited";
							}
							elseif($document_name == "AGM & AR - Annual Return")
							{
								$content = "a duly audited profit";
							}
							else
							{
								$content = "a duly audited";
							}
							
						}
						else if($audited_fs[0]["audited_fs"] == 2)
						{
							if($document_name == "AGM & AR - DRIW" || $document_name == "AGM & AR - Notice for AGM" || $document_name == "AGM & AR - Minutes of AGM")
							{
								$content = "unaudited";
							}
							else
							{
								$content = "an unaudited profit";
							}
						}
					}
				}
				elseif($string2 == "annual general meeting / by way of a resolution")
				{
					$replace_string = $match[$r];

					$agm_dispense = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$agm_dispense = $agm_dispense->result_array();

					if(count($agm_dispense) > 0)
					{
						if($agm_dispense[0]["agm_date"] == "dispensed")
						{
							$content = "by way of a resolution";
						}
						else if($agm_dispense[0]["agm_date"] != "dispensed")
						{
							$content = "annual general meeting";
						}
					}
				}
				elseif($string2 == "not / exempt")
				{
					$replace_string = $match[$r];

					$small_company = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$small_company = $small_company->result_array();

					if(count($small_company) > 0)
					{
						if($small_company[0]["small_company"] == 1)
						{
							$content = "exempted";
						}
						else if($small_company[0]["small_company"] == 2)
						{
							$content = "not exempted";
						}
					}
				}
				elseif($string2 == "not / considered")
				{
					$replace_string = $match[$r];

					$small_company1 = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$small_company1 = $small_company1->result_array();

					if(count($small_company1) > 0)
					{
						if($small_company1[0]["small_company"] == 1)
						{
							$content = "considered";
						}
						else if($small_company1[0]["small_company"] == 2)
						{
							$content = "not";
						}
					}
				}
				elseif($string2 == "Resolution Date")
				{
					$content = "___________________";
					$replace_string = $match[$r];

					$reso_date = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$reso_date = $reso_date->result_array();

					if(count($reso_date) > 0)
					{
						$content = $reso_date[0]["reso_date"];

						if(empty($reso_date[0]["reso_date"]))
						{
							$content = "___________________";
						}
					}
				}
				elseif($string2 == "AGM date" || $string2 == "AGM time")
				{
					$content = "___________________";
					$replace_string = $match[$r];

					$agm_date = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar left join transaction_master on transaction_master.id = transaction_agm_ar.transaction_id where transaction_master.company_code="'.$company_code.'" AND transaction_master.id="'.$transaction_master_id.'"');

					$agm_date = $agm_date->result_array();

					if(count($agm_date) > 0)
					{
						$content = $agm_date[0]["agm_date"];

						if($string2 == "AGM date")
						{
							if(!empty($agm_date[0]["agm_date"]))
							{
								$content = $agm_date[0]["agm_date"];
							}
						}
						elseif($string2 == "AGM time")
						{
							if(!empty($agm_date[0]["agm_time"]))
							{
								$content = $agm_date[0]["agm_time"];
							}
						}
					}
				}
				elseif($string2 == "Firm Name")
				{
					$replace_string = $match[$r];

					$query = $this->db->query("select firm.* from firm where firm.id = '".$this->session->userdata("firm_id")."'");

					$query = $query->result_array();

					$content = $query[0]['name'];
				}
				elseif($string2 == "Firm phone number")
				{
					$replace_string = $match[$r];

					$query = $this->db->query("select firm.*, firm_telephone.telephone from firm left join firm_telephone on firm_telephone.firm_id = firm.id and firm_telephone.primary_telephone = 1 where firm.id = '".$this->session->userdata("firm_id")."'");

					$query = $query->result_array();

					$content = $query[0]['telephone'];
				}
				elseif($string2 == "Firm Email")
				{
					$replace_string = $match[$r];

					$query = $this->db->query("select firm.*, firm_email.email from firm left join firm_email on firm_email.firm_id = firm.id and firm_email.primary_email = 1 where firm.id = '".$this->session->userdata("firm_id")."'");

					$query = $query->result_array();

					$content = $query[0]['email'];
				}
				elseif($string2 == "Firm Initial Name")
				{
					$replace_string = $match[$r];

					$query = $this->db->query("select firm.* from firm where firm.id = '".$this->session->userdata("firm_id")."'");

					$query = $query->result_array();

					$firm_full_name = $query[0]['name'];
					$firm_first_name = explode(' ',trim($firm_full_name));

					$content = $firm_first_name[0];
				}
				elseif($string2 == "Firm Address")
				{
					$replace_string = $match[$r];

					$query = $this->db->query("select firm.* from firm where firm.id = '".$this->session->userdata("firm_id")."'");

					$query = $query->result_array();

					$unit_no1 = $query[0]["unit_no1"];
					$unit_no2 = $query[0]["unit_no2"];
					$street_name = $query[0]["street_name"];
					$building_name = $query[0]["building_name"];
					$postal_code = $query[0]["postal_code"];

					$address = array(
						'type' 			=> "Local",
						'street_name1' 	=> strtoupper($street_name),
						'unit_no1'		=> strtoupper($unit_no1),
						'unit_no2'		=> strtoupper($unit_no2),
						'building_name1'=> strtoupper($building_name),
						'postal_code1'	=> $postal_code
					);

					if($document_name == "DRIW-Appt of Co Sec (Take Over)")
					{
						$content = $this->write_address_local_foreign($address, "comma", "big_cap");
					}
					else
					{	
						$content = $this->write_address_local_foreign($address, "letter", "big_cap");
					}
					
				}
				elseif($string2 == "Directors' Meeting Date")
				{
					$replace_string = $match[$r];

					$content = "___________________";

					$transaction_meeting_date_info = $this->db->query('select transaction_meeting_date.* from transaction_meeting_date where transaction_master_id="'.$transaction_master_id.'"');

					$transaction_meeting_date_info = $transaction_meeting_date_info->result_array();

					if(count($transaction_meeting_date_info) > 0)
					{
						if(!empty($transaction_meeting_date_info[0]["director_meeting_date"]))
						{
							$content = $transaction_meeting_date_info[0]["director_meeting_date"];
						}
					}
				}
				elseif($string2 == "Directors' Meeting Time")
				{
					$replace_string = $match[$r];

					$content = "___________________";

					$transaction_meeting_date_info = $this->db->query('select transaction_meeting_date.* from transaction_meeting_date where transaction_master_id="'.$transaction_master_id.'"');

					$transaction_meeting_date_info = $transaction_meeting_date_info->result_array();

					if(count($transaction_meeting_date_info) > 0)
					{
						if(!empty($transaction_meeting_date_info[0]["director_meeting_time"]))
						{
							$content = $transaction_meeting_date_info[0]["director_meeting_time"];
						}
					}
				}
				elseif($string2 == "Members' Meeting Date")
				{
					$replace_string = $match[$r];

					if($document_name == "F24 - Return of allotment of shares" || $document_name == "Allotment-Share Application Form")
					{
						$content = "";
					}
					else
					{
						$content = "___________________";
					}

					$transaction_meeting_date_info = $this->db->query('select transaction_meeting_date.* from transaction_meeting_date where transaction_master_id="'.$transaction_master_id.'"');

					$transaction_meeting_date_info = $transaction_meeting_date_info->result_array();

					if(count($transaction_meeting_date_info) > 0)
					{
						if(!empty($transaction_meeting_date_info[0]["member_meeting_date"]))
						{
							$content = $transaction_meeting_date_info[0]["member_meeting_date"];
						}
					}
				}
				elseif($string2 == "Members' Meeting Time")
				{
					$replace_string = $match[$r];

					$content = "___________________";

					$transaction_meeting_date_info = $this->db->query('select transaction_meeting_date.* from transaction_meeting_date where transaction_master_id="'.$transaction_master_id.'"');

					$transaction_meeting_date_info = $transaction_meeting_date_info->result_array();

					if(count($transaction_meeting_date_info) > 0)
					{
						if(!empty($transaction_meeting_date_info[0]["member_meeting_time"]))
						{
							$content = $transaction_meeting_date_info[0]["member_meeting_time"];
						}
					}
				}
				elseif($string2 == "Meeting's Venue" || $string2 == "AGM Meeting's Venue")
				{
					$replace_string = $match[$r];

					$content = "______________________________________________________________";

					if($string2 == "Meeting's Venue")
					{
						$transaction_meeting_date_info = $this->db->query('select transaction_meeting_date.* from transaction_meeting_date where transaction_master_id="'.$transaction_master_id.'"');
					}
					else if($string2 == "AGM Meeting's Venue")
					{
						$transaction_meeting_date_info = $this->db->query('select transaction_agm_ar.* from transaction_agm_ar where transaction_id="'.$transaction_master_id.'"');
					}

					$transaction_meeting_date_info = $transaction_meeting_date_info->result_array();

					if(count($transaction_meeting_date_info) > 0)
					{
						if($transaction_meeting_date_info[0]["address_type"] == "Registered Office Address")
						{
							if($transaction_meeting_date_info[0]["registered_unit_no1"] != "" || $transaction_meeting_date_info[0]["registered_unit_no2"] != "")
							{
								$client_unit = ' #'.$transaction_meeting_date_info[0]["registered_unit_no1"] .' - '.$transaction_meeting_date_info[0]["registered_unit_no2"];
							}
							else
							{
								$client_unit = "";
							}

							if($transaction_meeting_date_info[0]["registered_building_name1"] != "")
							{
								$building_name = ' '.$transaction_meeting_date_info[0]["registered_building_name1"];
							}

							$content = $transaction_meeting_date_info[0]["registered_street_name1"].','.$client_unit.''.$building_name.', SINGAPORE '.$transaction_meeting_date_info[0]["registered_postal_code1"];

						}
						else if($transaction_meeting_date_info[0]["address_type"] == "Local")
						{
							if($transaction_meeting_date_info[0]["unit_no1"] != "" || $transaction_meeting_date_info[0]["unit_no2"] != "")
							{
								$client_unit = ' #'.$transaction_meeting_date_info[0]["unit_no1"] .' - '.$transaction_meeting_date_info[0]["unit_no2"]." ";
							}
							else
							{
								$client_unit = "";
							}

							if($transaction_meeting_date_info[0]["building_name1"] != "")
							{
								$building_name = " ".$transaction_meeting_date_info[0]["building_name1"];
							}


							$content = $transaction_meeting_date_info[0]["street_name1"].','.$client_unit.''.$building_name.', SINGAPORE '.$transaction_meeting_date_info[0]["postal_code1"];
						}
						else if($transaction_meeting_date_info[0]["address_type"] == "Foreign")
						{
							$content = $transaction_meeting_date_info[0]["foreign_address1"].', '.$transaction_meeting_date_info[0]["foreign_address2"].', '.$transaction_meeting_date_info[0]["foreign_address3"];
						}
					}

				}
				elseif($string2 == "END OF THE RESOLUTION IN WRITING")
				{
					$replace_string = $match[$r];

					$content = "";
					
					$content = "END OF THE RESOLUTION IN WRITING";
				}

				$new_contents = str_replace($replace_string, $content, $new_contents);
			}
			return $new_contents;
		}
		else
		{
			return $new_contents;
		}
   	}

	public function generate_declaration_for_register_of_nominee_director($transaction_master_id, $company_code, $firm_id, $document_name, $client_nominee_director)
   	{
	 //   	for($t = 0 ; $t < count($latest_client_nominee_director) ; $t++)
		// {
			//Microsoft Word
			$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration for register of nominee director.docx");

			$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $client_nominee_director["id"], $document_name)));
			$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $firm_id, $client_nominee_director["id"], $document_name));

			if($client_nominee_director["nd_officer_name"] != null)
			{
				$nominee_director_name = $client_nominee_director["nd_officer_name"];
				$nominee_director_ID = $client_nominee_director["nd_officer_identification_no"];
			}

			if($client_nominee_director["name"] != null)
			{
				$document->setValue('individual name', $client_nominee_director["name"]);
				$document->setValue('individual alias', $client_nominee_director["alias"]);
				//echo json_encode($latest_client_nominee_director[$t]);

				// if($client_nominee_director["alternate_address"] == 1)
	   //          {
	   //              $address = array(
				// 		'type' 			=> "Local",
				// 		'street_name1' 	=> $client_nominee_director["street_name2"],
				// 		'unit_no1'		=> $client_nominee_director["unit_no3"],
				// 		'unit_no2'		=> $client_nominee_director["unit_no4"],
				// 		'building_name1'=> $client_nominee_director["building_name2"],
				// 		'postal_code1'	=> $client_nominee_director["postal_code2"]
				// 	);
	   //          }
	   //          else
	   //          {
	                $address = array(
						'type' 			=> $client_nominee_director["officer_address_type"],
						'street_name1' 	=> $client_nominee_director["street_name1"],
						'unit_no1'		=> $client_nominee_director["nomi_officer_unit_no1"],
						'unit_no2'		=> $client_nominee_director["nomi_officer_unit_no2"],
						'building_name1'=> $client_nominee_director["building_name1"],
						'postal_code1'	=> $client_nominee_director["postal_code1"],
						'foreign_address1' => $client_nominee_director["foreign_address1"],
						'foreign_address2' => $client_nominee_director["foreign_address2"],
						'foreign_address3' => $client_nominee_director["foreign_address3"]
					);
	            //}
				$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");
				$document->setValue('individual address', $address_content);
				$document->setValue('individual nationality', $client_nominee_director["nomi_officer_nationality_name"]);
				$document->setValue('individual nric', $client_nominee_director["identification_no"]);
				$document->setValue('individual date of birth', date("d/m/Y", strtotime($client_nominee_director["date_of_birth"])));
				$document->setValue('individual date became nominee', $client_nominee_director["date_become_nominator"]);
				$document->setValue('individual ownership', "");
				$document->setValue('individual share', "");

				$document->setValue('corporate name', "");
				$document->setValue('corporate unique entity number', "");
				$document->setValue('corporate address', "");
				$document->setValue('corporate legal form', "");
				$document->setValue('corporate jurisdiction and act', "");
				$document->setValue('corporate name of corporate entity', "");
				$document->setValue('corporate identification number', "");
				$document->setValue('corporate date become nominee', "");
				$document->setValue('corporate ownership', "");
				$document->setValue('corporate share', "");
			}
			else
			{
				if($client_nominee_director["officer_company_company_name"] != null)
				{
					$nominator_name = $client_nominee_director["officer_company_company_name"];
					$nominator_ID = $client_nominee_director["register_no"];
					$address = array(
						'type' 			=> $client_nominee_director["officer_company_address_type"],
						'street_name1' 	=> $client_nominee_director["company_street_name"],
						'unit_no1'		=> $client_nominee_director["company_unit_no1"],
						'unit_no2'		=> $client_nominee_director["company_unit_no2"],
						'building_name1'=> $client_nominee_director["company_building_name"],
						'postal_code1'	=> $client_nominee_director["company_postal_code"],
						'foreign_address1' => $client_nominee_director["company_foreign_address1"],
						'foreign_address2' => $client_nominee_director["company_foreign_address2"],
						'foreign_address3' => $client_nominee_director["company_foreign_address3"]
					);
				}
				else if($client_nominee_director["client_company_name"] != null)
				{
					$nominator_name = $client_nominee_director["client_company_name"];
					$nominator_ID = $client_nominee_director["registration_no"];
					$address = array(
						'type' 			=> "Local",
						'street_name1' 	=> $client_nominee_director["street_name"],
						'unit_no1'		=> $client_nominee_director["unit_no1"],
						'unit_no2'		=> $client_nominee_director["unit_no2"],
						'building_name1'=> $client_nominee_director["building_name"],
						'postal_code1'	=> $client_nominee_director["postal_code"]
					);
				}
				$document->setValue('corporate name', $nominator_name);
				$document->setValue('corporate unique entity number', $client_nominee_director["entity_issued_by_registrar"]);
				
				$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");
				$document->setValue('corporate address', $address_content);
				$document->setValue('corporate legal form', ($client_nominee_director["legal_form_entity"] != null?$client_nominee_director["legal_form_entity"]:$client_nominee_director["client_company_type"] != null?$client_nominee_director["client_company_type"]:""));
				if($client_nominee_director["statutes_of"] != null)
				{
					$statutes_of = ', '.$client_nominee_director["statutes_of"];
				}
				else if($client_nominee_director["client_statutes_of"] != null)
				{
					$statutes_of = ', '.$client_nominee_director["client_statutes_of"];
				}
				else
				{
					$statutes_of = '';
				}
				$document->setValue('corporate jurisdiction and act', ($client_nominee_director["country_of_incorporation"]!=null?$client_nominee_director["country_of_incorporation"]:$client_nominee_director["client_country_of_incorporation"]!=null?$client_nominee_director["client_country_of_incorporation"]:"").$statutes_of);
				$document->setValue('corporate name of corporate entity', ($client_nominee_director["coporate_entity_name"]!=null?$client_nominee_director["coporate_entity_name"]:$client_nominee_director["client_coporate_entity_name"]!=null?$client_nominee_director["client_coporate_entity_name"]:""));
				$document->setValue('corporate identification number', $nominator_ID);
				$document->setValue('corporate date become nominee', $client_nominee_director["date_become_nominator"]);
				$document->setValue('corporate ownership', "");
				$document->setValue('corporate share', "");

				$document->setValue('individual name', "");
				$document->setValue('individual alias', "");
				$document->setValue('individual address', "");
				$document->setValue('individual nationality', "");
				$document->setValue('individual nric', "");
				$document->setValue('individual date of birth', "");
				$document->setValue('individual date became nominee', "");
				$document->setValue('individual ownership', "");
				$document->setValue('individual share', "");
			}

			$document->setValue('nominee director name', $nominee_director_name);
			$document->setValue('nominee director ID', $nominee_director_ID);

			$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $nominee_director_name).'.docx');

			$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $nominee_director_name).'.docx');
			//Microsoft Word End
		//}
	}

	public function generate_notice_of_controller($query_value, $transaction_task_name, $transaction_master_id, $company_code, $firm_id, $document_name, $get_secretary_info, $services)
	{
		if(count($get_secretary_info) > 0)
		{
			$secretary = $this->encryption->decrypt($get_secretary_info[0]["name"]);
			$secretary_identification_no = $this->encryption->decrypt($get_secretary_info[0]["identification_no"]);
		}
		else
		{
			$secretary = "";
			$secretary_identification_no = "";
		}

		$PHPWord = new \PhpOffice\PhpWord\PhpWord();

		$document = $PHPWord->loadTemplate($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Notice of Controller.docx");

		if($query_value['name'] != null)
    	{
    		if($services == "updateOtherServices")
    		{
    			$controller_name = $this->encryption->decrypt($query_value['name']);
    			$doc_company_name = $this->encryption->decrypt($query_value['name']);
    		}
    		else if($services == "updateRegController")
    		{
    			$controller_name = $query_value['name'];
    			$doc_company_name = $query_value['name'];
    		}	

    		$document->setValue('Corp Rep Controller Name', "");
        	$document->setValue('Corp Rep Controller address', "");
        	$document->setValue('Company Type', "");
        	$document->setValue('Country of Incorp', "");
        	$document->setValue('Corporate Entity', "");
        	$document->setValue('Corp Rep effective date', "");
    		$document->setValue('Controller Name', htmlspecialchars($controller_name));
    		$document->setValue('Is Corp Rep Controller Name', htmlspecialchars($controller_name));
    		$document->setValue('Corp Rep Or Person Controller Name', htmlspecialchars($controller_name));

    		if(isset($query_value['address']))
        	{
        		$full_address = $query_value['address'];
        	}
        	else
        	{
	    //         if($query_value["alternate_address"] == 1)
	    //         {
	    //         	$address = array(
					// 	'type' 			=> "Local",
					// 	'street_name1' 	=> $query_value["street_name2"],
					// 	'unit_no1'		=> $query_value["unit_no3"],
					// 	'unit_no2'		=> $query_value["unit_no4"],
					// 	'building_name1'=> $query_value["building_name2"],
					// 	'postal_code1'	=> $query_value["postal_code2"]
					// );
	    //         }
	    //         else
	    //         {
	            	$address = array(
						'type' 			=> $query_value["officer_address_type"],
						'street_name1' 	=> $query_value["street_name1"],
						'unit_no1'		=> $query_value["officer_unit_no1"],
						'unit_no2'		=> $query_value["officer_unit_no2"],
						'building_name1'=> $query_value["building_name1"],
						'postal_code1'	=> $query_value["postal_code1"],
						'foreign_address1' => $query_value["foreign_address1"],
						'foreign_address2' => $query_value["foreign_address2"],
						'foreign_address3' => $query_value["foreign_address3"]
					);
	            //}
	            $full_address = $this->transaction_word_model->write_address_local_foreign($address, "comma", "big_cap");
	        }
    		$document->setValue('Controller address', $full_address);

        	if($query_value['officer_nationality_name'] != null)
        	{
        		$nationality = $query_value["officer_nationality_name"];

        		$document->setValue('Controller nationality', htmlspecialchars($nationality));
        	}

        	if($query_value['date_of_birth'] != null)
        	{
				$date_of_birth = $query_value["date_of_birth"];
        		$date = explode('-', $date_of_birth);
				$day = $date[2];
				$month   = $date[1];
				$year  = $date[0];
    			$date_of_birth = $month.'/'.$day.'/'.$year;

        		$document->setValue('Controller date of birth', date("d-m-Y", strtotime($date_of_birth)));
        	}

        	$document->setValue('effective_date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $firm_id, null, $document_name));
        	$document->setValue('Corporate Representative', "");
    	}
    	elseif($query_value['officer_company_company_name'] != null)
    	{
    		if($services == "updateOtherServices")
    		{
    			$doc_company_name = $this->encryption->decrypt($query_value['officer_company_company_name']);
    		}
    		else if($services == "updateRegController")
    		{
    			$doc_company_name = $query_value['officer_company_company_name'];
    		}	

    		$controller_name = "Sir/Madam,";
    		$document->setValue('Controller Name', "");
    		$document->setValue('Controller address', "");
    		$document->setValue('Controller nationality', "");
    		$document->setValue('Controller identification no', "");
    		$document->setValue('Controller date of birth', "");
    		$document->setValue('effective_date', "");
    		$document->setValue('Corp Rep Controller Name', $doc_company_name);

    		if(isset($query_value['address']))
        	{
        		$full_address = $query_value['address'];
        	}
        	else
        	{
        		$address = array(
								'type' 			=> $query_value["officer_company_address_type"],
								'street_name1' 	=> $query_value["company_street_name"],
								'unit_no1'		=> $query_value["company_unit_no1"],
								'unit_no2'		=> $query_value["company_unit_no2"],
								'building_name1'=> $query_value["company_building_name"],
								'postal_code1'	=> $query_value["company_postal_code"],
								'foreign_address1' => $query_value["company_foreign_address1"],
								'foreign_address2' => $query_value["company_foreign_address2"],
								'foreign_address3' => $query_value["company_foreign_address3"]
							);
        		$full_address = $this->transaction_word_model->write_address_local_foreign($address, "comma", "big_cap");
        	}
    		if($full_address != null)
        	{
        		$document->setValue('Corp Rep Controller address', $full_address);
        	}

        	$document->setValue('Company Type', "");
        	$document->setValue('Country of Incorp', htmlspecialchars($query_value["country_of_incorporation"]));
        	$document->setValue('Corporate Entity', "");

    		$document->setValue('Is Corp Rep Controller Name', htmlspecialchars($controller_name));
    		if($transaction_task_name == "Share Allotment")
			{
				$document->setValue('Corp Rep Or Person Controller Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller Name for Share Member", $company_code, $firm_id, $query_value['id'], $document_name)));
			}
			else
			{
    			$document->setValue('Corp Rep Or Person Controller Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller Name", $company_code, $firm_id, $query_value['id'], $document_name)));
    		}
    		$document->setValue('Corp Rep effective date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $firm_id, null, $document_name));
    		$document->setValue('Corporate Representative', "Corporate Representative");

    	}
    	elseif($query_value['client_company_name'] != null)
    	{
    		if($services == "updateOtherServices")
    		{
    			$doc_company_name = $this->encryption->decrypt($query_value['client_company_name']);
    		}
    		else if($services == "updateRegController")
    		{
    			$doc_company_name = $query_value['client_company_name'];
    		}	

    		$controller_name = "Sir/Madam,";
    		$document->setValue('Controller Name', "");
    		$document->setValue('Controller address', "");
    		$document->setValue('Controller nationality', "");
    		$document->setValue('Controller identification no', "");
    		$document->setValue('Controller date of birth', "");
    		$document->setValue('effective_date', "");
    		$document->setValue('Corp Rep Controller Name', $doc_company_name);

    		if(isset($query_value['address']))
        	{
        		$full_address = $query_value['address'];
        	}
        	else
        	{
        		$address = array(
								'type' 			=> "Local",
								'street_name1' 	=> $query_value["street_name"],
								'unit_no1'		=> $query_value["client_unit_no1"],
								'unit_no2'		=> $query_value["client_unit_no2"],
								'building_name1'=> $query_value["building_name"],
								'postal_code1'	=> $query_value["postal_code"],
								'foreign_address1' => $query_value["foreign_add_1"],
								'foreign_address2' => $query_value["foreign_add_2"],
								'foreign_address3' => $query_value["foreign_add_3"]
							);
        		$full_address = $this->transaction_word_model->write_address_local_foreign($address, "comma", "big_cap");
        	}
    		if($full_address != null)
        	{
        		$document->setValue('Corp Rep Controller address', $full_address);
        	}
        	$document->setValue('Company Type', htmlspecialchars($query_value['company_type_name']));
        	$document->setValue('Country of Incorp', "SINGAPORE");
        	$document->setValue('Corporate Entity', "ACRA");

    		$document->setValue('Is Corp Rep Controller Name', htmlspecialchars($controller_name));
    		if($transaction_task_name == "Share Allotment")
			{
				$document->setValue('Corp Rep Or Person Controller Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller Name for Share Member", $company_code, $firm_id, $query_value['id'], $document_name)));
			}
			else
			{
    			$document->setValue('Corp Rep Or Person Controller Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller Name", $company_code, $firm_id, $query_value['id'], $document_name)));
    		}
    		
    		$document->setValue('Corp Rep effective date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $firm_id, null, $document_name));
    		$document->setValue('Corporate Representative', "Corporate Representative");
    	}

		if($query_value['identification_no'] != null)
    	{
    		if($services == "updateOtherServices")
			{
				$controller_id = $this->encryption->decrypt($query_value['identification_no']);
			}
			else if($services == "updateRegController")
			{
				$controller_id = $query_value['identification_no'];
			}
    		$document->setValue('Corp Rep Controller identification no', "");
    		$document->setValue('Controller identification no', htmlspecialchars($controller_id));
    		$document->setValue('Corp Rep Or Person Controller identification no', htmlspecialchars($controller_id));
    	}
    	elseif($query_value['register_no'] != null)
    	{
    		if($services == "updateOtherServices")
			{
				$controller_id = $this->encryption->decrypt($query_value['register_no']);
			}
			else if($services == "updateRegController")
			{
				$controller_id = $query_value['register_no'];
			}
    		$document->setValue('Controller identification no', "");
    		$document->setValue('Corp Rep Controller identification no', htmlspecialchars($controller_id));
    		if($transaction_task_name == "Share Allotment")
			{
				$document->setValue('Corp Rep Or Person Controller identification no', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller identification no for Share Member", $company_code, $firm_id, $query_value['id'], $document_name)));
			}
			else
			{
				$document->setValue('Corp Rep Or Person Controller identification no', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller identification no", $company_code, $firm_id, $query_value['id'], $document_name)));
			}
    	}
    	elseif($query_value['registration_no'] != null)
    	{
    		if($services == "updateOtherServices")
			{
				$controller_id = $this->encryption->decrypt($query_value['registration_no']);
			}
			else if($services == "updateRegController")
			{
				$controller_id = $query_value['registration_no'];
			}
    		$document->setValue('Controller identification no', "");
    		$document->setValue('Corp Rep Controller identification no', htmlspecialchars($controller_id));
    		if($transaction_task_name == "Share Allotment")
			{
				$document->setValue('Corp Rep Or Person Controller identification no', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller identification no for Share Member", $company_code, $firm_id, $query_value['id'], $document_name)));
			}
			else
			{
				$document->setValue('Corp Rep Or Person Controller identification no', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Corp Rep Or Person Controller identification no", $company_code, $firm_id, $query_value['id'], $document_name)));
			}
    	}

    	$document->setValue('Is Corp Rep effective date', $this->transaction_word_model->getWordValue($transaction_master_id, "effective_date", $company_code, $firm_id, null, $document_name));
    	$company_current_name = $this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, null, $document_name);
		$document->setValue('Company current name', htmlspecialchars($company_current_name));
		$document->setValue('Firm Name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Name", $company_code, $firm_id, null, $document_name)));
		$document->setValue('Firm Address', $this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $firm_id, null, $document_name));
		// echo json_encode($this->transaction_word_model->getWordValue($transaction_master_id, "Firm Address", $company_code, $firm_id, null, $document_name));
		$document->setValue('Secretarys name - appointment', htmlspecialchars($secretary));
		if($secretary_identification_no == "S8085328I")
		{
			$document->setImageValue('Secretary_signature', "img/thomas_signature.jpeg");
		}
		else
		{
			$document->setValue('Secretary_signature', "");
		}

		$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_company_name)).'.docx');
		$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_number.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->myUrlEncode($doc_company_name)).'.docx');
	}

	public function generate_declaration_for_register_of_controller($transaction_master_id, $company_code, $firm_id, $document_name, $client_controller)
   	{
  //  		for($t = 0 ; $t < count($latest_client_controller) ; $t++)
		// {
	   		//Microsoft Word

			$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration for register of controller.docx");

			$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $client_controller["id"], $document_name)));
			$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $firm_id, $client_controller["id"], $document_name));
			$document->setValue('Date of notice', $client_controller["date_of_notice"]);
			if($client_controller["name"] != null)
			{
				$controller_name = $client_controller["name"];
				$controller_ID = $client_controller["identification_no"];
			}
			else if($client_controller["officer_company_company_name"] != null)
			{
				$controller_name = $client_controller["officer_company_company_name"];
				$controller_ID = $client_controller["register_no"];
			}
			else if($client_controller["client_company_name"] != null)
			{
				$controller_name = $client_controller["client_company_name"];
				$controller_ID = $client_controller["registration_no"];
			}

			if($client_controller["name"] != null)
			{
				$document->setValue('individual name', $controller_name);
				$document->setValue('individual alias', $client_controller["alias"]);
				//echo json_encode($client_controller);
				// if($client_controller["alternate_address"] == 1)
	   //          {
	   //              $address = array(
				// 		'type' 			=> "Local",
				// 		'street_name1' 	=> $client_controller["street_name2"],
				// 		'unit_no1'		=> $client_controller["unit_no3"],
				// 		'unit_no2'		=> $client_controller["unit_no4"],
				// 		'building_name1'=> $client_controller["building_name2"],
				// 		'postal_code1'	=> $client_controller["postal_code2"]
				// 	);
	   //          }
	   //          else
	   //          {
	                $address = array(
						'type' 			=> $client_controller["officer_address_type"],
						'street_name1' 	=> $client_controller["street_name1"],
						'unit_no1'		=> $client_controller["officer_unit_no1"],
						'unit_no2'		=> $client_controller["officer_unit_no2"],
						'building_name1'=> $client_controller["building_name1"],
						'postal_code1'	=> $client_controller["postal_code1"],
						'foreign_address1' => $client_controller["foreign_address1"],
						'foreign_address2' => $client_controller["foreign_address2"],
						'foreign_address3' => $client_controller["foreign_address3"]
					);
	            //}

				$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");
				$document->setValue('individual address', $address_content);
				$document->setValue('individual nationality', $client_controller["officer_nationality_name"]);
				$document->setValue('individual nric', $controller_ID);
				$document->setValue('individual date of birth', date("d/m/Y", strtotime($client_controller["date_of_birth"])));
				$document->setValue('individual date became controller', $client_controller["date_of_registration"]);
				$document->setValue('individual ownership', "");
				$document->setValue('individual share', "");

				$document->setValue('corporate name', "");
				$document->setValue('corporate unique entity number', "");
				$document->setValue('corporate address', "");
				$document->setValue('corporate legal form', "");
				$document->setValue('corporate jurisdiction and act', "");
				$document->setValue('corporate name of corporate entity', "");
				$document->setValue('corporate identification number', "");
				$document->setValue('corporate date become controller', "");
				$document->setValue('corporate ownership', "");
				$document->setValue('corporate share', "");
			}
			else
			{
				$document->setValue('corporate name', $controller_name);
				$document->setValue('corporate unique entity number', $client_controller["entity_issued_by_registrar"]);
				if($client_controller["client_controller_field_type"] == "company")
                {
					$address = array(
						'type' 			=> $client_controller["officer_company_address_type"],
						'street_name1' 	=> $client_controller["company_street_name"],
						'unit_no1'		=> $client_controller["company_unit_no1"],
						'unit_no2'		=> $client_controller["company_unit_no2"],
						'building_name1'=> $client_controller["company_building_name"],
						'postal_code1'	=> $client_controller["company_postal_code"],
						'foreign_address1' => $client_controller["company_foreign_address1"],
						'foreign_address2' => $client_controller["company_foreign_address2"],
						'foreign_address3' => $client_controller["company_foreign_address3"]
					);
				}
				else if($client_controller["client_controller_field_type"] == "client")
				{
					$address = array(
						'type' 			=> "Local",
						'street_name1' 	=> $client_controller["street_name"],
						'unit_no1'		=> $client_controller["unit_no1"],
						'unit_no2'		=> $client_controller["unit_no2"],
						'building_name1'=> $client_controller["building_name"],
						'postal_code1'	=> $client_controller["postal_code"],
						'foreign_address1' => $client_controller["foreign_add_1"],
						'foreign_address2' => $client_controller["foreign_add_2"],
						'foreign_address3' => $client_controller["foreign_add_3"]
					);
				}
				$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");

				$document->setValue('corporate address', $address_content);
				$document->setValue('corporate legal form', ($client_controller["legal_form_entity"]!=null?$client_controller["legal_form_entity"]:$client_controller["client_company_type"]!=null?$client_controller["client_company_type"]:""));
                
				if($client_controller["statutes_of"] != null)
				{
					$statutes_of = ', '.$client_controller["statutes_of"];
				}
				else if($client_controller["client_statutes_of"] != null)
				{
					$statutes_of = ', '.$client_controller["client_statutes_of"];
				}
				else
				{
					$statutes_of = '';
				}
				$document->setValue('corporate jurisdiction and act', ($client_controller["country_of_incorporation"]!=null?$client_controller["country_of_incorporation"]:$client_controller["client_country_of_incorporation"]!=null?$client_controller["client_country_of_incorporation"]:"").$statutes_of);
				$document->setValue('corporate name of corporate entity', ($client_controller["coporate_entity_name"]!=null?$client_controller["coporate_entity_name"]:$client_controller["client_coporate_entity_name"]!=null?$client_controller["client_coporate_entity_name"]:""));
				$document->setValue('corporate identification number', $controller_ID);
				$document->setValue('corporate date become controller', $client_controller["date_of_registration"]);
				$document->setValue('corporate ownership', "");
				$document->setValue('corporate share', "");

				$document->setValue('individual name', "");
				$document->setValue('individual alias', "");
				$document->setValue('individual address', "");
				$document->setValue('individual nationality', "");
				$document->setValue('individual nric', "");
				$document->setValue('individual date of birth', "");
				$document->setValue('individual date became controller', "");
				$document->setValue('individual ownership', "");
				$document->setValue('individual share', "");
			}

			$document->setValue('controller name', $controller_name);
			$document->setValue('controller ID', $controller_ID);

			$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $controller_name).'.docx');

			$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $controller_name).'.docx');
			//Microsoft Word End
		//}
   	}
   	public function generate_declaration_for_controller_of_director($transaction_master_id, $company_code, $firm_id, $document_name, $director_client_controller, $transaction_task_name)
   	{
  //  		for($t = 0 ; $t < count($latest_client_controller) ; $t++)
		// {
	   		//Microsoft Word
		$document = new \PhpOffice\PhpWord\TemplateProcessor($_SERVER['DOCUMENT_ROOT'].$this->systemName."/assets/uploads/file/Declaration for Controller - Director(with Declare By).docx");
		ini_set("pcre.backtrack_limit", "-1");

		if($transaction_task_name == "Share Transfer")
		{
			$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, null, $document_name)));
			$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $firm_id, null, $document_name));
			$document->setValue('Date of notice', "");

			$num = count($director_client_controller);

			$document->cloneBlock('cloneBlock', count($director_client_controller), true, true);

			foreach($director_client_controller as $key => $client_controller)
			{
				if($client_controller["name"] != null)
				{
					$controller_name = $this->encryption->decrypt($client_controller["name"]);
					$controller_ID = $this->encryption->decrypt($client_controller["identification_no"]);
				}
				else if($client_controller["officer_company_company_name"] != null)
				{
					$controller_name = $this->encryption->decrypt($client_controller["officer_company_company_name"]);
					$controller_ID = $this->encryption->decrypt($client_controller["register_no"]);
				}
				else if($client_controller["client_company_name"] != null)
				{
					$controller_name = $this->encryption->decrypt($client_controller["client_company_name"]);
					$controller_ID = $this->encryption->decrypt($client_controller["registration_no"]);
				}

				if($client_controller["name"] != null)
				{
					$document->setValue('individual name#'.($key+1), $controller_name);
					$document->setValue('individual alias#'.($key+1), $client_controller["alias"]);
					if(isset($client_controller['address']))
                	{
                		$full_address = $client_controller['address'];
                	}
                	else
                	{
						$address = array(
							'type' 			=> $client_controller["officer_address_type"],
							'street_name1' 	=> $client_controller["street_name1"],
							'unit_no1'		=> $client_controller["officer_unit_no1"],
							'unit_no2'		=> $client_controller["officer_unit_no2"],
							'building_name1'=> $client_controller["building_name1"],
							'postal_code1'	=> $client_controller["postal_code1"],
							'foreign_address1' => $client_controller["foreign_address1"],
							'foreign_address2' => $client_controller["foreign_address2"],
							'foreign_address3' => $client_controller["foreign_address3"]
						);
						$full_address = $this->write_address_local_foreign($address, "comma", "big_cap");
					}
					
					$document->setValue('individual address#'.($key+1), $full_address);

					if($client_controller['officer_nationality_name'] != null)
                	{
                		$nationality = $client_controller["officer_nationality_name"];

                		$document->setValue('individual nationality#'.($key+1), htmlspecialchars($nationality));
                	}
					$document->setValue('individual nric#'.($key+1), $controller_ID);
					$document->setValue('individual date of birth#'.($key+1), date("d/m/Y", strtotime($client_controller["date_of_birth"])));
					$document->setValue('individual date became controller#'.($key+1), "");
					$document->setValue('individual ownership#'.($key+1), $client_controller['percentage_share_number']."%");
					$document->setValue('individual share#'.($key+1), number_format($client_controller['share_number']));

					$document->setValue('corporate name#'.($key+1), "");
					$document->setValue('corporate unique entity number#'.($key+1), "");
					$document->setValue('corporate address#'.($key+1), "");
					$document->setValue('corporate legal form#'.($key+1), "");
					$document->setValue('corporate jurisdiction and act#'.($key+1), "");
					$document->setValue('corporate name of corporate entity#'.($key+1), "");
					$document->setValue('corporate identification number#'.($key+1), "");
					$document->setValue('corporate date become controller#'.($key+1), "");
					$document->setValue('corporate ownership#'.($key+1), "");
					$document->setValue('corporate share#'.($key+1), "");
				}
				else
				{
					$document->setValue('corporate name#'.($key+1), $controller_name);
					
					if($client_controller["client_controller_field_type"] == "company")
	                {
	                	$document->setValue('corporate unique entity number#'.($key+1), $client_controller["entity_issued_by_registrar"]);
						$address = array(
							'type' 			=> $client_controller["officer_company_address_type"],
							'street_name1' 	=> $client_controller["company_street_name"],
							'unit_no1'		=> $client_controller["company_unit_no1"],
							'unit_no2'		=> $client_controller["company_unit_no2"],
							'building_name1'=> $client_controller["company_building_name"],
							'postal_code1'	=> $client_controller["company_postal_code"],
							'foreign_address1' => $client_controller["company_foreign_address1"],
							'foreign_address2' => $client_controller["company_foreign_address2"],
							'foreign_address3' => $client_controller["company_foreign_address3"]
						);
					}
					else if($client_controller["client_controller_field_type"] == "client")
					{
						$document->setValue('corporate unique entity number#'.($key+1), "");
						$address = array(
							'type' 			=> "Local",
							'street_name1' 	=> $client_controller["street_name"],
							'unit_no1'		=> $client_controller["unit_no1"],
							'unit_no2'		=> $client_controller["unit_no2"],
							'building_name1'=> $client_controller["building_name"],
							'postal_code1'	=> $client_controller["postal_code"],
							'foreign_address1' => $client_controller["foreign_add_1"],
							'foreign_address2' => $client_controller["foreign_add_2"],
							'foreign_address3' => $client_controller["foreign_add_3"]
						);
					}
					$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");

					$document->setValue('corporate address#'.($key+1), $address_content);
					$document->setValue('corporate legal form#'.($key+1), ($client_controller["legal_form_entity"]!=null?$client_controller["legal_form_entity"]:$client_controller["company_type_name"]!=null?$client_controller["company_type_name"]:""));
	                
					if($client_controller["statutes_of"] != null)
					{
						$statutes_of = ', '.$client_controller["statutes_of"];
					}
					else if($client_controller["client_statutes_of"] != null)
					{
						$statutes_of = ', '.$client_controller["client_statutes_of"];
					}
					else
					{
						$statutes_of = '';
					}
					$document->setValue('corporate jurisdiction and act#'.($key+1), ($client_controller["country_of_incorporation"]!=null?$client_controller["country_of_incorporation"]:$client_controller["client_country_of_incorporation"]!=null?$client_controller["client_country_of_incorporation"]:"").$statutes_of);
					$document->setValue('corporate name of corporate entity#'.($key+1), ($client_controller["coporate_entity_name"]!=null?$client_controller["coporate_entity_name"]:$client_controller["client_coporate_entity_name"]!=null?$client_controller["client_coporate_entity_name"]:""));
					$document->setValue('corporate identification number#'.($key+1), $controller_ID);
					$document->setValue('corporate date become controller#'.($key+1), "");
					$document->setValue('corporate ownership#'.($key+1), $client_controller['percentage_share_number']."%");
					$document->setValue('corporate share#'.($key+1), number_format($client_controller['share_number']));

					$document->setValue('individual name#'.($key+1), "");
					$document->setValue('individual alias#'.($key+1), "");
					$document->setValue('individual address#'.($key+1), "");
					$document->setValue('individual nationality#'.($key+1), "");
					$document->setValue('individual nric#'.($key+1), "");
					$document->setValue('individual date of birth#'.($key+1), "");
					$document->setValue('individual date became controller#'.($key+1), "");
					$document->setValue('individual ownership#'.($key+1), "");
					$document->setValue('individual share#'.($key+1), "");
				}

				$document->setValue('controller name#'.($key+1), $controller_name);
				$document->setValue('controller ID#'.($key+1), $controller_ID);

				if(($key+1) == $num)
				{
					$document->setValue('pagebreak#'.($key+1), '');
				}
				else
				{
					$document->setValue('pagebreak#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
				}
			}
			$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $director_client_controller[0]["id"], $document_name)).'.docx');
			$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $director_client_controller[0]["id"], $document_name)).'.docx');
		}
		else
		{
			$document->setValue('Company current name', htmlspecialchars($this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $director_client_controller[0]["id"], $document_name)));
			$document->setValue('UEN', $this->transaction_word_model->getWordValue($transaction_master_id, "UEN", $company_code, $firm_id, $director_client_controller[0]["id"], $document_name));
			$document->setValue('Date of notice', $director_client_controller[0]["date_of_notice"]);

			$num = count($director_client_controller);

			$document->cloneBlock('cloneBlock', count($director_client_controller), true, true);

			foreach($director_client_controller as $key => $client_controller)
			{
				if($client_controller["name"] != null)
				{
					$controller_name = $client_controller["name"];
					$controller_ID = $client_controller["identification_no"];
				}
				else if($client_controller["officer_company_company_name"] != null)
				{
					$controller_name = $client_controller["officer_company_company_name"];
					$controller_ID = $client_controller["register_no"];
				}
				else if($client_controller["client_company_name"] != null)
				{
					$controller_name = $client_controller["client_company_name"];
					$controller_ID = $client_controller["registration_no"];
				}

				if($client_controller["name"] != null)
				{
					$document->setValue('individual name#'.($key+1), $controller_name);
					$document->setValue('individual alias#'.($key+1), $client_controller["alias"]);
					//echo json_encode($client_controller);
					// if($client_controller["alternate_address"] == 1)
		   //          {
		   //              $address = array(
					// 		'type' 			=> "Local",
					// 		'street_name1' 	=> $client_controller["street_name2"],
					// 		'unit_no1'		=> $client_controller["unit_no3"],
					// 		'unit_no2'		=> $client_controller["unit_no4"],
					// 		'building_name1'=> $client_controller["building_name2"],
					// 		'postal_code1'	=> $client_controller["postal_code2"]
					// 	);
		   //          }
		   //          else
		   //          {
		                $address = array(
							'type' 			=> $client_controller["officer_address_type"],
							'street_name1' 	=> $client_controller["street_name1"],
							'unit_no1'		=> $client_controller["officer_unit_no1"],
							'unit_no2'		=> $client_controller["officer_unit_no2"],
							'building_name1'=> $client_controller["building_name1"],
							'postal_code1'	=> $client_controller["postal_code1"],
							'foreign_address1' => $client_controller["foreign_address1"],
							'foreign_address2' => $client_controller["foreign_address2"],
							'foreign_address3' => $client_controller["foreign_address3"]
						);
		            //}

					$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");
					$document->setValue('individual address#'.($key+1), $address_content);
					if($client_controller['officer_nationality_name'] != null)
                	{
                		$nationality = $client_controller["officer_nationality_name"];

                		$document->setValue('individual nationality#'.($key+1), htmlspecialchars($nationality));
                	}
					$document->setValue('individual nric#'.($key+1), $controller_ID);
					$document->setValue('individual date of birth#'.($key+1), date("d/m/Y", strtotime($client_controller["date_of_birth"])));
					$document->setValue('individual date became controller#'.($key+1), $client_controller["date_of_registration"]);
					$document->setValue('individual ownership#'.($key+1), "");
					$document->setValue('individual share#'.($key+1), "");

					$document->setValue('corporate name#'.($key+1), "");
					$document->setValue('corporate unique entity number#'.($key+1), "");
					$document->setValue('corporate address#'.($key+1), "");
					$document->setValue('corporate legal form#'.($key+1), "");
					$document->setValue('corporate jurisdiction and act#'.($key+1), "");
					$document->setValue('corporate name of corporate entity#'.($key+1), "");
					$document->setValue('corporate identification number#'.($key+1), "");
					$document->setValue('corporate date become controller#'.($key+1), "");
					$document->setValue('corporate ownership#'.($key+1), "");
					$document->setValue('corporate share#'.($key+1), "");
				}
				else
				{
					$document->setValue('corporate name#'.($key+1), $controller_name);
					$document->setValue('corporate unique entity number#'.($key+1), $client_controller["entity_issued_by_registrar"]);
					if($client_controller["client_controller_field_type"] == "company")
	                {
						$address = array(
							'type' 			=> $client_controller["officer_company_address_type"],
							'street_name1' 	=> $client_controller["company_street_name"],
							'unit_no1'		=> $client_controller["company_unit_no1"],
							'unit_no2'		=> $client_controller["company_unit_no2"],
							'building_name1'=> $client_controller["company_building_name"],
							'postal_code1'	=> $client_controller["company_postal_code"],
							'foreign_address1' => $client_controller["company_foreign_address1"],
							'foreign_address2' => $client_controller["company_foreign_address2"],
							'foreign_address3' => $client_controller["company_foreign_address3"]
						);
					}
					else if($client_controller["client_controller_field_type"] == "client")
					{
						$address = array(
							'type' 			=> "Local",
							'street_name1' 	=> $client_controller["street_name"],
							'unit_no1'		=> $client_controller["unit_no1"],
							'unit_no2'		=> $client_controller["unit_no2"],
							'building_name1'=> $client_controller["building_name"],
							'postal_code1'	=> $client_controller["postal_code"],
							'foreign_address1' => $client_controller["foreign_add_1"],
							'foreign_address2' => $client_controller["foreign_add_2"],
							'foreign_address3' => $client_controller["foreign_add_3"]
						);
					}
					$address_content = $this->write_address_local_foreign($address, "comma", "big_cap");

					$document->setValue('corporate address#'.($key+1), $address_content);
					$document->setValue('corporate legal form#'.($key+1), ($client_controller["legal_form_entity"]!=null?$client_controller["legal_form_entity"]:$client_controller["client_company_type"]!=null?$client_controller["client_company_type"]:""));
	                
					if($client_controller["statutes_of"] != null)
					{
						$statutes_of = ', '.$client_controller["statutes_of"];
					}
					else if($client_controller["client_statutes_of"] != null)
					{
						$statutes_of = ', '.$client_controller["client_statutes_of"];
					}
					else
					{
						$statutes_of = '';
					}
					$document->setValue('corporate jurisdiction and act#'.($key+1), ($client_controller["country_of_incorporation"]!=null?$client_controller["country_of_incorporation"]:$client_controller["client_country_of_incorporation"]!=null?$client_controller["client_country_of_incorporation"]:"").$statutes_of);
					$document->setValue('corporate name of corporate entity#'.($key+1), ($client_controller["coporate_entity_name"]!=null?$client_controller["coporate_entity_name"]:$client_controller["client_coporate_entity_name"]!=null?$client_controller["client_coporate_entity_name"]:""));
					$document->setValue('corporate identification number#'.($key+1), $controller_ID);
					$document->setValue('corporate date become controller#'.($key+1), $client_controller["date_of_registration"]);
					$document->setValue('corporate ownership#'.($key+1), "");
					$document->setValue('corporate share#'.($key+1), "");

					$document->setValue('individual name#'.($key+1), "");
					$document->setValue('individual alias#'.($key+1), "");
					$document->setValue('individual address#'.($key+1), "");
					$document->setValue('individual nationality#'.($key+1), "");
					$document->setValue('individual nric#'.($key+1), "");
					$document->setValue('individual date of birth#'.($key+1), "");
					$document->setValue('individual date became controller#'.($key+1), "");
					$document->setValue('individual ownership#'.($key+1), "");
					$document->setValue('individual share#'.($key+1), "");
				}

				$document->setValue('controller name#'.($key+1), $controller_name);
				$document->setValue('controller ID#'.($key+1), $controller_ID);

				if(($key+1) == $num)
				{
					$document->setValue('pagebreak#'.($key+1), '');
				}
				else
				{
					$document->setValue('pagebreak#'.($key+1), '</w:t></w:r>'.'<w:r><w:br w:type="page"/></w:r>'. '<w:r><w:t>');
				}

			}

			$document->saveAs($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $director_client_controller[0]["id"], $document_name)).'.docx');
			$this->zip->read_file($_SERVER['DOCUMENT_ROOT'].$this->systemName.'/pdf/document/'.$document_name.' - '.preg_replace('/[^a-zA-Z0-9 _\.-]/', '', $this->transaction_word_model->getWordValue($transaction_master_id, "Company current name", $company_code, $firm_id, $director_client_controller[0]["id"], $document_name)).'.docx');
		}
			//Microsoft Word End
		//}
   	}
   	public function save_incorporate_pdf($data)
	{
		$this->db->insert("transaction_pending_documents",$data);
	}

	public function get_header_template($document_type, $firm_id = NULL, $got_gst = NULL)
	{
		if(!is_null($firm_id))
		{
			$firm = $this->db->query("SELECT firm.*, firm_email.email, firm_telephone.telephone, firm_fax.fax from firm 
										JOIN firm_email ON firm_email.firm_id = firm.id AND firm_email.primary_email = 1 
										JOIN firm_telephone ON firm_telephone.firm_id = firm.id AND firm_telephone.primary_telephone = 1 
										JOIN firm_fax ON firm_fax.firm_id = firm.id AND firm_fax.primary_fax = 1
										where firm.id = ". $firm_id);
        	$firm = $firm->result_array();
        	$firm_logo = !empty($firm[0]["file_name"])?'<img src="uploads/logo/'. $firm[0]["file_name"] .'" height="60" />' : '';

        	if($firm[0]["branch_name"] != null)
			{
				$branch_name = 'Branch: '.$firm[0]["branch_name"].'<br />';
			}
			else
			{
				$branch_name = '';
			}
		}	

		if($document_type == "DRIW")
		{
			return '<p style="text-align: center;"><strong style="font-size: 12pt;"><span class="myclass mceNonEditable">{{Company current name}}</span><br /></strong><span style="font-size: 9pt;">(the &ldquo;Company&rdquo;)</span><br /><span style="font-size: 9pt;">(Company Registration No.: </span><span style="font-size: 9pt;"><span class="myclass mceNonEditable">{{UEN}}</span></span><span style="font-size: 9pt;">)</span><br /><span style="font-size: 9pt;">(Incorporated in the Republic of Singapore)</span></p>
				<p style="text-align: center;"><span style="font-size: 10pt;">RESOLUTION IN WRITING PURSUANT TO REGULATION OF THE COMPANY&rsquo;S CONSTITUTION</span></p>
				<hr />';
		}
		elseif($document_type == "Attendance")
		{
			return '<p style="text-align: center;"><strong style="font-size: 12pt;"><span class="myclass mceNonEditable">{{Company current name}}</span><br /></strong><span style="font-size: 9pt;">(the &ldquo;Company&rdquo;)</span><br /><span style="font-size: 9pt;">(Company Registration No.: </span><span style="font-size: 9pt;"><span class="myclass mceNonEditable">{{UEN}}</span></span><span style="font-size: 9pt;">)</span><br /><span style="font-size: 9pt;">(Incorporated in the Republic of Singapore)</span></p>
				<p style="text-align: center;"><span style="font-size: 10pt;"><strong>ATTENDANCE LIST</strong></span></p>';
		}
		elseif($document_type == "Company Info Header")
		{
			if($got_gst)
			{
				$gst_with_uen = "UEN and GST Reg. No.";
			}
			else
			{
				$gst_with_uen = "UEN";
			}

			return '<table style="width: 100%; border-collapse: collapse; height: 80px; font-family: arial, helvetica, sans-serif; font-size: 10pt;" border="0">
					<tbody>
						<tr style="height: 80px;"><td style="width: 24.275%; text-align: left; height: 80px;" align="center">'.$firm_logo.'</td><td style="width:5px;"></td>
							<td style="width: 75.725%; height: 80px;"><span style="font-size: 14pt;"><strong>'.$firm[0]["name"].'</strong></span><br /><span style="font-size: 8pt; text-align: left;">'.$gst_with_uen.': '. $firm[0]["registration_no"] .'<br />'.$branch_name.'Address: '. $firm[0]["street_name"] .', #'. $firm[0]["unit_no1"] .'-'.$firm[0]["unit_no2"].' '. $firm[0]["building_name"] .', Singapore '. $firm[0]["postal_code"] .'<br />Tel: '. $firm[0]["telephone"] .' &nbsp; Fax: '. $firm[0]["fax"] .'&nbsp;</span></td>
						</tr>
					</tbody>
				</table>';
		}
		elseif($document_type == "headerOnly")
		{
			return '<p style="text-align: center;"><strong style="font-size: 12pt;"><span class="myclass mceNonEditable">{{Company current name}}</span><br /></strong><span style="font-size: 9pt;">(the &ldquo;Company&rdquo;)</span><br /><span style="font-size: 9pt;">(Company Registration No.: </span><span style="font-size: 9pt;"><span class="myclass mceNonEditable">{{UEN}}</span></span><span style="font-size: 9pt;">)</span><br /><span style="font-size: 9pt;">(Incorporated in the Republic of Singapore)</span></p>';
		}
	}

	public function end_of_resol_page_break($obj_pdf, $content)
	{
		// write content and page break
		if (($pos = strpos($content, "END OF THE RESOLUTION IN WRITING")) !== FALSE) { 
			$resol_content = substr($content, 0, $pos + 33); 

			$obj_pdf->writeHTML($resol_content, true, false, false, false, '');
			$obj_pdf->AddPage();

			return substr($content, $pos + strlen('END OF THE RESOLUTION IN WRITING'));
		}
		return $content;
	}

	public function new_end_of_resol_page_break($obj_pdf, $content, $document_name)
	{
		$start_from_line = 0;
		$new_line = '';

		if($document_name == "AGM & AR - DRIW")
		{
			$start_from_line = 100;
		}

		// write content and page break
		if (($pos = strpos($content, "END OF THE RESOLUTION IN WRITING")) !== FALSE) { 
			$resol_content = substr($content, 0, $pos + strlen('END OF THE RESOLUTION IN WRITING')); 

			$new_line .= $this->produce_p_tag($obj_pdf, $start_from_line, $resol_content);

			return preg_replace('/END OF THE RESOLUTION IN WRITING/', 'END OF THE RESOLUTION IN WRITING' . $new_line, $content, 1);
		}
		return $content;
	}

	public function break_page($obj_pdf, $content)
	{
		$pattern = "/{{[^}}]*}}/";
		$subject = $content;
		preg_match_all($pattern, $subject, $matches);
		
		for($r = 0; $r < count($matches[0]); $r++)
		{
			// write content and page break
			if (($pos = strpos($content, "{{break_page}}")) !== FALSE) { 
				$prev_content = substr($content, 0, $pos); 

				$obj_pdf->writeHTML($prev_content, true, false, false, false, '');
				$obj_pdf->AddPage();

				$content =  substr($content, $pos + 14);
			}
		}

		return $content;
	}

	public function break_page_or_not($obj_pdf, $content, $start_from_line, $document_name, $break_page_needed)
	{
		$new_line = '';

		if($break_page_needed)
		{
			if($document_name == "AGM & AR - DRIW")
			{
				// temporary write content so that can know how many new lines need to put in
				if (($pos = strpos($content, "{{break page or not}}")) !== FALSE) { 
					$temp_content = substr($content, 0, $pos + strlen('{{break page or not}}')); 

					$new_line = $this->produce_p_tag($obj_pdf, $start_from_line, $temp_content);
				}

				$content = preg_replace('/{{break page or not}}/', $new_line, $content, 1);
			}
		}
		else
		{
			$content = preg_replace('/{{break page or not}}/', '', $content, 1);
		}

		return array('content' => $content, 'status' => TRUE);
	}

	public function produce_p_tag($obj_pdf, $start_from_line, $temp_content)
	{
		$count = 0;
		$new_line = '';

		$obj_pdf->writeHTML($temp_content, true, false, false, false, '');
		
		while($obj_pdf->getY() > $start_from_line)
		{
			$count++;
			$new_line .= '<p>&nbsp;</p>';

			$obj_pdf->writeHTML('<p>&nbsp;</p>', true, false, false, false, '');
		}

		$obj_pdf->AddPage(); // Add page so that the final content does not write in the temporary page.

		$total_pages = (int)$obj_pdf->getNumPages();	// get total pages of temporary content.

		// delete all temporary content pages.
		for($page = $total_pages - 1; $page > 0; $page--)
		{
			$obj_pdf->deletePage($page);
		}

		return $new_line;
	}

	// this is will removed after all address have use the write_address_local_foreign function.
	public function write_address($street_name, $unit_no1, $unit_no2, $building_name, $postal_code, $type)
	{
		$unit = '';
		$unit_building_name = '';

		if($type == "normal")
		{
			$br1 = '';
			$br2 = '';
		}
		elseif($type == "letter")
		{
			$br1 = ' <br/>';
			$br2 = ' <br/>';
		}
		elseif($type == "comma")
		{
			$br1 = ', ';
			$br2 = ', ';
		}

		// Add unit
		if(!empty($unit_no1) && !empty($unit_no2))
		{
			$unit = '#' . $unit_no1 . '-' . $unit_no2;
		}
		else
		{
			if($type != "letter")
			{
				$br2 = '';
			}
		}

		// Add building
		if(!empty($building_name) && !empty($unit))
		{
			$unit_building_name = $unit . ' ' . $building_name;
		}
		elseif(!empty($unit))
		{
			$unit_building_name = $unit;
		}
		elseif(!empty($building_name))
		{
			$unit_building_name = $building_name;
		}

		return $street_name . $br1 . $unit_building_name . $br2 . 'Singapore ' . $postal_code;
	}

	// latest version include foreign address. 
	public function write_address_local_foreign($address, $type, $style)
	{
		$unit = '';
		$unit_building_name = '';

		if($type == "normal")
		{
			$br1 = '';
			$br2 = '';
		}
		elseif($type == "letter")
		{
			$br1 = ', <br/>';
			$br2 = ', <br/>';
		}
		elseif($type == "comma")
		{
			$br1 = ', ';
			$br2 = ', ';
		}

		if($address['type'] == "Local")
		{
			// Add unit
			if(!empty($address['unit_no1']) && !empty($address['unit_no2']))
			{
				$unit = '#' . $address['unit_no1'] . '-' . $address['unit_no2'];
			}
			// else
			// {
			// 	if($type != "letter")
			// 	{
			// 		$br2 = '';
			// 	}
			// }

			// Add building
			if(!empty($address['building_name1']) && !empty($unit))
			{
				$unit_building_name = $unit . ' ' . $address['building_name1'] . $br2;
			}
			elseif(!empty($unit))
			{
				$unit_building_name = $unit . $br2;
			}
			elseif(!empty($address['building_name1']))
			{
				$unit_building_name = $address['building_name1'] . $br2;
			}

			if($style == "big_cap")
			{
				$sg_word = 'SINGAPORE ';
			}
			else
			{
				$sg_word = 'Singapore ';
			}

			return $address['street_name1'] . $br1 . $unit_building_name . $sg_word . $address['postal_code1'];
		}
		else if($address['type'] == "Foreign")
		{
			$foreign_address1 = !empty($address["foreign_address1"])? $address["foreign_address1"]: '';

			if(!empty($address["foreign_address1"]))
			{
				if(substr($address["foreign_address1"], -1) == ",")
				{
					$foreign_address1 = rtrim($address["foreign_address1"],',');	// remove , if there is any at last character
				}
				else
				{
					$foreign_address1 = $address["foreign_address1"];
				}
			}

			if(!empty($address["foreign_address2"]))
			{
				if(substr($address["foreign_address2"], -1) == ",")
				{
					$foreign_address2 = $br1 . rtrim($address["foreign_address2"],',');		// remove , if there is any at last character
				}
				else
				{
					$foreign_address2 = $br1 . $address["foreign_address2"];
				}
			}
			else
			{
				$foreign_address2 = '';
			}

			$foreign_address3 = !empty($address["foreign_address3"])? $br2 . $address["foreign_address3"]: '';

			return $foreign_address1.$foreign_address2.$foreign_address3;
		}
	}

	public function write_list_number($content)
	{
		$temp = '';
    	$pattern = "/{{[^}}]*}}/";
		$subject = $content;
		preg_match_all($pattern, $subject, $matches_no);
		$counter = 1;

		for($c = 0; $c < count($matches_no[0]); $c++)
		{
			$string1 = (str_replace('{{', '',$matches_no[0][$c]));
			$string2 = (str_replace('}}', '',$string1));

			$replace_string = $matches_no[0][$c];

			if($string2 == "no")
			{	
				$temp = $counter . '.';
				$content = preg_replace('/{{no}}/', $temp, $content, 1);

				$counter++;
			}
		}

		return $content;
	}

	public function replace_verbs_plural($new_contents, $count_length) 
	{
		$pattern = "/{_[^}}]*_}/";
		preg_match_all($pattern, $new_contents, $match);

		$isPlural = $count_length > 1? true: false;

		if(count($match[0]) != 0)
   		{
	   		for($r = 0; $r < count($match[0]); $r++)
			{
				$string1 = (str_replace('{_', '',$match[0][$r]));
				$string2 = (str_replace('_}', '',$string1));

				$content = '';

				if($string2 == "sing/plu s")	// eg. director(s)
				{
					$replace_string = $match[0][$r];

					if($isPlural)
					{
						$content = "s";
					}
				}
				elseif($string2 == "sing/plu s'") // eg. director(s')
				{
					$replace_string = $match[0][$r];
					
					if($isPlural)
					{
						$content = "s";
					}
					else
					{
						$content = "'s";
					}
				}
				elseif($string2 == "tense's")	// eg. director('s)
				{
					$replace_string = $match[0][$r];

					if(!$isPlural)
					{
						$content = "s";
					}
				}
				elseif($string2 == "is/are")
				{
					$replace_string = $match[0][$r];

					if(!$isPlural)
					{
						$content = "is";
					}
					else
					{
						$content = "are";
					}
				}

				$new_contents = str_replace($replace_string, $content, $new_contents);
			}

			return $new_contents;
		}
		else 
		{
			return $new_contents;
		}
	}
}

 class MYBILLINGPDF extends TCPDF {
 	protected $last_page_flag = false;
 	protected $total_page = 1;
 	protected $one_page_only = false;

 	public function Close() {
	    $this->last_page_flag = true;

	    if($this->total_page == 1){
	    	$this->one_page_only = true;
	    }

	    parent::Close();
	}

    //Page header
    public function Header() {
		$headerData = $this->getHeaderData();
        $this->SetFont('helvetica', 'B', 23);
        $this->writeHTMLCell(0, 0, '', '', $headerData['string'], 0, 0, false, "L", true);
   }

   public function Footer() {
        $this->SetY(-18);
        $this->Ln();
        
        // Page number
        if (empty($this->pagegroups)) {
            $pagenumtxt = 'Page '.' '.$this->getAliasNumPage().'/'.$this->getAliasNbPages();
        } else {
            $pagenumtxt = 'Page '.' '.$this->getPageNumGroupAlias().'/'.$this->getPageGroupAlias();
        }

        if(!$this->one_page_only){
        	$this->SetFont('helvetica', '', 8);
        	$this->Cell(0, 10, $pagenumtxt, 0, false, 'C', 0, '', 0, false, 'T', 'M');
        }
        
        if(!$this->last_page_flag){
	        $this->SetFont('helvetica', 'I', 8);
	        $this->Cell(0, 10, 'continue to the next page...', 0, false, 'R', 0, '', 0, false, 'T', 'M');
        }

        $this->total_page++;
   }
}


class MYPDF extends TCPDF {
	public function Header() {
		$headerData = $this->getHeaderData();
        $this->writeHTMLCell(0, 0, '', '', $headerData['string'], 0, 0, false, "L", true);
   }

   public function Footer() {
		// Position at 25 mm from bottom
        $this->SetY(-20);
        $this->SetX(10);
        // Set font
        $this->SetFont('helvetica', 'B', 8);
		$this->Cell(0, 0, $this->getAliasRightShift().'Page '.$this->PageNo().' of '.$this->getAliasNbPages(), 0, 0, 'R');
		$this->Ln();

		$logoX = 133; // 186mm. The logo will be displayed on the right side close to the border of the page
		$logoFileName = base_url()."/img/footer_img.png";
		$logoWidth = 50; // 15mm
		$logo = $this->Image($logoFileName, $logoX, $this->GetY(), $logoWidth);
   }
}

class ENGAGEMENT_PDF extends TCPDF {
	public function Header() {
		$headerData = $this->getHeaderData();
        $this->writeHTMLCell(0, 0, '', '', $headerData['string'], 0, 0, false, "L", true);
   }

   public function Footer() {
   		//-----------------OLD---------------------------
		// // Position at 25 mm from bottom
  //       $this->SetY(-20);
  //       $this->SetX(10);
  //       // Set font
  //       $this->SetFont('helvetica', '', 8);
        
  //       // Page number
		// $this->Cell(0, 0, 'Page '.$this->getAliasNumPage().'/'.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
		// $this->Ln();

		// $logoX = 133; // 186mm. The logo will be displayed on the right side close to the border of the page
		// $logoFileName = base_url()."/img/footer_img.png";
		// $logoWidth = 50; // 15mm
		// $logo = $this->Image($logoFileName, $logoX, $this->GetY(), $logoWidth);
   		//----------------------------------------------

   		// Position at 25 mm from bottom
        $this->SetY(-20);
        $this->SetX(30);
        // Set font
        $this->SetFont('helvetica', '', 8);
        
        // Page number
		$this->Cell(0, 0, 'Page '.$this->getAliasNumPage().'/'.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
		$this->Ln();

		$logoX = 148; // 186mm. The logo will be displayed on the right side close to the border of the page
		$logoFileName = base_url()."/img/footer_img.png";
		$logoWidth = 40; // 15mm
		$logo = $this->Image($logoFileName, $logoX, $this->GetY(), $logoWidth);
   }
}

class ENGAGEMENT_PDF_With_PREPrinter extends TCPDF {
	public function Header() {
		$headerData = $this->getHeaderData();
        $this->writeHTMLCell(0, 0, '', '', $headerData['string'], 0, 0, false, "L", true);
   }

   public function Footer() {
		// Position at 25 mm from bottom
        $this->SetY(-20);
        $this->SetX(10);
        // Set font
        $this->SetFont('helvetica', '', 8);
        
        // Page number
		$this->Cell(0, 0, 'Page '.$this->getAliasNumPage().'/'.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
		$this->Ln();
   }
}

class ENGAGEMENT_PDF_WITH_NORMAL_FOOTER extends TCPDF {
	public function Header() {
		$headerData = $this->getHeaderData();
        $this->writeHTMLCell(0, 0, '', '', $headerData['string'], 0, 0, false, "L", true);
   	}

	public function Footer() {
		// Position at 25 mm from bottom
        $this->SetY(-20);
        $this->SetX(10);
        // Set font
        $this->SetFont('helvetica', '', 8);
        
        // Page number
		$this->Cell(0, 0, 'Page '.$this->getAliasNumPage().'/'.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
		$this->Ln();
   }
}

class NEWPDF extends TCPDF {

	public function Footer() {
		// Position at 25 mm from bottom
        $this->SetY(-20);
        // $this->SetX(10);
        // Set font
        $this->SetFont('helvetica', 'B', 8);
        
        // Page number
		$this->Cell(0, 0, 'Page '.$this->getAliasNumPage().' of '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
   }
}

class DRIW_PDF extends TCPDF {
	protected $last_page_flag = false;
 	protected $total_page = 1;
 	protected $one_page_only = false;

 	public function Close() {
	    $this->last_page_flag = true;

	    if($this->total_page == 1){
	    	$this->one_page_only = true;
	    }

	    parent::Close();
	}

	public function Header() {
		$headerData = $this->getHeaderData();
        $this->writeHTMLCell(0, 0, '', '', $headerData['string'], 0, 0, false, "L", true);
   }

   public function Footer() {
		// Position at 25 mm from bottom
        $this->SetY(-20);
        $this->SetX(10);
        // Set font
        $this->SetFont('helvetica', 'B', 8);
		// Page number
        if (empty($this->pagegroups)) {
            $pagenumtxt = 'Page '.' '.$this->getAliasNumPage().'of'.$this->getAliasNbPages();
        } else {
            $pagenumtxt = 'Page '.' '.$this->getPageNumGroupAlias().'of'.$this->getPageGroupAlias();
        }
        
        if(!$this->one_page_only){
	        $this->SetFont('helvetica', 'I', 8);
	        // Page number
			$this->Cell(0, 0, 'Page '.$this->getAliasNumPage().' of '.$this->getAliasNbPages(), 0, false, 'R', 0, '', 0, false, 'T', 'M');
			$this->Ln();
        }

        $this->total_page++;
   }
}